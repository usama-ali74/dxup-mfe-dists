{"version":3,"file":"715.b01c6ed942e7d706f6f6.js","mappings":"qRAEA,MAkBA,GAlBiBA,E,SAAAA,IAAe,CAC9B,mCAAoC,CAClCC,GAAI,mCACJC,eAAgB,iBAChBC,YAAa,4FAEf,0CAA2C,CACzCF,GAAI,0CACJC,eAAgB,sFAChBC,YAAa,uKAEf,gCAAiC,CAC/BF,GAAI,gCACJC,eAAgB,6BAChBC,YAAa,gG,eCNjB,MAAMC,EAAcC,IAEd,IAFe,KACnBC,EAAI,SAAEC,EAAQ,kBAAEC,EAAiB,SAAEC,EAAQ,cAAEC,GAC9CL,EACC,MAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,cAAY,KAC9BH,EAAU,WAAUJ,KAAYE,IAAW,GAC1C,CAACF,EAAUE,IAEd,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,KACtB,IACAX,MAEHQ,EAAAA,EAAAA,KAAA,MAAAD,SAAKX,EAAKgB,cAAcC,EAAS,wCACjCL,EAAAA,EAAAA,KAAA,KAAAD,SACGX,EAAKgB,cAAcC,EAAS,2CAA4C,CACvEf,yBAGJU,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CAACC,QAAQ,UAAUC,QAASb,EAAYI,SAAEX,EAAKgB,cAAcC,EAAS,wCAE9E,EAGPnB,EAAYuB,UAAY,CACtBrB,KAAMsB,EAAAA,GAAUC,WAChBtB,SAAUuB,IAAAA,OAAiBD,WAC3BrB,kBAAmBsB,IAAAA,OAAiBD,WACpCpB,SAAUqB,IAAAA,OAAiBD,WAC3BnB,cAAeoB,IAAAA,OAAiBD,YAElC,SAAeE,EAAAA,EAAAA,GAAW3B,E","sources":["webpack://@edx/frontend-app-learning/./src/courseware/course/sequence/content-lock/messages.js","webpack://@edx/frontend-app-learning/./src/courseware/course/sequence/content-lock/ContentLock.jsx"],"sourcesContent":["import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  'learn.contentLock.content.locked': {\n    id: 'learn.contentLock.content.locked',\n    defaultMessage: 'Content Locked',\n    description: 'Message shown to indicate that a piece of content is unavailable and has a prerequisite.',\n  },\n  'learn.contentLock.complete.prerequisite': {\n    id: 'learn.contentLock.complete.prerequisite',\n    defaultMessage: \"You must complete the prerequisite: ''{prereqSectionName}'' to access this content.\",\n    description: 'Message shown to indicate which prerequisite the student must complete prior to accessing the locked content.  {prereqSectionName} is the name of the prerequisite.',\n  },\n  'learn.contentLock.goToSection': {\n    id: 'learn.contentLock.goToSection',\n    defaultMessage: 'Go To Prerequisite Section',\n    description: 'A button users can click that navigates their browser to the prerequisite of this section.',\n  },\n});\n\nexport default messages;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\n\nimport messages from './messages';\n\nconst ContentLock = ({\n  intl, courseId, prereqSectionName, prereqId, sequenceTitle,\n}) => {\n  const navigate = useNavigate();\n  const handleClick = useCallback(() => {\n    navigate(`/course/${courseId}/${prereqId}`);\n  }, [courseId, prereqId]);\n\n  return (\n    <>\n      <h3>\n        <FontAwesomeIcon icon={faLock} />\n        {' '}\n        {sequenceTitle}\n      </h3>\n      <h4>{intl.formatMessage(messages['learn.contentLock.content.locked'])}</h4>\n      <p>\n        {intl.formatMessage(messages['learn.contentLock.complete.prerequisite'], {\n          prereqSectionName,\n        })}\n      </p>\n      <p>\n        <Button variant=\"primary\" onClick={handleClick}>{intl.formatMessage(messages['learn.contentLock.goToSection'])}</Button>\n      </p>\n    </>\n  );\n};\nContentLock.propTypes = {\n  intl: intlShape.isRequired,\n  courseId: PropTypes.string.isRequired,\n  prereqSectionName: PropTypes.string.isRequired,\n  prereqId: PropTypes.string.isRequired,\n  sequenceTitle: PropTypes.string.isRequired,\n};\nexport default injectIntl(ContentLock);\n"],"names":["defineMessages","id","defaultMessage","description","ContentLock","_ref","intl","courseId","prereqSectionName","prereqId","sequenceTitle","navigate","useNavigate","handleClick","useCallback","_jsxs","_Fragment","children","_jsx","FontAwesomeIcon","icon","faLock","formatMessage","messages","Button","variant","onClick","propTypes","intlShape","isRequired","PropTypes","injectIntl"],"sourceRoot":""}