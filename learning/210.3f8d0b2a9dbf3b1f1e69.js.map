{"version":3,"file":"210.3f8d0b2a9dbf3b1f1e69.js","mappings":"mwCAaA,MAIMA,EAAmBC,IAAiB,IAAhB,QAAEC,GAASD,EACnC,MAAM,SACJE,GACED,GAGFE,MAAOC,EAAS,aAChBC,IACEC,EAAAA,EAAAA,IAAS,iBAAkBJ,GAEzBK,EAAqBF,EAAe,CAAEG,SAAUH,GAAiB,CAAC,EAElEI,EAAQ,IAAIC,KAAKN,GAAa,IAAIM,KAClCC,GACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAqBC,EAAA,CAEpBC,MAAON,EAAQ,IACfO,QAAQ,OAERC,wBArBW,SAsBPV,GALA,iBAQR,OAAIE,EA1BSS,OA4BTN,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACC,QAAQ,OAAOC,KAAMC,EAAAA,EAAKC,UAC/BX,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CACfC,GAAG,qCACHC,eAAe,sDACfC,YAAY,wDACZC,OAAQ,CACNC,iBACEjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAahB,EAAA,CAEZiB,IAAI,UACJC,MAAM,QACNC,KAAK,UACLC,aAAa,QACbnB,MAAOX,GACHG,GANA,mBASRI,sBAQRwB,EAAAA,EAAAA,MAAChB,EAAAA,EAAK,CAACC,QAAQ,OAAOC,KAAMC,EAAAA,EAAKC,SAAA,EAC/BX,EAAAA,EAAAA,KAAA,UAAAW,UACEX,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CACfC,GAAG,oCACHC,eAAe,sDACfC,YAAY,wDACZC,OAAQ,CACNQ,iBACExB,EAAAA,EAAAA,KAACyB,EAAAA,GAAavB,EAAA,CAEZiB,IAAI,UACJC,MAAM,QACNC,KAAK,UACLlB,MAAOX,GACHG,GALA,mBAQRI,sBAINC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CACfC,GAAG,wCACHC,eAAe,2CACfC,YAAY,6JAER,EAIZ5B,EAAiBuC,UAAY,CAC3BrC,QAASsC,IAAAA,MAAgB,CACvBrC,SAAUqC,IAAAA,SACTC,YAGL,S","sources":["webpack://@edx/frontend-app-learning/./src/alerts/course-start-alert/CourseStartAlert.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormattedDate,\n  FormattedMessage,\n  FormattedRelativeTime,\n  FormattedTime,\n} from '@edx/frontend-platform/i18n';\nimport { Alert } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nimport { useModel } from '../../generic/model-store';\n\nconst DAY_SEC = 24 * 60 * 60; // in seconds\nconst DAY_MS = DAY_SEC * 1000; // in ms\nconst YEAR_SEC = 365 * DAY_SEC; // in seconds\n\nconst CourseStartAlert = ({ payload }) => {\n  const {\n    courseId,\n  } = payload;\n\n  const {\n    start: startDate,\n    userTimezone,\n  } = useModel('courseHomeMeta', courseId);\n\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n\n  const delta = new Date(startDate) - new Date();\n  const timeRemaining = (\n    <FormattedRelativeTime\n      key=\"timeRemaining\"\n      value={delta / 1000}\n      numeric=\"auto\"\n      // 1 year interval to help auto format. It won't format without updateIntervalInSeconds.\n      updateIntervalInSeconds={YEAR_SEC}\n      {...timezoneFormatArgs}\n    />\n  );\n  if (delta < DAY_MS) {\n    return (\n      <Alert variant=\"info\" icon={Info}>\n        <FormattedMessage\n          id=\"learning.outline.alert.start.short\"\n          defaultMessage=\"Course starts {timeRemaining} at {courseStartTime}.\"\n          description=\"Used when the time remaining is less than a day away.\"\n          values={{\n            courseStartTime: (\n              <FormattedTime\n                key=\"courseStartTime\"\n                day=\"numeric\"\n                month=\"short\"\n                year=\"numeric\"\n                timeZoneName=\"short\"\n                value={startDate}\n                {...timezoneFormatArgs}\n              />\n            ),\n            timeRemaining,\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <Alert variant=\"info\" icon={Info}>\n      <strong>\n        <FormattedMessage\n          id=\"learning.outline.alert.start.long\"\n          defaultMessage=\"Course starts {timeRemaining} on {courseStartDate}.\"\n          description=\"Used when the time remaining is more than a day away.\"\n          values={{\n            courseStartDate: (\n              <FormattedDate\n                key=\"courseStartDate\"\n                day=\"numeric\"\n                month=\"short\"\n                year=\"numeric\"\n                value={startDate}\n                {...timezoneFormatArgs}\n              />\n            ),\n            timeRemaining,\n          }}\n        />\n      </strong>\n      <br />\n      <FormattedMessage\n        id=\"learning.outline.alert.start.calendar\"\n        defaultMessage=\"Donâ€™t forget to add a calendar reminder!\"\n        description=\"It's just a recommendation for learners to set a reminder for the course starting date and is shown when the course starting date is more than a day. \"\n      />\n    </Alert>\n  );\n};\n\nCourseStartAlert.propTypes = {\n  payload: PropTypes.shape({\n    courseId: PropTypes.string,\n  }).isRequired,\n};\n\nexport default CourseStartAlert;\n"],"names":["CourseStartAlert","_ref","payload","courseId","start","startDate","userTimezone","useModel","timezoneFormatArgs","timeZone","delta","Date","timeRemaining","_jsx","FormattedRelativeTime","_objectSpread","value","numeric","updateIntervalInSeconds","DAY_SEC","Alert","variant","icon","Info","children","FormattedMessage","id","defaultMessage","description","values","courseStartTime","FormattedTime","day","month","year","timeZoneName","_jsxs","courseStartDate","FormattedDate","propTypes","PropTypes","isRequired"],"sourceRoot":""}