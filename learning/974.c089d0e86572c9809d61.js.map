{"version":3,"file":"974.c089d0e86572c9809d61.js","mappings":"wvCAWA,MAIMA,EAAiBC,IAAiB,IAAhB,QAAEC,GAASD,EACjC,MAAM,YACJE,EAAW,QACXC,EAAO,aACPC,GACEH,EAEEI,EAAqBD,EAAe,CAAEE,SAAUF,GAAiB,CAAC,EAExE,IAAIG,EACJ,MAAMC,EAAQ,IAAIC,KAAKN,GAAW,IAAIM,KAChCC,GACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAqBC,EAAA,CAEpBC,MAAON,EAAQ,IACfO,QAAQ,OAERC,wBAnBW,SAoBPX,GALA,iBASR,GAAIG,EAzBSS,MAyBO,CAClB,MAAMC,GACJP,EAAAA,EAAAA,KAACQ,EAAAA,GAAaN,EAAA,CAEZO,IAAI,UACJC,MAAM,QACNC,KAAK,UACLC,aAAa,QACbT,MAAOX,GACHE,GANA,iBASRE,GACEI,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,CACfC,GAAG,mCACHC,eAAe,4DACfxB,YAAY,wDACZyB,OAAQ,CACNT,gBACAR,kBAIR,KAAO,CACL,MAAMkB,GACJjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAahB,EAAA,CAEZO,IAAI,UACJC,MAAM,QACNC,KAAK,UACLR,MAAOX,GACHE,GALA,iBAQRE,GACEI,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,CACfC,GAAG,kCACHC,eAAe,4DACfxB,YAAY,wDACZyB,OAAQ,CACNC,gBACAlB,kBAIR,CAEA,OACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAQ,OAAOC,KAAMC,EAAAA,EAAKC,SAAA,EAC/BxB,EAAAA,EAAAA,KAAA,UAAAwB,SAAS5B,KAAaI,EAAAA,EAAAA,KAAA,SACrBT,IACK,EAIZH,EAAeqC,UAAY,CACzBnC,QAASoC,IAAAA,MAAgB,CACvBnC,YAAamC,IAAAA,OACblC,QAASkC,IAAAA,OACTjC,aAAciC,IAAAA,SACbC,YAGL,S","sources":["webpack://@edx/frontend-app-learning/./src/course-home/outline-tab/alerts/course-end-alert/CourseEndAlert.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormattedDate,\n  FormattedMessage,\n  FormattedRelativeTime,\n  FormattedTime,\n} from '@edx/frontend-platform/i18n';\nimport { Alert } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nconst DAY_SEC = 24 * 60 * 60; // in seconds\nconst DAY_MS = DAY_SEC * 1000; // in ms\nconst YEAR_SEC = 365 * DAY_SEC; // in seconds\n\nconst CourseEndAlert = ({ payload }) => {\n  const {\n    description,\n    endDate,\n    userTimezone,\n  } = payload;\n\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n\n  let msg;\n  const delta = new Date(endDate) - new Date();\n  const timeRemaining = (\n    <FormattedRelativeTime\n      key=\"timeRemaining\"\n      value={delta / 1000}\n      numeric=\"auto\"\n      // 1 year interval to help auto format. It won't format without updateIntervalInSeconds.\n      updateIntervalInSeconds={YEAR_SEC}\n      {...timezoneFormatArgs}\n    />\n  );\n\n  if (delta < DAY_MS) {\n    const courseEndTime = (\n      <FormattedTime\n        key=\"courseEndTime\"\n        day=\"numeric\"\n        month=\"short\"\n        year=\"numeric\"\n        timeZoneName=\"short\"\n        value={endDate}\n        {...timezoneFormatArgs}\n      />\n    );\n    msg = (\n      <FormattedMessage\n        id=\"learning.outline.alert.end.short\"\n        defaultMessage=\"This course is ending {timeRemaining} at {courseEndTime}.\"\n        description=\"Used when the time remaining is less than a day away.\"\n        values={{\n          courseEndTime,\n          timeRemaining,\n        }}\n      />\n    );\n  } else {\n    const courseEndDate = (\n      <FormattedDate\n        key=\"courseEndDate\"\n        day=\"numeric\"\n        month=\"short\"\n        year=\"numeric\"\n        value={endDate}\n        {...timezoneFormatArgs}\n      />\n    );\n    msg = (\n      <FormattedMessage\n        id=\"learning.outline.alert.end.long\"\n        defaultMessage=\"This course is ending {timeRemaining} on {courseEndDate}.\"\n        description=\"Used when the time remaining is more than a day away.\"\n        values={{\n          courseEndDate,\n          timeRemaining,\n        }}\n      />\n    );\n  }\n\n  return (\n    <Alert variant=\"info\" icon={Info}>\n      <strong>{msg}</strong><br />\n      {description}\n    </Alert>\n  );\n};\n\nCourseEndAlert.propTypes = {\n  payload: PropTypes.shape({\n    description: PropTypes.string,\n    endDate: PropTypes.string,\n    userTimezone: PropTypes.string,\n  }).isRequired,\n};\n\nexport default CourseEndAlert;\n"],"names":["CourseEndAlert","_ref","payload","description","endDate","userTimezone","timezoneFormatArgs","timeZone","msg","delta","Date","timeRemaining","_jsx","FormattedRelativeTime","_objectSpread","value","numeric","updateIntervalInSeconds","DAY_SEC","courseEndTime","FormattedTime","day","month","year","timeZoneName","FormattedMessage","id","defaultMessage","values","courseEndDate","FormattedDate","_jsxs","Alert","variant","icon","Info","children","propTypes","PropTypes","isRequired"],"sourceRoot":""}