{"version":3,"file":"app.c2c8a4b4f5c9cd15b2e2.js","mappings":";ioEACA,IAAMA,EAAY,SAACC,EAAQC,GACzB,GAAIA,IAASC,OAAOC,YAClB,OAAOH,EAGT,GAAa,aAATC,EACF,OAAAG,EAAcJ,GAGhB,GAAIC,KAAQD,GAAmB,mBAATC,EACpB,OAAOD,EAAOC,GAGhBI,QAAQC,IAAIL,EAAKM,YACjBF,QAAQG,MAAM,CAAER,OAAAA,EAAQC,KAAAA,IACxB,IAAMQ,EAAIC,MAAM,qBAADC,OAAsBV,EAAKM,WAAU,MACpDF,QAAQG,MAAMC,EAAEG,MAElB,EAIA,QAFmB,SAACC,GAAI,OAAK,IAAIC,MAAMD,EAAM,CAAEE,IAAKhB,GAAY,0BCbhE,QAN6B,SAACiB,EAAYC,GAAI,OAAKD,EAAWE,IAAOD,GAAME,SAAU,CACnFC,KAAM,UACNC,MAAO,OACPC,IAAK,WACL,ECNK,IAAMC,EAAa,WAAH,MAAU,CAAC,CAAC,ECEtBC,EAAgBC,EAAW,CACtCC,SAAU,WACVC,QAAS,UACTC,UAAW,YACXC,OAAQ,WAGGC,EAAcL,EAAW,CACpCM,WAAY,aACZC,YAAa,cACbC,yBAA0B,2BAC1BC,2BAA4B,6BAC5BC,yBAA0B,2BAC1BC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,yBAA0B,2BAC1BC,wBAAyB,0BACzBC,WAAY,aACZC,mBAAoB,uBAOTC,GAJajB,EAAW,CACnCkB,aAAc,sBAGalB,EAAW,CACtCmB,WAAY,IACZC,aAAc,IACdC,UAAW,IACXC,SAAU,IACVC,SAAU,IACVC,YAAa,mtCC7Bf,IAYaC,EAAS,SAACC,GAAG,cAAAxC,OAAawC,EAAG,EAE7BC,EAAQC,KAAKC,MAGpBC,GAAMC,EAAAA,EAAAA,IAAY,CACtBvD,KAAM,MACNwD,aAnBmB,CACnBC,WAAY,EACZC,WAAY,CAAC,EACbC,YAAa,GACbC,kBAAmB,CAAC,EACpBC,oBAAqB,CAAC,EACtBC,iBAAkB,CAAC,EACnBC,iBAAkB,GAClBC,YAAa,CAAC,EACdC,mBAAoB,CAAC,GAWrBC,SAAU,CACRC,YAAa,SAACC,EAAKC,GAAA,IAAeC,EAAOD,EAAlBE,QAAWD,QAAO,OAAAE,EAAAA,EAAA,GACpCJ,GAAK,IACRV,WAAYY,EAAQG,QAClB,SAACC,EAAKC,EAAMC,GACV,IAAMC,EAAGL,EAAAA,EAAA,GAAQG,GAAI,IAAE1B,OAAQA,EAAO2B,KAItC,OAHoC,OAAhCC,EAAIC,WAAWC,eACjBF,EAAIC,WAAWC,aAAe5B,GAEhCqB,EAAAA,EAAA,GAAYE,GAAG,GAAAM,EAAA,GAAG/B,EAAO2B,GAASC,GACpC,GACA,CAAC,IACF,EAEHI,eAAgB,SAACb,EAAKc,GAAA,IAAIX,EAAOW,EAAPX,QAAO,OAAAC,EAAAA,EAAA,GAC5BJ,GAAK,IACRR,kBAAmBW,EAAQX,kBAC3BC,oBAAqBU,EAAQV,oBAC7BC,iBAAkBS,EAAQT,iBAC1BC,iBAAkBQ,EAAQR,iBAC1BoB,oBAAqBZ,EAAQY,qBAAmB,EAElDC,yBAA0B,SAAChB,EAAKiB,GAAA,IAAId,EAAOc,EAAPd,QAAO,OAAAC,EAAAA,EAAA,GACtCJ,GAAK,IACRH,mBAAoB,CAAEhB,OAAQsB,IAAS,EAEzCe,cAAe,SAAClB,EAAKmB,GAAA,IAAIhB,EAAOgB,EAAPhB,QAAO,OAAAC,EAAAA,EAAA,GAAaJ,GAAK,IAAEX,WAAYc,GAAO,KAIrEiB,EAAUhE,EAAW8B,EAAIkC,SAEvBC,EAAYnC,EAAZmC,mBCnDKC,EAAc,SAACtB,GAAK,OAAKA,EAAMd,GAAG,EACzCqC,EAAmB,SAACC,GAAE,OAAKC,EAAAA,EAAAA,IAAe,CAACC,GAAqBF,EAAG,EAG5DG,EAAkBvE,EAAW,CACxCkC,WAAYiC,GAAiB,SAAArC,GAAG,OAAIA,EAAII,UAAU,IAClDI,iBAAkB6B,GAAiB,SAAArC,GAAG,OAAIA,EAAIQ,gBAAgB,IAC9DC,iBAAkB4B,GAAiB,SAAArC,GAAG,OAAIA,EAAIS,gBAAgB,IAC9DH,kBAAmB+B,GAAiB,SAAArC,GAAG,OAAIA,EAAIM,iBAAiB,IAChEC,oBAAqB8B,GAAiB,SAAArC,GAAG,OAAIA,EAAIO,qBAAuB,CAAC,CAAC,IAC1EI,mBAAoB0B,GAAiB,SAAArC,GAAG,OAAIA,EAAIW,kBAAkB,IAClER,WAAYkC,GAAiB,SAAArC,GAAG,OAAIA,EAAIG,UAAU,IAClD0B,oBAAqBQ,GAAiB,SAAArC,GAAG,OAAIA,EAAI6B,mBAAmB,MAGzDa,EAAsBxE,EAAW,CAC5CyE,YAAa,SAAA5B,GAAc,OAAAA,EAAX4B,WAA6B,EAC7CC,OAAQ,SAAAhB,GAAS,OAAAA,EAANgB,MAAmB,EAC9BC,eAAgB,SAAAd,GAAiB,OAAAA,EAAdc,cAAmC,EACtDC,UAAW,SAAAb,GAAY,OAAAA,EAATa,SAAyB,EACvCC,OAAQ,SAAAC,GAAS,OAAAA,EAAND,MAAmB,EAC9BvB,WAAY,SAAAyB,GAAa,OAAAA,EAAVzB,UAA2B,EAC1CnB,YAAa,SAAA6C,GAAc,OAAAA,EAAX7C,WAA6B,EAC7C8C,UAAW,SAAAC,GAAY,OAAAA,EAATD,SAAyB,EACvCE,gBAAiB,SAAAC,GAA8B,OAAAA,EAA3BC,SAAYF,eAAuC,IAOzE,UC7BO,IAAMG,GAAajB,EAAAA,EAAAA,IACxB,CAACE,EAAgBrC,aACjB,SAACA,GAAU,OAAKqD,OAAOC,KAAKtD,GAAYuD,MAAM,IAYhD,QAAezF,EAAW,CACxBsF,WAAAA,EACAI,YAZwBrB,EAAAA,EAAAA,IAAe,CAACC,IAAoB,SAACqB,GAAG,OAAKA,EAAM,CAAC,IAa5EC,wBAZoCvB,EAAAA,EAAAA,IACpC,CAACE,EAAgBlC,sBACjB,SAACwD,GAAI,OAAc,OAATA,IAAiD,IAAhCA,EAAKC,sBAA+B,IAW/DC,wBAToC1B,EAAAA,EAAAA,IACpC,CAACE,EAAgB9B,qBACjB,SAACoD,GAAI,OAAoB,MAAfA,EAAKpE,MAAc,qBCZzBuE,EAAa,WAAH,OAASC,EAAAA,EAAAA,MAAYC,YAAY,EAEpCC,EAAY,WAAH,SAAAjH,QAAa+G,EAAAA,EAAAA,MAAYC,aAAY,SAIrDE,EAAQ,GAAHlH,OAAM8G,IAAY,UACvBK,EAAiB,GAAHnH,OAAM8G,IAAY,sBAChCpF,EAAsB,GAAH1B,OAAMiH,IAAW,0BAI7BG,EAAY,SAACC,EAAMC,GAAG,OAAc,MAAPA,GAAeA,EAAIC,WAAW,YAAcD,EAAIC,WAAW,YAAeD,EAAM,GAAHtH,OAAMqH,GAAIrH,OAAGsH,EAAK,EAE5HE,EAAa,SAACF,GAAG,OAAKF,EAAUN,IAAcQ,EAAI,EAIzDG,GAAcD,EAAW,uBAElBE,GAAoB,SAACC,GAAQ,SAAA3H,QAtBL+G,EAAAA,EAAAA,MAAYa,mBAsBkB,qBAAA5H,OAAoB2H,EAAQ,MAG/F,SAAe7G,EAAW,CACxBmG,UAAAA,EACAO,WAAAA,EACAL,eAAAA,EACAO,kBAAAA,GACAG,iBAP8B,SAACC,GAAU,SAAA9H,OAAQiH,IAAW,yBAAAjH,OAAwB8H,EAAU,cAQ9FC,sBApB4B,SAACC,GAAI,SAAAhI,OAAQiH,IAAW,kCAAAjH,OAAiCgI,EAAI,iBAqBzFd,MAAAA,EACAe,cA3BoB,WAAH,SAAAjI,OAAaiH,IAAW,uBA4BzCiB,eAjB4B,SAACZ,GAAG,OAAKF,GAAUL,EAAAA,EAAAA,MAAYoB,kBAAmBb,EAAI,EAkBlFG,YAAAA,GACA/F,oBAAAA,ICvCK,IAWM0G,GAAmC,CALzB,sBACK,2BACE,8BCFtB9C,GAAwCD,EAAnBgD,GJyBC,SAACC,EAAgBC,GAAQ,OAAK,SAAC7E,EAAOnB,GAAM,OACxEgG,EAASD,EAAelD,EAAuBpC,WAAWU,GAAOnB,IAAS,CAC3E,EIzBKE,GAAQ,IAAIC,KACZ8F,GAAuB,IAAI9F,KACjC8F,GAAqBC,QAAQD,GAAqBE,UAAY,KAEvD,IAAMC,GAAc,SAACrI,GAAI,OAAMA,EAAO,IAAIoC,KAAKpC,GAAQ,IAAI,EAErDsI,GAAa9H,EAAW,CACnCyE,YAAa8C,GACX/C,GAAoBC,aACpB,SAACA,GAAW,OAAsB,OAAhBA,EAAuB,CAAC,EAAK,CAC7CsD,cAAe,IAAInG,KAAK6C,EAAYsD,eACpCC,eAAgBtB,EAAWjC,EAAYuD,gBACvCC,eAAgBxD,EAAYwD,eAC5BC,uBAAwBzD,EAAY0D,UAAY,IAAIvG,KAAK6C,EAAYsD,eAAiB,IAAInG,KAC1FwG,aAAc3D,EAAY2D,aAC1BD,SAAU1D,EAAY0D,SACtB,IAEJzD,OAAQ6C,GACN/C,GAAoBE,QACpB,SAACA,GAAM,MAAM,CACX2D,aAAc3B,EAAWhC,EAAO2D,cAChCC,aAAc5D,EAAO4D,aACrBC,WAAY7D,EAAO6D,WACnBC,eAAgB9D,EAAO8D,eACxB,IAEH7D,eAAgB4C,GACd/C,GAAoBG,gBACpB,SAACA,GAAc,MAAM,CAAEnG,KAAMmG,aAAc,EAAdA,EAAgBnG,KAAM,IAErDoG,UAAW2C,GACT/C,GAAoBI,WACpB,SAACA,GAAS,OAAoB,OAAdA,EAAqB,CAAC,EAAI,CACxC6D,QAASnE,GAAmBM,EAAU6D,SACtCC,UAAWpE,GAAmBM,EAAU8D,WAExC7B,SAAUjC,EAAUiC,SACpB8B,WAAY/D,EAAU+D,WACtBC,UAAWhE,EAAUgE,UAErBC,gBAAiBC,KAAKC,MAAkC,IAA5BnE,EAAUiE,iBAEtCG,QAASpE,EAAUoE,QACnBC,aAAcrE,EAAUqE,aACxBC,WAAYtE,EAAUsE,WAEtBC,YAAazC,EAAW9B,EAAUuE,aAClCC,UAAW1C,EAAW9B,EAAUwE,WAChCC,YAAa3C,EAAW9B,EAAUyE,aACnC,IAEHxE,OAAQ0C,GACN/C,GAAoBK,QACpB,SAACA,GACC,OAAKA,GAAyC,IAA/BU,OAAOC,KAAKX,GAAQY,OAG5B,CACL6D,YAAY,EACZC,kBAAmB1E,EAAO0E,kBAC1BC,aAAc3E,EAAO2E,aACrBxC,WAAYnC,EAAOmC,WACnBjI,MAAO8F,EAAO9F,MACd0K,UAAW5E,EAAO4E,UAClBC,cAAe7E,EAAO6E,eATf,CAAEJ,YAAY,EAWzB,IAEFhG,WAAYiE,GACV/C,GAAoBlB,YACpB,SAACA,GACC,GAAkB,MAAdA,EACF,MAAO,CAAEqG,YAAY,GAEvB,IAAAC,EAAiDtG,EAAWuG,iBAApDC,EAAOF,EAAPE,QAASC,EAAeH,EAAfG,gBAAiBC,EAAUJ,EAAVI,WAClC,MAAO,CACLH,iBAAkBvG,EAAWuG,iBAC7BI,UAAWH,KAAaC,GAAmBC,GAC3CL,WAAYrG,EAAWqG,WACvBpG,aAAcD,EAAWC,aACzB2G,WAAY5G,EAAW4G,WAEvBC,qBAAsB7F,GAAmBhB,EAAW6G,sBACpDC,WAAY9G,EAAW8G,WACvBC,QAAS/G,EAAW+G,QACpBC,qBAAsBhH,EAAWgH,qBACjCC,WAAYjH,EAAWiH,WAEvBC,eAAgBlH,EAAWkH,eAC3BC,mBAAoBnH,EAAWmH,mBAC/BC,KAAMpH,EAAWoH,KACjBC,iBAAkBrD,GAAiCsD,SAAStH,EAAWoH,MAE3E,IAEFvI,YAAaoF,GACX/C,GAAoBrC,aACpB,SAACA,GAAgB,IAAA0I,EACf,IAAK1I,GAAmD,IAApCoD,OAAOC,KAAKrD,GAAasD,OAC3C,MAAO,CAAEqF,eAAe,GAE1B,IAAMC,EAAW,IAAInJ,KAAKO,EAAY6I,gBAChCC,EAAiBF,EAAWpJ,GAC5BuJ,GACH/I,EAAYgJ,cACTF,GACDF,GAAYrD,GAEjB,MAAO,CACLoD,eAAe,EAEfM,kBAAmBjJ,EAAYiJ,kBAC/BJ,eAAgBD,EAChBM,UAAWlJ,EAAYkJ,UACvBF,YAAahJ,EAAYgJ,YACzBjE,KAAM/E,EAAY+E,KAElBoE,aAA0C,QAA7BT,EAAA1I,EAAYiJ,yBAAiB,IAAAP,OAAA,EAA7BA,EAA+BpF,QAAS,EACrD8F,WAAYN,EACZC,sBAAAA,EAEJ,IAEFjG,UAAWsC,GACT/C,GAAoBS,WACpB,SAACA,GAAS,MAAM,CAAEuG,UAAWvG,EAAUuG,UAAW,IAEpDrG,gBAAiBoC,GACf/C,GAAoBW,iBACpB,SAACA,GAAe,MAAM,CACpBsG,KAAMtG,EAAgBuG,KAAI,SAAAC,GAAO,MAAK,CACpCtD,aAAcsD,EAAQtD,aACtBuD,WAAYD,EAAQC,WACpBC,gBAAiBF,EAAQE,gBACzBC,YAAaH,EAAQG,YACrBC,WAAYJ,EAAQI,WACpBC,SAAUL,EAAQK,SAClBC,MAAON,EAAQM,MAChB,IACDxG,OAAQN,EAAgBM,OACzB,MAIL,YCvJyB,GAAHvG,QAAM+G,EAAAA,EAAAA,MAAYiG,YAAW,aACzBC,OAAOC,SAASC,SAASC,MAAM,GADlD,UAGMC,GAAWvM,EAAW,CACjCwM,SAAU,WACVP,MAAO,UAGIQ,GAAazM,EAAW,CACnC0M,WAAY,aACZC,WAAY,aACZC,KAAM,OACNC,YAAa,cACbC,SAAU,kwBCVL,IAMMC,GAAgB/M,GAAUwD,GAAAwJ,GAAA,GACpCP,GAAWI,aAAc,SAACnI,GAAM,OAAMA,EAAOpB,WAAWqG,UAAU,IAAAnG,GAAAwJ,GAClEP,GAAWG,MAAO,SAAClI,GAAM,OAA0B,OAArBA,EAAOE,WAAsBF,EAAOE,UAAU+D,UAAU,IAAAnF,GAAAwJ,GACtFP,GAAWK,UAAW,SAACpI,GAAM,OAAKA,EAAOpB,WAAWiH,UAAU,IAAA/G,GAAAwJ,GAC9DP,GAAWC,YAAa,SAAChI,GAAM,OAAKA,EAAOpB,WAAW4G,UAAU,IAAA1G,GAAAwJ,GAChEP,GAAWE,YAAa,SAACjI,GAAM,OAAMA,EAAOpB,WAAW4G,UAAU,IAAA8C,KAGvDC,GAAajN,GAAUwD,GAAA0J,GAAA,GACjCX,GAASC,UAAW,SAAA9I,GAAA,IAAGJ,EAAUI,EAAVJ,WAAU,OAAO,IAAI1B,KAAK0B,EAAWC,aAAa,IAAAC,GAAA0J,GACzEX,GAASN,OAAQ,SAAApI,GAAS,OAAAA,EAANa,OAAoB6D,WAAW4E,aAAa,IAAAD,KAOtDE,GAAc,SAACC,EAAUtJ,GAAA,IAvBfuJ,EAASzK,EAAI0K,EAwBlCC,EAAMzJ,EAANyJ,OACAC,EAAO1J,EAAP0J,QAAO,OACHJ,EACHK,OAR2B,SAAAD,GAAO,OAAKA,EAAQhI,OAC9C,SAAAf,GAAM,OAAI+I,EAAQxK,QAAO,SAAC0K,EAAOD,GAAM,OAAKC,GAASZ,GAAcW,GAAQhJ,EAAO,IAAE,EAAK,EACzF,kBAAM,CAAI,EAMJJ,CAAsBmJ,IAC7BG,MA5BoBN,EA4BDL,GAAWO,GA5BD3K,EA4BU,CAAE0K,QAASC,IAAWjB,GAASC,UA5BrCe,EAAO1K,EAAP0K,QAAc,SAACM,EAAIC,GACrD,QAAsCC,KAAvB,CAACF,EAAIC,GAAIpC,IAAI4B,KAAU,s5BAA/BU,EAACD,EAAA,GAAEE,EAACF,EAAA,GACX,OAAIC,IAAMC,EAAY,GACbD,EAAIC,EAAK,GAAK,IAAMV,GAAW,EAAI,EAC9C,GAwBqF,isCC3BrF,SAAevN,EAAUgD,GAAAA,GAAAA,GAAC,CAAC,EACtBuB,GACA2J,GAAY,IACfpG,WAAAA,GACAsF,YDyByB,SAACxK,EAAKkC,GAI3B,IAHJ0I,EAAM1I,EAAN0I,OACAC,EAAO3I,EAAP2I,QACAU,EAAQrJ,EAARqJ,SAEMrL,EAAUyC,OAAO6I,OAAO7J,EAAgBrC,WAAWU,IACnD6I,EAAOnH,GAAmBxB,EAAS,CAAE0K,OAAAA,EAAQC,QAAAA,IAC7CxL,EAAasC,EAAgBtC,WAAWW,GAE9C,OAAiB,IAAbuL,EACK,CACLE,QAAS5C,EACT6C,SAAU,GAGP,CACLD,QAAS5C,EAAKa,OAAOrK,EAAa,GAAKkM,EAAUlM,EAAakM,GAC9DG,SAAUxF,KAAKyF,KAAK9C,EAAKhG,OAAS0I,GAEtC,0tCEjDA,IAAMnM,IAAYwB,GAAAgL,GAAG,CAAC,EACnBnO,EAAYC,WAAa,CAAEmO,OAAQ1O,EAAcE,WAAUuD,GAAAgL,GAC3DnO,EAAYE,YAAc,CAAEkO,OAAQ1O,EAAcE,WAAUuD,GAAAgL,GAC5DnO,EAAYQ,yBAA2B,CAAE4N,OAAQ1O,EAAcE,WAAUuD,GAAAgL,GACzEnO,EAAYS,wBAA0B,CAAE2N,OAAQ1O,EAAcE,WAAUuD,GAAAgL,GACxEnO,EAAYU,WAAa,CAAE0N,OAAQ1O,EAAcE,WAAUuO,IAIxDE,IAAW3M,EAAAA,EAAAA,IAAY,CAC3BvD,KAAM,WACNwD,aAAAA,GACAU,SAAU,CACRiM,aAAc,SAAC/L,EAAKC,GAAA,IAAIE,EAAOF,EAAPE,QAAO,OAAAC,GAAAA,GAAA,GAC1BJ,GAAK,GAAAY,GAAA,GACPT,EAAQ6L,WAAa,CACpBH,OAAQ1O,EAAcG,UACvB,EAEH2O,gBAAiB,SAACjM,EAAKc,GAAA,IAAIX,EAAOW,EAAPX,QAAO,OAAAC,GAAAA,GAAA,GAC7BJ,GAAK,GAAAY,GAAA,GACPT,EAAQ6L,WAAa,CACpBH,OAAQ1O,EAAcI,UACtB2O,SAAU/L,EAAQ+L,WACnB,EAEHC,YAAa,SAACnM,EAAKiB,GAAA,IAAId,EAAOc,EAAPd,QAAO,OAAAC,GAAAA,GAAA,GACzBJ,GAAK,GAAAY,GAAA,GACPT,EAAQ6L,WAAa,CACpBH,OAAQ1O,EAAcK,OACtBrB,MAAOgE,EAAQhE,QAChB,EAEHiQ,aAAc,SAACpM,EAAKmB,GAAA,IAAIhB,EAAOgB,EAAPhB,QAAO,OAAAC,GAAAA,GAAA,GAC1BJ,GAAK,GAAAY,GAAA,GACPT,EAAQ6L,WAAa,CAAC,GAAC,KAKxB5K,GAAUhE,EAAW0O,GAAS1K,SAC5BC,GAAYyK,GAAZzK,QC3CKyF,GAAgB,SAAC9G,EAAKC,GAAA,IAAI+L,EAAU/L,EAAV+L,WAAU,OAAOhM,EAAM8L,SAASE,EAAW,EAE5EK,GAAiB,SAACC,GAAE,OAAK,SAACN,GAAU,OAAK,SAAChM,GAAK,OAAKsM,EAAGtM,EAAM8L,SAASE,GAAY,IAG3EO,GAAY,SAAHtL,GAAY,OAAAA,EAAN4K,SAAwB1O,EAAcG,OAAO,EAC5DkP,GAAc,SAAHrL,GAAY,OAAAA,EAAN0K,SAAwB1O,EAAcI,SAAS,EAChEkP,GAAW,SAAHvK,GAAY,OAAAA,EAAN2J,SAAwB1O,EAAcK,MAAM,EAE1DkP,GAAc,SAACC,GAAO,IAAAC,EAAA,OAAkB,QAAlBA,EAAKD,EAAQxQ,aAAK,IAAAyQ,GAAU,QAAVA,EAAbA,EAAeV,gBAAQ,IAAAU,OAAA,EAAvBA,EAAyBf,MAAM,EAevE,SAAezO,EAAW,CACxB0J,cAAAA,GACA+F,WAAYR,IAtBY,SAAHvL,GAAY,OAAAA,EAAN+K,SAAwB1O,EAAcE,QAAQ,IAuBzEkP,UAAWF,GAAeE,IAC1BC,YAAaH,GAAeG,IAC5BC,SAAUJ,GAAeI,IACzBtQ,MAAOkQ,IAtBY,SAACM,GAAO,OAAKA,EAAQxQ,KAAK,IAuB7C2Q,UAAWT,IArBY,SAACM,GAAO,IAAAI,EAAA,OAAkB,QAAlBA,EAAKJ,EAAQxQ,aAAK,IAAA4Q,GAAU,QAAVA,EAAbA,EAAeb,gBAAQ,IAAAa,OAAA,EAAvBA,EAAyB9J,IAAI,IAsBjEyJ,YAAaL,GAAeK,IAC5BzJ,KAAMoJ,IArBY,SAACM,GAAO,OAAKA,EAAQ1J,IAAI,IAsB3C9E,WApBwB,SAAC6B,GACzB,IAAM2M,EAAU7F,GAAc9G,EAAO,CAAEgM,WAAYvO,EAAYU,aAC/D,MAAO,CACL6O,eAAgBR,GAAYG,GAC5BM,qBAAsBR,GAASE,GAC/BO,sBAAuBX,GAAUI,GACjCQ,sBAAuBT,GAAYC,GAEvC,ktCCnBA,IAAMS,GAAU,CACdlO,IAAAA,EACA4M,SAAAA,GAGIuB,GAAc,SAACC,GAAQ,OAAK3K,OAAOC,KAAKwK,IAAS/M,QACrD,SAACC,EAAKiN,GACJ,IAAMC,EAAQJ,GAAQG,GAAWD,GACjC,OAAOE,EAAKpN,GAAAA,GAAA,GAAQE,GAAG,GAAAM,GAAA,GAAG2M,EAAYC,IAAUlN,CAClD,GACA,CAAC,EACF,EAEKmN,IAAcC,EAAAA,EAAAA,iBAAgBL,GAAY,YAE1CjM,GAAUhE,EAAWiQ,GAAY,YAEjCM,GAAYvQ,EAAWiQ,GAAY,cAIzC,YCrBO,ICGCO,GAEAC,GDEkCxP,EAAcE,WCoBxD,UAxBQqP,IAAmBE,EAAAA,EAAAA,gBAEnBD,GAAa,CAACE,EAAAA,EAAiBH,IAEvBI,EAAMC,YAClB5M,IACA6M,EAAAA,EAAAA,IAAoBF,EAAMG,gBAAeC,MAArBJ,EAAyBH,+CChB3CQ,GAAgB,CAEpB/K,aAAcgL,6BACdpK,mBAAoBoK,GAOpBC,YAAaD,GAEb7J,kBAAmB6J,GACnBE,sBAAuBF,kBAAYE,uBAAyB,GAC5DC,YAAaH,GACbI,YAAwC,KACxCC,eAA8C,KAC9CC,gBAAgD,KAChDC,SAAUP,2DACVQ,+BAA+BR,2BCP3BS,GAAc,CAClBC,qzHACA,gjIACAC,ugIACA,2qIACA,8xHACA,sxHACA,66IAGF,UACEC,GAAAA,GACAH,GACAI,GAAAA,0GCnBF,IAAMxB,GAAYK,GAAgB9O,IAC5BkC,GAAU4M,GAAc9O,IAGjBkQ,GAAgB,WAAH,OAASC,EAAAA,GAAAA,IAAY1B,GAAUtO,WAAW,EACvDiQ,GAA2B,WAAH,OAASD,EAAAA,GAAAA,IAAY1B,GAAUnO,kBAAkB,EACzE+P,GAA6B,WAAH,OAASF,EAAAA,GAAAA,IAAY1B,GAAUlO,oBAAoB,EAC7E+P,GAA0B,WAAH,OAASH,EAAAA,GAAAA,IAAY1B,GAAUjO,iBAAiB,EACvE+P,GAA4B,WAAH,OAASJ,EAAAA,GAAAA,IAAY1B,GAAU9N,mBAAmB,EAC3E6P,GAAyB,WAAH,OAASL,EAAAA,GAAAA,IAAY1B,GAAU5M,oBAAoB,EAGzE4O,GAAgB,WAAH,OAASN,EAAAA,GAAAA,IAAY1B,GAAU7K,WAAW,EACvD8M,GAA4B,WAAH,OAASP,EAAAA,GAAAA,IAAY1B,GAAU3K,uBAAuB,EAC/E6M,GAAuB,SAACC,GAAI,OAAKT,EAAAA,GAAAA,KAC5C,SAAArP,GAAK,OAAI2N,GAAUnD,YAAYxK,EAAO8P,EAAK,GAC5C,EACYC,GAA4B,WAAH,OAASV,EAAAA,GAAAA,IAAY1B,GAAUxK,uBAAuB,EAG/E6M,GAAoB,SAACnL,GAAQ,OAAK,SAAChG,GAAM,OAAKwQ,EAAAA,GAAAA,KACzD,SAACrP,GAAK,OAAK6E,EAAS7E,EAAOnB,EAAO,GACnC,GAEOqG,GAAeyI,GAAfzI,WACK+K,GAAyBD,GAAkB9K,GAAWrD,aACtDqO,GAAoBF,GAAkB9K,GAAWpD,QACjDqO,GAAuBH,GAAkB9K,GAAWlD,WACpDoO,GAAoBJ,GAAkB9K,GAAWjD,QACjDoO,GAAwBL,GAAkB9K,GAAWxE,YACrD4P,GAAyBN,GAAkB9K,GAAW3F,aACtDgR,GAAmBP,GAAkB9K,GAAW7C,WAChDmO,GAAsBR,GAAkB9K,GAAWnD,gBACnD0O,GAA6BT,GAAkB9K,GAAW3C,iBAE1DmO,GAA4B,SAAC7R,GACxC,IAAMkC,EAAsBW,KACpBkE,EAAmBlE,GAAyB7C,GAA5C+G,eACF+K,EAAkB,CAAEC,WAAW,EAAOC,SAAU,IAEtD,IAAK9P,EACH,MAAO,CAAE+P,SAAUH,EAAiBI,QAASJ,GAE/C,IAAQG,EAAsB/P,EAAtB+P,SAAUC,EAAYhQ,EAAZgQ,QACZC,EAAe,SAACrV,GAAM,MAAM,CAChCiV,UAAWjV,EAAOiV,UAClBC,SAAU,GAAFvU,OAAKsJ,EAAc,KAAAtJ,OAAIX,EAAOsV,WACvC,EACD,MAAO,CAAEH,SAAUE,EAAaF,GAAWC,QAASC,EAAaD,GACnE,EAEaG,GAA6B,SAACrS,GACzC,IAAQkJ,EAAqBrG,GAA6B7C,GAAlDkJ,iBACAoJ,EAAczP,GAAkC7C,GAAhDsS,UACR,OAAOpJ,EAAmB,WAAHzL,OAAc6U,GAAc,EACrD,EAGaC,GAAsC,SAACvS,GAClD,IAAMwS,GAAWC,EAAAA,GAAAA,MACjB,OAAO,kBAAMD,EAASjQ,GAAQJ,yBAAyBnC,GAAQ,CACjE,EAEa0S,GAAsB,SAACC,EAAS3S,GAAoB,QAAA4S,EAAAC,UAAA7O,OAAT8O,EAAI,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJF,EAAIE,EAAA,GAAAH,UAAAG,GAC1D,IAAQ5N,EAAavC,GAA4B7C,GAAzCoF,SACR,OAAO,SAAC7H,GAAC,OAAKoV,EAAOpD,WAAC,EAAD,CAACnK,GAAQ3H,OAAKqV,GAArBH,CAA2BpV,EAAE,CAC7C,EAEa0V,GAAmB,WAC9B,IAAMT,GAAWC,EAAAA,GAAAA,MACjB,OAAO,SAAC9D,GAAK,OAAK6D,EAASjQ,GAAQF,cAAcsM,GAAO,CAC1D,EAEauE,GAAc,WACzB,IAAMV,GAAWC,EAAAA,GAAAA,MACjB,OAAO,SAAArR,GAAgC,IAA7BC,EAAOD,EAAPC,QAAY8R,oXAAUC,CAAAhS,EAAAiS,IAC9Bb,EAASjQ,GAAQF,cAAc,IAC/BmQ,EAASjQ,GAAQP,eAAemR,IAChCX,EAASjQ,GAAQrB,YAAY,CAAEG,QAAAA,IACjC,CACF,ECjFMyN,GAAYK,GAAgBlC,SAC5B1K,GAAU4M,GAAclC,SAEjBqG,GAAoB,WAAH,OAAS9C,EAAAA,GAAAA,IAAY1B,GAAUxP,WAAW,EAE3DkO,GAAiB,SAAAxH,GAAQ,OAAI,SAACuN,GAAW,OAAK/C,EAAAA,GAAAA,IAAYxK,EAASuN,GAAa,GAChFC,GAAsB3Q,GAAsBiM,GAAUpB,WACtD+F,GAAqB5Q,GAAsBiM,GAAUlB,UACrD8F,GAAwB7Q,GAAsBiM,GAAUnB,aACxDgG,GAAuB9Q,GAAsBiM,GAAUd,YACvD4F,GAAkB/Q,GAAsBiM,GAAUxR,OAClDuW,GAAsBhR,GAAsBiM,GAAUb,WACtD6F,GAAwBjR,GAAsBiM,GAAUjB,aACxDkG,GAAiBlR,GAAsBiM,GAAU1K,MAEjD4P,GAAwB,WACnC,IAAMxB,GAAWC,EAAAA,GAAAA,MACjB,OAAO,SAAArR,GAKD,IAJJ+L,EAAU/L,EAAV+L,WACA8G,EAAO7S,EAAP6S,QACAC,EAAS9S,EAAT8S,UACAC,EAAS/S,EAAT+S,UAGA,OADA3B,EAASjQ,GAAQ2K,aAAa,CAAEC,WAAAA,KACzB8G,EAAQG,MAAK,SAAC/G,GACf6G,GAAaA,EAAU7G,GAC3BmF,EAASjQ,GAAQ6K,gBAAgB,CAAED,WAAAA,EAAYE,SAAAA,IACjD,IAAE,OAAO,SAAC/P,GACJ6W,GAAaA,EAAU7W,GAC3BkV,EAASjQ,GAAQ+K,YAAY,CAAEH,WAAAA,EAAY7P,MAAAA,IAC7C,GACF,CACF,EAEa+W,GAAkB,WAC7B,IAAM7B,GAAWC,EAAAA,GAAAA,MACjB,OAAO,SAACtF,GACNqF,EAASjQ,GAAQgL,aAAa,CAAEJ,WAAAA,IAClC,CACF,0BCpCatP,GAAM,WAAH,IAAAyW,EAAA,OAAgBA,GAAAC,EAAAA,GAAAA,OAA6B1W,IAAG0R,MAAA+E,EAAAzB,UAAS,EAQ5D2B,GAAO,SAACzP,EAAK0P,GAAI,OAAKF,EAAAA,GAAAA,MAA6BC,KAAKzP,EAAK2P,GAAAA,UAAsBD,GAAM,EAEzFE,GAASJ,GAAAA,GAQTK,GAAe,SAAC7P,EAAK8P,GAAK,OAAKH,GAAAA,aAC1C,CAAE3P,IAAAA,EAAK8P,MAAAA,GACP,CAAEC,UAAU,EAAMC,iBAAiB,GACpC,EC3BYC,GAAazW,EAAW,CACnC0W,UAAW,YACXC,QAAS,UACTC,eAAgB,kBAChBC,aAAc,gBACdhS,OAAQ,SACR6I,OAAQ,WAuBJoJ,IApBgB9W,EAAW,CAC/B+W,mBAAoB,qBACpBC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,6BAA8B,+BAC9BC,qBAAsB,uBACtBC,+BAAgC,iCAChCC,2BAA4B,6BAC5BC,aAAc,eACdC,oBAAqB,sBACrBC,WAAY,aACZC,cAAe,gBACfC,aAAc,eACdC,eAAgB,iBAChBC,0BAA2B,4BAC3BC,+BAAgC,iCAChCC,mCAAoC,qCACpCC,+BAAgC,mCAGZ,wDAETC,GAAahY,EAAW,CACnC+W,mBAAoB,wCACpBC,mBAAoB,wCACpBC,mBAAoB,wCACpBC,6BAA8B,mDAC9BC,qBAAsB,0CACtBC,+BAAgC,wCAChCC,2BAA4B,wCAC5BC,aAAc,2BACdC,oBAAqB,4BACrBC,WAAY,+BACZC,cAAe,kCACfC,aAAc,iCACdC,eAAgB,+BAChBC,0BAA2B,2CAC3BC,+BAAgC,GAAF3Y,OAAK4X,GAAa,WAChDgB,mCAAoC,GAAF5Y,OAAK4X,GAAa,0BACpDiB,+BAAgC,GAAF7Y,OAAK4X,GAAa,WAChDmB,mBAAoB,+CACpBC,eAAgB,wCAChBC,cAAe,kCACfC,qBAAsB,4CAGXC,GAAYrY,EAAW,CAClCsY,sBAAuB,2BACvBC,8BAA+B,sCAKjC,spBC9DO,IAAMC,GAAUxY,EAAW,CAChCyY,cAAe,iBACfC,iBAAkB,oBAClBC,YAAa,gBACb9R,SAAU,YACV+R,KAAM,OACNC,SAAU,cAGCC,GAAY9Y,EAAW,CAClC+Y,GAAI,KACJC,SAAU,aAGCC,GAAkBzV,GAAA,GAAMgV,GAAQE,iBAAmBI,GAAUE,UAC7DE,GAAkB1V,GAAA,GAAMgV,GAAQC,cAAgBK,GAAUC,ktCCChE,IA2BMI,GAAW,SAAHpU,GAAA,IAAMqU,EAASrU,EAATqU,UAAWvT,EAAId,EAAJc,KAAMgB,EAAQ9B,EAAR8B,SAAQ,OAAOoP,GAAKoD,GAAKjT,MAAO,CAC1EkT,cAAezS,EACf0S,WAAYH,EACZI,KAAMrN,OAAOC,SAASqN,KACtBrT,MAAOsT,KAAKC,UAAU9T,IACtB,EAuBF,SAvD8B,WAAH,IAAM+S,GAANtE,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAe,CAAC,GAAVsE,KAAI,OAAYtZ,GAC/C+W,GAAagD,GAAKlS,gBAAe3D,GAAA,GAAKgV,GAAQI,KAAOA,IACtD,EAqDD,GAnD2C,SAAHlV,GAAA,IAAMwD,EAAIxD,EAAJwD,KAAML,EAAQnD,EAARmD,SAAQ,OAAOoP,GACjEoD,GAAKpS,sBAAsBC,GAAK1D,GAAA,GAC7BgV,GAAQG,YAAc9R,GAC1B,0cCdD,IAAQ4O,GAA0BoE,GAErBC,GAAoB,SAACC,EAAQxF,GACxC,IAAMyF,EAAqBvE,KAC3B,OAAO,kBAAoBuE,svBAAkBhX,CAAC,CAC5C0S,QAASqE,EAAM/I,WAAC,EAADsD,YACZC,GACH,CACJ,EAMa0F,GAAmB,WAC9B,IAAMC,EAAWL,KACjB,OAAOvV,GAAyB6V,GAAoB,CAClDvL,WAAYvO,EAAYC,WACxBqV,UAAW,SAAA9S,GAAA,IAAGgD,EAAIhD,EAAJgD,KAAI,OAAOqU,EAASrU,EAAK,GAE3C,EAEauU,GAA8B,SAAC3Y,GAC1C,IAAQyF,EAAS2S,GAAkCpY,GAA3CyF,KACFyO,EAAYrR,KAClB,OAAOA,IACL,SAAC+V,GAAS,OAAKF,GAAgC,CAAEjT,KAAAA,EAAML,SAAUwT,GAAY,GAC7E,CAAE1E,UAAAA,EAAW/G,WAAYvO,EAAYG,0BAEzC,EAEa8Z,GAAiC,SAAC7Y,GAC7C,IAAQyF,EAAS2S,GAAkCpY,GAA3CyF,KACFyO,EAAYrR,KAElB,OAAOA,IADQ,SAAC+V,GAAS,OAAKF,GAAgC,CAAEjT,KAAAA,EAAML,SAAUwT,GAAY,GAG1F,CAAE1E,UAAAA,EAAW/G,WAAYvO,EAAYK,0BAEzC,EAEa6Z,GAA6B,SAAC9Y,GACzC,IAAA+Y,EAA+BX,GAAkCpY,GAAzDyF,EAAIsT,EAAJtT,KAAMuT,EAAYD,EAAZC,aACR9E,EAAYrR,KAClB,OAAOA,IACL,kBD7BuC,SAAHT,GAAA,IAAMqD,EAAIrD,EAAJqD,KAAMuT,EAAY5W,EAAZ4W,aAAY,OAAOrE,KAAQ,OAE3EC,GACEgD,GAAKpS,sBAAsBC,GAAK1D,GAAA,GAC7BgV,GAAQK,SAAW4B,IAEzB,CCuBON,CAAgC,CAAEjT,KAAAA,EAAMuT,aAAAA,GAAe,GAC7D,CAAE9E,UAAAA,EAAW/G,WAAYvO,EAAYS,yBAEzC,EAEa4Z,GAAwB,SAACjZ,GACpC,IAAQoF,EAAagT,GAAgCpY,GAA7CoF,SACR,OAAOvC,IACL,kBDxB8B,SAAHQ,GAAA,IAAM+B,EAAQ/B,EAAR+B,SAAQ,OAAOoP,GAClDoD,GAAKhT,eAAcrD,GAAAQ,GAAA,GAChBgV,GAAQ3R,SAAWA,GAAaoS,IACpC,CCqBSkB,CAAuB,CAAEtT,SAAAA,GAAW,GAC1C,CAAE+H,WAAYvO,EAAYM,oBAE9B,EAEaga,GAAkB,WAC7B,IAAMT,EAAWL,KACjB,OAAOvV,IACL,SAACsU,GAAI,OAAKuB,GAAmB,CAAEvB,KAAAA,GAAO,GACtC,CAAEjD,UAAW,SAAAjS,GAAA,IAAGmC,EAAInC,EAAJmC,KAAI,OAAOqU,EAASrU,EAAK,EAAE+I,WAAYvO,EAAYU,YAEvE,EAEa6Z,GAAqB,WAChC,IAAM5L,EAAe6K,KACfgB,EAAgBvW,KACtB,OAAO,WACL0K,EAAa3O,EAAYU,YACzB8Z,GACF,CACF,EAEaC,GAAyB,SAACrZ,GACrC,IAAQoF,EAAagT,GAAgCpY,GAA7CoF,SACR,OAAOvC,IACL,SAACyW,GAAM,ODtDwB,SAAHhX,GAAA,IAAM8C,EAAQ9C,EAAR8C,SAAUkU,EAAMhX,EAANgX,OAAM,OAAO9E,GAC3DoD,GAAKzY,oBAAmBoC,GAAAQ,GAAA,GACrBgV,GAAQ3R,SAAWA,GAAckU,GAAU7B,IAC/C,CCmDeiB,CAAwB,CAAEtT,SAAAA,EAAUkU,OAAAA,GAAS,GACzD,CAAEnM,WAAYvO,EAAYO,qBAE9B,EAEaoa,GAAsB,WACjC,IAAQC,EAAiBpB,KAAjBoB,aACR,OAAO,kBAAMhF,GAAKgF,EAAa,CACjC,EAEaC,GAAyB,SAACzZ,GACrC,IAAQuF,EAAe6S,GAA6BpY,GAA5CuF,WACqBmU,EAAeC,EAAAA,WAAiBC,GAAAA,GAArDC,kBAAqBH,SACrBtU,EAAagT,GAAgCpY,GAA7CoF,SACR,OAAO,kBDnC0B,SAAHzB,GAAA,IAAM4B,EAAU5B,EAAV4B,WAAYH,EAAQzB,EAARyB,SAAUsU,EAAQ/V,EAAR+V,SAAQ,OAAOlF,GACzEoD,GAAKtS,iBAAiBC,GACtB,CAAEuU,WAAY1U,EAAUsU,SAAAA,GACzB,CCgCchB,CAAwB,CAAEnT,WAAAA,EAAYH,SAAAA,EAAUsU,SAAAA,GAAW,CAC1E,ECpGaK,GAAmB,SAACpX,GAAE,IAAEqX,EAAOnH,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC/C8G,EAAAA,aAAkB,SAAApc,GAAC,OAAIoF,EAAGpF,EAAET,OAAO6R,MAAM,GAAEqL,EAAS,EAGzCC,GAAgB,WAC3B,IAAQnc,GAAeoc,EAAAA,GAAAA,KAAfpc,WACR,OAAO,SAACC,GAAI,OAAKoc,EAAcrc,EAAYC,EAAK,CAClD,EAEA,UACEkc,cAAAA,GACAF,iBAAAA,ICXK,IAAM3B,GAAajJ,EACbiL,GAAW1B,EACX2B,GAAYC,iDCmBzB,UAvBiBC,EAAAA,GAAAA,IAAe,CAC9BC,uBAAwB,CACtBC,GAAI,yCACJC,eAAgB,2CAChBC,YAAa,wCAEfC,qBAAsB,CACpBH,GAAI,uCACJC,eAAgB,2FAChBC,YAAa,4CAEfE,8BAA+B,CAC7BJ,GAAI,gDACJC,eAAgB,UAChBC,YAAa,+CAEfG,8BAA+B,CAC7BL,GAAI,gDACJC,eAAgB,kBAChBC,YAAa,8vCCjBV,IAEMI,GAAqB,SAAChe,GAAI,IAAEie,EAAOnI,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK,kBAAMoI,EAAAA,GAAAA,IAC9Dle,EAAIwE,GAAAA,GAAA,GACCyZ,GAAO,IAAEE,SPsDO,iBOrDtB,GAEYC,GAAoB,SAACxI,EAASqF,GAAI,OAAK,SAACza,GAGnD,OAFAA,EAAE6d,iBACFzI,IACO0I,YAAW,WAAQC,EAAAA,EAAO3Q,SAASqN,KAAOA,CAAM,GAV7B,IAW5B,CAAC,isCCVM,IAAMuD,GAAgB,CAC3BC,SAAU,yBACVC,SAAU,SACVC,SAAU,mBACVC,aAAc,gBAUHC,GAAqB,SAACjE,EAAWvS,GAAQ,IAAE4V,EAAOnI,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKkI,GACvEpD,EAASpW,GAAA,CACPsa,SAAU7G,GAAWC,UAAW6G,MAAO1W,GAAa4V,GACvD,EAOYe,GAAoB,SAACpE,GAAS,OAAK,SAACvS,EAAU4S,GAAI,OAC7DmD,GAAkBtY,GAA0B8U,EAAWvS,GAAW4S,EAAK,CACxE,EAqCD,UACEzC,mBAhBgC,WAAH,OAC7B1S,GAAyB0T,GAAWhB,oBAAmBhG,WAAC,EAADsD,UAAS,EAgBhE4C,6BAtB0C,SAACrQ,GAAQ,OACnDvC,GAA0B0T,GAAWd,6BAA8BrQ,EAAS,EAsB5EoQ,mBAhBgC,WAAH,OAC7B3S,GAAyB0T,GAAWf,oBAAmBjG,WAAC,EAADsD,UAAS,EAgBhEyC,mBAfgC,WAAH,OAC7BzS,GAAyB0T,GAAWjB,oBAAmB/F,WAAC,EAADsD,UAAS,EAehEmJ,eAd4B,SAAC5W,EAAU4S,GAAI,OAAKmD,IAChD,YAtBkC,SAAC/V,GAAQ,OAAK2V,GAChDxE,GAAWb,qBACX,CAAEmG,SAAU7G,GAAWE,QAAS4G,MAAO1W,GACxC,CAoBGvC,CAA4BuC,EAA5BvC,GAnBsC,SAACuC,GAAQ,OAAK2V,GACtDxE,GAAWX,2BAA0BrU,GAAAA,GAAA,GAChCga,IAAa,IAAEnW,SAAAA,IACrB,CAiBGvC,CAAkCuC,EAAlCvC,GNVsB,SAAHU,GAAA,IAAM6B,EAAQ7B,EAAR6B,SAAevC,GAAgB,CAC1D8U,UAAWpB,GAAWZ,+BACtBvQ,SAAAA,EACAhB,KAAM,CAAEuG,SAAU,sBAClB,CMOE+N,CAAe,CAAEtT,SAAAA,GACnB,GACA4S,EACD,GCjDD,IACEiE,SATsB,SAAC7W,GAAQ,OAAK+V,GACpCJ,GAAmBxE,GAAWE,eAAgB,CAC5CqF,MAAO1W,EACPyW,SAAU7G,GAAW5R,SAEvB+B,GAAkBC,GACnB,2cCZM,IAAM8W,GAAoB,CAC/BL,SAAU7G,GAAWG,eACrBgH,YAAa,yjBCYf,MCRA,IACElZ,OAAAA,GACAG,OAAAA,GACAgZ,WFQF,CACElG,eAN4B,SAAC9Q,EAAUiX,EAAQhT,GAAa,OAAK0R,GACjE1R,EAAgBkN,GAAWJ,0BAA4BI,GAAWL,mwBAAc3U,CAAA,CAC9E8a,OAAAA,EAAQC,UAAWlX,GAAa8W,IACnC,GELCtb,oBC0BF,CACE2b,YA/ByB,SAACC,GAAc,OAAK,kBAAMzB,GACnDxE,GAAWH,+BACX,CAAEoG,eAAAA,GACH,GA6BCC,gBArB6B,SAACD,EAAgBxE,GAAI,OAAKmD,GACvDJ,GACExE,GAAWF,mCACX,CAAEmG,eAAAA,IAEJxE,EACD,EAgBC0E,YARyB,SAACF,EAAgBG,GAAM,OAAK5B,GACrDxE,GAAWD,+BACX,CAAEkG,eAAAA,EAAgBG,OAAAA,GACnB,GDvBCC,aEeF,CACE3G,aAtB0B,SAAC4G,GAAa,OACxC9B,GAAmBxE,GAAWN,aAAc,CAAE4G,cAAAA,EAAeC,YAAa,MAAO,EAsBjF/G,WAfwB,SAAC+G,GAAW,OACpC/B,GAAmBxE,GAAWR,WAAY,CAAE8G,cAAe,KAAMC,YAAAA,GAAc,EAe/E9G,cAP2B,SAAC6G,EAAeC,GAAW,OACtD/B,GAAmBxE,GAAWP,cAAe,CAAE6G,cAAAA,EAAeC,YAAAA,GAAc,GFX5EC,YGP0B,SAAC3X,EAAU4X,GAAI,OAAK,kBbkDxB,SAAHvZ,GAAA,IAAM2B,EAAQ3B,EAAR2B,SAAU4X,EAAIvZ,EAAJuZ,KAAI,OAAOna,GAAgB,CAC9D8U,UAAWpB,GAAWV,aACtBzQ,SAAAA,EACAhB,KAAM,CACJkY,UAAWlX,EACX6X,kBAAmBD,EACnBrS,SAAU,cAEZ,Ca1DoD+N,CAAa,CAAEtT,SAAAA,EAAU4X,KAAAA,GAAO,GHQpFE,YIHF,CACE1G,mBAXgC,SAACwB,GAAI,IAAElF,EAAID,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKsI,GACrDJ,GAAmBxE,GAAWC,uwBAAkBjV,CAAA,CAC9Cma,SAAU,eACVD,SAAU,SACVE,aAAc3G,GAAWI,cACtBtC,IAELkF,EACD,GJMC/L,ODAF,CACEyK,cAf2B,WAAH,OAASqE,GACjCxE,GAAWG,cACX,CAAEmF,SAAU7G,GAAW/I,QAFU8O,EAGhC,EAaDpE,qBAXkC,WAAH,MAAI3K,EAAO6G,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAAKkI,GACpDxE,GAAWI,qBACX,CACEkF,SAAU7G,GAAW/I,OAErBD,WAAaA,unBAASG,QAL4B4O,EAOnD,+GMPI,IAAM5Z,GAAQ5C,EAAW,CAC9B4e,UAAW,SAACld,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAGzCmd,GAAsDC,GAAMzc,oBAApD2b,GAAWa,GAAXb,YAAaG,GAAWU,GAAXV,YAAaD,GAAeW,GAAfX,gBAmClC,SAjC0C,WACxC,QAA8Da,KAA5Bza,GAAasa,WAAU,KAAK,s5BAAvDA,EAASG,EAAA,GAAEC,EAAYD,EAAA,GACxBrI,EAAYmD,GAAW1H,6BAEvB8M,EAAcjB,GAAYtH,EAAUuH,gBACpCiB,EAAaf,GAAYzH,EAAUuH,eAAgB,iBACnDkB,EAAchB,GAAYzH,EAAUuH,eAAgB,UAEpDmB,EAAiBlB,GAAgBxH,EAAUuH,eAAgBvH,EAAUlQ,KAgB3E,OANA4U,EAAAA,WAAgB,WACV1E,GAAaA,EAAU6G,OACzB0B,GAEJ,GAAG,IAEI,CACLL,UAAAA,EACAQ,eAAAA,EACAC,YAlBkB,WAClBH,IACAF,GAAa,EACf,EAgBEM,aAfmB,WACnBH,IACAH,GAAa,EACf,EAaEtI,UAAAA,EAEJ,kBClCa6I,GAA2B,WACtC,IAAQC,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACRC,EAMIC,KALFd,EAASa,EAATb,UACAS,EAAWI,EAAXJ,YACAD,EAAcK,EAAdL,eACAE,EAAYG,EAAZH,aACA5I,EAAS+I,EAAT/I,UAEF,OAAKA,GAAcA,EAAU6G,OAI3BoC,EAAAA,GAAAA,KAACC,GAAAA,EAAW,CACVC,OAAQjB,EACRkB,QAASR,EACTS,gBAAgB,EAChB9T,MAAM,GAAE+T,UAERC,EAAAA,GAAAA,MAAA,OACEC,UAAU,8BACVC,MAAO,CAAEC,UAAW,SAAUJ,SAAA,EAE9BL,EAAAA,GAAAA,KAAA,MAAAK,SACGR,EAAca,GAASpE,uBAAwB,CAC9CsB,MAAO7G,EAAU6G,WAGrBoC,EAAAA,GAAAA,KAAA,KAAAK,SACGR,EAAca,GAAShE,qBAAsB,CAC5CkB,MAAO7G,EAAU6G,WAGrB0C,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAAN,SAAA,EACRL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,WAAWC,QAASpB,EAAYW,SAC7CR,EAAca,GAAS/D,kCAE1BqD,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACG,KAAK,IAAIjH,KAAM/C,EAAUlQ,IAAKia,QAASrB,EAAeY,SAC3DR,EAAca,GAAS9D,yCA5BzB,IAkCX,EAEAgD,GAAyBoB,UAAY,CAAC,EAEtC,4BC1DaC,GAAe,QCwC5B,SAtCwB5gB,EAAW,CACjC6gB,oBAAqB,CACnB3E,GAAI,iDACJE,YAAa,6CACbD,eAAgB,4BAElB2E,oBAAqB,CACnB5E,GAAI,iDACJE,YAAa,qCACbD,eAAgB,oBAElB4E,kBAAmB,CACjB7E,GAAI,+CACJE,YAAa,2CACbD,eAAgB,gHAElB6E,kBAAmB,CACjB9E,GAAI,+CACJE,YAAa,oDACbD,eAAgB,kGAElB8E,mBAAoB,CAClB/E,GAAI,gDACJE,YAAa,iCACbD,eAAgB,iBAElB+E,UAAW,CACThF,GAAI,uCACJE,YAAa,yCACbD,eAAgB,cAElBgF,eAAgB,CACdjF,GAAI,4CACJE,YAAa,0CACbD,eAAgB,gICvBb,IAAMvZ,GAAQ5C,EAAW,CAC9BohB,gBAAiB,SAAC1f,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IA+D/C,SA5DyC,WACvC,IAgBI2f,EACAC,MAjBI9B,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAEF+B,EAAiB1H,GAAWxH,4BAA4B5Q,OAC9D+f,EAGI3H,GAAW3G,uBAAuBqO,GAFpCnW,EAAiBoW,EAAjBpW,kBACAD,EAAWqW,EAAXrW,YAEasW,EAAgB5H,GAAW/G,kBAAkByO,GAApDtV,MACApF,GAAagT,GAAW9G,qBAAqBwO,IAAmB,CAAC,GAAjE1a,SACA8C,EAAekQ,GAAW5G,sBAAsBsO,GAAhD5X,WACF7I,EAA0B+a,GAAStB,2BAA2BgH,GAC9DG,EAA8B7F,GAASvB,+BAA+BiH,GACtE/gB,EAA2Bqb,GAASzB,4BAA4BmH,GAEsBI,KAA9Crd,GAAa8c,gBAAgBva,GAAY,QAAK,s5BAArFua,EAAeO,EAAA,GAAEC,EAAkBD,EAAA,GAItCxW,GACFkW,EAAS7B,EAAca,GAASQ,qBAChCS,EAAO9B,EAAca,GAASU,qBAE9BM,EAAS7B,EAAca,GAASS,oBAAqB,CAAEW,YAAAA,IACvDH,EAAO9B,EAAca,GAASW,oBAEhC,IAAMa,EAAoBhI,GAAW7F,oCAAoC,MAEnE8N,EAAkBhD,GAAMT,aAAa7G,WAAW4J,GAChDW,EAAqBjD,GAAMT,aAAa5G,cAAc8J,EAAgBH,GACtEY,EAAoBlD,GAAMT,aAAa3G,aAAa6J,GAiB1D,MAAO,CACL3C,UAA6B,MAAlB2C,EACXM,kBAAAA,EACAI,gBAAiB9W,EACjBC,kBAAAA,EACAkW,KAAAA,EACAD,OAAAA,EACAD,gBAAAA,EACAc,gBAvBsB,SAAHxe,GAAA,IAAgB0M,EAAK1M,EAAfnF,OAAU6R,MAAK,OAASwR,EAAmBxR,EAAM,EAwB1E+R,aAvBmB,WACff,IAAoBR,IACtBoB,IACAlhB,KACS6I,GACToY,IACAL,EAA4BN,KAE5BU,IACAthB,EAAyB4gB,IAE3BS,GACF,EAaF,ECFA,GAzDkC,WAChC,IAAAO,EAUI/P,KATFjH,EAAiBgX,EAAjBhX,kBACAwT,EAASwD,EAATxD,UACAiD,EAAiBO,EAAjBP,kBACAI,EAAeG,EAAfH,gBACAC,EAAeE,EAAfF,gBACAC,EAAYC,EAAZD,aACAd,EAAMe,EAANf,OACAC,EAAIc,EAAJd,KACAF,EAAegB,EAAfhB,gBAGI7hB,EAAauc,GAAUJ,gBACrB8D,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAER,OACES,EAAAA,GAAAA,MAACL,GAAAA,EAAW,CACVC,OAAQjB,EACRkB,QAAShgB,EACTigB,gBAAgB,EAChBsC,sBAAoB,EACpBC,KAAK,KACLpC,UAAU,aACVjU,MAAOoV,EAAOrB,SAAA,EAEdL,EAAAA,GAAAA,KAAA,MAAAK,SAAKqB,KACLpB,EAAAA,GAAAA,MAACsC,GAAAA,GAAKC,MAAK,CAACtC,UAAU,OAAMF,SAAA,EAC1BL,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKE,MAAK,CAAAzC,SAAEsB,KACbrB,EAAAA,GAAAA,MAACsC,GAAAA,GAAKG,SAAQ,CACZlkB,KAAK,WACL0hB,UAAU,YACVyC,SAAUT,EACV9R,MAAOgR,EAAgBpB,SAAA,CAEtB5U,aAAiB,EAAjBA,EAAmBM,KAAI,SAACkX,GAAO,OAC9B3C,EAAAA,GAAAA,MAACsC,GAAAA,GAAKM,MAAK,CAAwBzS,MAAOwS,EAAQ/b,SAASmZ,SAAA,CACxDpE,EAAcrc,EAAYqjB,EAAQla,WAAW,MAAIkT,EAAcrc,EAAYqjB,EAAQna,WADrEma,EAAQ/b,SAEZ,IAEdob,IACCtC,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKM,MAAK,CAACzS,MAAOwQ,GAAaZ,SAC7BR,EAAca,GAASY,6BAKhChB,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAAN,SAAA,EACRL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,WAAWC,QAASoB,EAAkB7B,SACnDR,EAAca,GAASa,cAE1BvB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACE,QAAS0B,EAAanC,SAAER,EAAca,GAASc,uBAI/D,wICZA,UA1DiBnF,EAAAA,GAAAA,IAAe,CAC9BtP,WAAY,CACVwP,GAAI,4CACJE,YAAa,4DACbD,eAAgB,eAElBxP,WAAY,CACVuP,GAAI,4CACJE,YAAa,4DACbD,eAAgB,eAElBvP,KAAM,CACJsP,GAAI,sCACJE,YAAa,qDACbD,eAAgB,QAElBtP,YAAa,CACXqP,GAAI,6CACJE,YAAa,6DACbD,eAAgB,gBAElBrP,SAAU,CACRoP,GAAI,0CACJE,YAAa,yDACbD,eAAgB,YAElB2G,SAAU,CACR5G,GAAI,0CACJE,YAAa,gCACbD,eAAgB,aAElBvO,KAAM,CACJsO,GAAI,sCACJE,YAAa,0BACbD,eAAgB,QAElB4G,iBAAkB,CAChB7G,GAAI,kDACJE,YAAa,iCACbD,eAAgB,iBAElB6G,UAAW,CACT9G,GAAI,2CACJE,YAAa,yBACbD,eAAgB,eAElB8G,OAAQ,CACN/G,GAAI,wCACJE,YAAa,+BACbD,eAAgB,UAElB+G,aAAc,CACZhH,GAAI,8CACJE,YAAa,gBACbD,eAAgB,mBChDb,IAAMgH,GAAW,SAAHtgB,GAAsB,IAAhBugB,EAASvgB,EAATugB,UACjB5D,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACEG,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKY,SAAQ,CAACjD,UAAU,OAAO9P,MAAOgT,EAAUpD,SAC9CR,EAAca,GAAS+C,KAG9B,EACAD,GAASxC,UAAY,CACnByC,UAAWC,KAAAA,OAAiBC,YAG9B,YCXO,IAAMC,GAAc,CACzB9W,GAAWC,WACXD,GAAWE,WACXF,GAAWG,KACXH,GAAWI,YACXJ,GAAWK,UAGP0W,GAAa,SAAH3gB,GAGV,IAFJ4K,EAAO5K,EAAP4K,QACAgW,EAAkB5gB,EAAlB4gB,mBAEQjE,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAER,OACES,EAAAA,GAAAA,MAACsC,GAAAA,GAAKC,MAAK,CAAAxC,SAAA,EACTL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,2BAA0BF,SAAER,EAAca,GAAS6C,iBAClEvD,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKmB,YAAW,CACfllB,KAAK,wBACLmkB,SAAUc,EACVrT,MAAO3C,EAAQuS,SAEduD,GAAY7X,KAAI,SAAA0X,GAAS,OACxBzD,EAAAA,GAAAA,KAACwD,GAAQ,CAACC,UAAWA,GAAgBA,EAAa,QAK5D,EAEAI,GAAW7C,UAAY,CACrBlT,QAAS4V,KAAAA,QAAkBA,KAAAA,QAAkBC,WAC7CG,mBAAoBJ,KAAAA,KAAeC,YAGrC,YClCO,IAAMK,GAAW,SAAH9gB,GAGf,IAFJ+gB,EAAgB/gB,EAAhB+gB,iBACApW,EAAM3K,EAAN2K,OAEQgS,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACES,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,2BAA0BF,SAAER,EAAca,GAASzS,SAClEqS,EAAAA,GAAAA,MAACsC,GAAAA,GAAKG,SAAQ,CACZlkB,KAAK,OACLmkB,SAAUiB,EACVxT,MAAO5C,EAAOwS,SAAA,EAEdL,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKM,MAAK,CAAC3C,UAAU,OAAO9P,MAAO7D,GAASC,SAASwT,SACnDR,EAAca,GAAS0C,qBAE1BpD,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKM,MAAK,CAAC3C,UAAU,OAAO9P,MAAO7D,GAASN,MAAM+T,SAChDR,EAAca,GAAS2C,kBAKlC,EACAW,GAAShD,UAAY,CACnBiD,iBAAkBP,KAAAA,KAAeC,WACjC9V,OAAQ6V,KAAAA,OAAiBC,YAG3B,kjCC9BO,IAAM1gB,GAAQ5C,EAAW,CAC9BzB,OAAQ,SAACmD,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,ICgB/B,IAAMoiB,GAAuB,SAAHjhB,GAK3B,IAJJ2K,EAAM3K,EAAN2K,OACAuW,EAASlhB,EAATkhB,UACAtW,EAAO5K,EAAP4K,QACAuW,EAAUnhB,EAAVmhB,WAEQxE,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACF9Z,EAAamU,GAAWtH,gBAC9B0R,EDrByC,SAAHphB,GAIlC,IAHJ4K,EAAO5K,EAAP4K,QACAuW,EAAUnhB,EAAVmhB,WACAD,EAASlhB,EAATkhB,UAE0DG,EAAAC,IAAhBC,EAAAA,GAAAA,IAAU,GAAM,GAAnDvE,EAAMqE,EAAA,GAAEG,EAAUH,EAAA,GAAEI,EAAWJ,EAAA,GACeK,EAAAJ,GAAzB7f,GAAa/F,OAAO,MAAK,GAmBrD,MAAO,CACLshB,OAAAA,EACA2E,KAZW,WACX1F,GAAMpR,OAAOyK,gBACbkM,GACF,EAUEI,MARY,WACZ3F,GAAMpR,OAAO0K,qBAAqB3K,GAClC6W,GACF,EAME/lB,OAvBWgmB,EAAA,GAwBXG,UAxBsBH,EAAA,GAyBtBd,mBAxByB,SAAH/f,GAAuC,IAAAihB,EAAAjhB,EAAjCnF,OAAUqmB,EAAOD,EAAPC,QAASxU,EAAKuU,EAALvU,OAChCwU,EAAUZ,EAAWa,IAAMb,EAAWc,QAC9C1U,EACT,EAsBEwT,iBArBuB,SAAH/f,GAA8B,IAAduM,EAAKvM,EAAftF,OAAU6R,MACpC2T,EAAU3T,EACZ,EAqBF,CCLM2U,CAA4B,CAC9BtX,QAAAA,EACAuW,WAAAA,EACAD,UAAAA,IAVAlE,EAAMoE,EAANpE,OACA2E,EAAIP,EAAJO,KACAC,EAAKR,EAALQ,MACAlmB,EAAM0lB,EAAN1lB,OACAmmB,EAAST,EAATS,UACAjB,EAAkBQ,EAAlBR,mBACAG,EAAgBK,EAAhBL,iBAOIoB,GADYC,EAAAA,GAAAA,KAAVC,MACiBC,GAAAA,EAAYC,MAAMC,SAE3C,OACEpF,EAAAA,GAAAA,MAAA,OAAK/D,GAAG,yBAAwB8D,SAAA,EAC9BL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL+E,IAAKZ,EACLlE,QAAQ,kBACR+E,WAAYC,GAAAA,EACZ/E,QAAS+D,EACTiB,UAAW/f,EAAWsa,SAErBR,EAAca,GAAS4C,WAE1BtD,EAAAA,GAAAA,KAAC4C,GAAAA,GAAI,CAAAvC,SACFgF,GAEG/E,EAAAA,GAAAA,MAACyF,GAAAA,GAAK,CACJxF,UAAU,OACVyF,SAAS,OACTC,KAAM/F,EACNC,QAAS2E,EAAMzE,SAAA,EAEfL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,WAAUF,UACvBL,EAAAA,GAAAA,KAAA,KAAAK,SAAIR,EAAca,GAAS4C,aAE7BtD,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,OAAKO,UAAU,kBAAiBF,UAC9BL,EAAAA,GAAAA,KAAC6D,GAAU,CAAO/V,QAAAA,EAASgW,mBAAAA,OAE7B9D,EAAAA,GAAAA,KAAA,OAAKO,UAAU,gCAA+BF,UAC5CL,EAAAA,GAAAA,KAACgE,GAAQ,CAAOnW,OAAAA,EAAQoW,iBAAAA,OAE1BjE,EAAAA,GAAAA,KAAA,OAAKO,UAAU,6BAA4BF,UACzCL,EAAAA,GAAAA,KAACkG,GAAAA,EAAgB,CAACrF,QAAQ,WAAWC,QAASgE,EAAMzE,UAClDL,EAAAA,GAAAA,KAACmG,GAAAA,EAAI,CAACC,IAAKC,GAAAA,YAKjBrG,EAAAA,GAAAA,KAACsG,GAAAA,EAAU,CACTC,YAAa3nB,EACbshB,OAAQA,EACRC,QAAS2E,EACT0B,UAAU,aAAYnG,UAEtBC,EAAAA,GAAAA,MAAA,OACE/D,GAAG,8BACHgE,UAAU,8CAA6CF,SAAA,EAEvDL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,kBAAiBF,UAC9BL,EAAAA,GAAAA,KAAC6D,GAAU,CAAO/V,QAAAA,EAASgW,mBAAAA,OAE7B9D,EAAAA,GAAAA,KAAA,MAAIO,UAAU,oCACdP,EAAAA,GAAAA,KAAA,OAAKO,UAAU,gCAA+BF,UAC5CL,EAAAA,GAAAA,KAACgE,GAAQ,CAAOnW,OAAAA,EAAQoW,iBAAAA,eAQ1C,EACAE,GAAqBnD,UAAY,CAC/BnT,OAAQ6V,KAAAA,OAAiBC,WACzBS,UAAWV,KAAAA,KAAeC,WAC1B7V,QAAS4V,KAAAA,QAAkBA,KAAAA,QAAkBC,WAC7CU,WAAYX,KAAAA,MAAgB,CAC1BwB,IAAKxB,KAAAA,KAAeC,WACpBwB,OAAQzB,KAAAA,KAAeC,aACtBA,YAGL,wCC9Ga8C,GAAsB,SAAHvjB,GAI1B,IAHJ4K,EAAO5K,EAAP4K,QACAuW,EAAUnhB,EAAVmhB,WACAqC,EAAkBxjB,EAAlBwjB,mBAEQ7G,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACES,EAAAA,GAAAA,MAAA,OAAK/D,GAAG,6BAA4B8D,SAAA,CACjCvS,EAAQ/B,KAAI,SAAAgC,GAAM,OACjBiS,EAAAA,GAAAA,KAAC2G,GAAAA,EAAI,CAEHC,UAAWC,GAAAA,EACX/F,QAAS4F,EAAmB3Y,GAAQsS,SAEnCR,EAAca,GAAS3S,KAJnBA,EAKA,KAETiS,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,OAAOC,QAASuD,EAAWyC,MAAMzG,SAC9CR,EAAca,GAASyC,cAIhC,EACAsD,GAAoBzF,UAAY,CAC9BlT,QAAS4V,KAAAA,QAAkBA,KAAAA,QAAkBC,WAC7CU,WAAYX,KAAAA,MAAgB,CAC1ByB,OAAQzB,KAAAA,KACRoD,MAAOpD,KAAAA,OACNC,WACH+C,mBAAoBhD,KAAAA,KAAeC,YAGrC,4BCtCaoD,GAAiB,WAE5B,OADkBzB,EAAAA,GAAAA,KAAVC,MACOC,GAAAA,EAAYC,MAAMuB,QACnC,0BCDaC,GAAS,SAAH/jB,GAAA,IACjBmd,EAAQnd,EAARmd,SAAUQ,EAAO3d,EAAP2d,QAASqG,EAAIhkB,EAAJgkB,KAAM3G,EAASrd,EAATqd,UAAS,OAElCP,EAAAA,GAAAA,KAACmH,GAAAA,EAAK,CAACtG,QAASA,EAASN,UAAWA,EAAW2G,KAAMA,EAAK7G,SACvDA,GACK,EAEV4G,GAAOG,aAAe,CACpBF,KAAMG,GAAAA,EACNxG,QAAS,OACTN,UAAW,QAEb0G,GAAOjG,UAAY,CACjBH,QAAS6C,KAAAA,OACTwD,KAAMxD,KAAAA,KACNrD,SAAUqD,KAAAA,KAAeC,WACzBpD,UAAWmD,KAAAA,QAGb,YC+FA,GAtHwBrjB,EAAW,CACjCinB,mBAAoB,CAClB/K,GAAI,qDACJE,YAAa,yCACbD,eAAgB,iDAElB+K,gBAAiB,CACfhL,GAAI,kDACJE,YAAa,mEACbD,eAAgB,4CAElBgL,kBAAmB,CACjBjL,GAAI,oDACJE,YAAa,sDACbD,eAAgB,uBAElBiL,sBAAuB,CACrBlL,GAAI,wDACJE,YAAa,+CACbD,eAAgB,qHAElBkL,qBAAsB,CACpBnL,GAAI,uDACJE,YAAa,uDACbD,eAAgB,2BAElBmL,eAAgB,CACdpL,GAAI,wDACJE,YAAa,yCACbD,eAAgB,iVAElBoL,sBAAuB,CACrBrL,GAAI,+DACJE,YAAa,yCACbD,eAAgB,oTAElBqL,yBAA0B,CACxBtL,GAAI,kEACJE,YAAa,iEACbD,eAAgB,oHAElBsL,gCAAiC,CAC/BvL,GAAI,yEACJE,YAAa,iEACbD,eAAgB,qFAElBuL,aAAc,CACZxL,GAAI,+CACJE,YAAa,gEACbD,eAAgB,0DAElBwL,mBAAoB,CAClBzL,GAAI,qDACJE,YAAa,qCACbD,eAAgB,2CAElByL,WAAY,CACV1L,GAAI,6CACJE,YAAa,oBACbD,eAAgB,gBAElB0L,UAAW,CACT3L,GAAI,4CACJE,YAAa,4BACbD,eAAgB,gDAElB2L,gBAAiB,CACf5L,GAAI,kDACJE,YAAa,wBACbD,eAAgB,qBAElB4L,aAAc,CACZ7L,GAAI,+CACJE,YAAa,oCACbD,eAAgB,yDAElB6L,oBAAqB,CACnB9L,GAAI,sDACJE,YAAa,iCACbD,eAAgB,yBAElB8L,uBAAwB,CACtB/L,GAAI,0DACJE,YAAa,kDACbD,eAAgB,mEAElB+L,uBAAwB,CACtBhM,GAAI,yDACJE,YAAa,4DACbD,eAAgB,sKAElBgM,wBAAyB,CACvBjM,GAAI,0DACJE,YAAa,oEACbD,eAAgB,4EAElBiM,mBAAoB,CAClBlM,GAAI,qDACJE,YAAa,8DACbD,eAAgB,sCAElBkM,cAAe,CACbnM,GAAI,gDACJE,YAAa,0CACbD,eAAgB,oBAElBmM,oBAAqB,CACnBpM,GAAI,sDACJE,YAAa,+CACbD,eAAgB,sFAElBoM,oBAAqB,CACnBrM,GAAI,sDACJE,YAAa,iCACbD,eAAgB,wHC1Gb,IAAMqM,GAAe,SAAH3lB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC7B+f,EAKI3H,GAAW5G,sBAAsBxR,GAJnC8I,EAAUiX,EAAVjX,WACAD,EAAoBkX,EAApBlX,qBACAF,EAAUoX,EAAVpX,WAAUqe,EAAAjH,EACV3X,iBAAAA,OAAgB,IAAA4e,EAAG,CAAC,EAACA,EAEjB7jB,EAAYiV,GAAW9G,qBAAqBtR,GAC1C+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFjgB,EAAauc,GAAUJ,gBAErBgN,EAA+C7e,EAA/C6e,sBAAuB5e,EAAwBD,EAAxBC,QAASE,EAAeH,EAAfG,WAExC,OAAIO,EAAqB,MAGvB0V,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CACG1V,IACKF,GACF6V,EAAAA,GAAAA,MAAC2G,GAAM,CAAA5G,SAAA,CACJR,EAAca,GAAS4G,oBACvB,KACAzH,EAAca,GAAS6G,qBAG1BjH,EAAAA,GAAAA,MAAC2G,GAAM,CAAA5G,SAAA,CACJR,EAAca,GAAS4G,oBACvB,MACDtH,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CAACC,UAAQ,EAACC,YAAY,GAAE7I,SAC/BR,EAAca,GAAS8G,yBAK/BviB,EAAUkkB,WAAa1e,IACtB6V,EAAAA,GAAAA,MAAC2G,GAAM,CAAA5G,SAAA,CACJR,EAAca,GAAS+G,uBACvB,MACDzH,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CAACC,UAAQ,EAACC,YAAajkB,EAAUqE,cAAgB,GAAG+W,SAC3DR,EAAca,GAASgH,4BAK3Bvd,GAAWE,GAAcpF,EAAU8D,YACpCiX,EAAAA,GAAAA,KAACiH,GAAM,CAAA5G,SACJR,EAAca,GAASkI,oBAAqB,CAC3C7f,UAAWnJ,EAAWqF,EAAU8D,gBAInCoB,GAAW4e,IACZ/I,EAAAA,GAAAA,KAACiH,GAAM,CAAA5G,SAAER,EAAca,GAASiI,yBAIxC,EACAE,GAAa7H,UAAY,CACvBlf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,uCC1DQ5H,GAAkBI,GAAlBJ,cAEKqN,GAAoB,SAAHlmB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC5BgD,EAAcoV,GAAWhH,uBAAuBpR,GACtD+f,EAGI3H,GAAW5G,sBAAsBxR,GAFnC4I,EAAOmX,EAAPnX,QACAE,EAAUiX,EAAVjX,WAEMiB,EAAcqO,GAAW1G,iBAAiB1R,GAA1C+J,UACA7C,EAAekR,GAAW9G,qBAAqBtR,GAA/CkH,WACRqgB,EAAyCnP,GAAW9G,qBAAqBtR,GAAjEoH,EAAemgB,EAAfngB,gBAAiBM,EAAW6f,EAAX7f,YACzB8f,EAAuCpP,GAAWzH,0BAA1C8W,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aACd3J,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFjgB,EAAamc,KAEb0N,EAAY,SAAAC,GAAO,OAAI1J,EAAAA,GAAAA,KAAC2J,GAAAA,GAAU,CAACC,GAAIF,EAAQrJ,SAAEqJ,GAAqB,EAE5E,OAAI5kB,EAAY2D,cAEZ6X,EAAAA,GAAAA,MAAC2G,GAAM,CAACpG,QAAQ,SAAQR,SAAA,CACpBkJ,EAAe1J,EAAca,GAASiH,eAAgB,CAAE4B,aAAcE,EAAUF,KAAmB1J,EAAca,GAASkH,uBAC3Hhd,GAAc,KACdA,IAAe4e,EAAe3J,EAAca,GAASmH,yBAA0B,CAAE2B,aAAcC,EAAUD,KAAmB3J,EAAca,GAASoH,qCAItJhjB,EAAYwD,gBAEZgY,EAAAA,GAAAA,MAAC2G,GAAM,CAACpG,QAAQ,UAAUqG,KAAM2C,GAAAA,EAAYxJ,SAAA,CACzCR,EAAca,GAASwH,WACvBpjB,EAAYuD,iBACXiY,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CACG,MACDL,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CAACC,UAAQ,EAACC,YAAapkB,EAAYuD,eAAegY,SACzDR,EAAca,GAASyH,yBAO/Btc,EAuBD/G,EAAYyD,wBAEZyX,EAAAA,GAAAA,KAACiH,GAAM,CAAA5G,SACJR,EACCa,GAAS4H,uBACT,CAAElgB,cAAexI,EAAWkF,EAAYsD,mBAMzC,KAjCDsC,GAEAsV,EAAAA,GAAAA,KAACiH,GAAM,CAAA5G,SACJR,EAAca,GAASqH,aAAc,CAAE7e,gBAAAA,MAI1CF,GAEAsX,EAAAA,GAAAA,MAAC2G,GAAM,CAACpG,QAAQ,UAASR,SAAA,CACtBR,EAAca,GAASsH,oBACvB,MACDhI,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CAACC,UAAQ,EAACC,YAAa1f,EAAY6W,SAAER,EAAca,GAASuH,kBAK1EjI,EAAAA,GAAAA,KAACiH,GAAM,CAACpG,QAAQ,UAASR,SACtBR,EAAca,GAAS0H,aAAc,CAAElf,gBAAAA,KAgBhD,EACAkgB,GAAkBpI,UAAY,CAC5Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,4BCvFO,IAAMmG,GAAoB,SAAH5mB,GAAwB,IAAlB6mB,EAAW7mB,EAAX6mB,YAC1BpE,ECN8B,SAACoE,GACvC,IAAMpE,EAAMlK,EAAAA,OAAa,MAMzB,OALAA,EAAAA,WAAgB,WACM,OAAhBsO,GACFpE,EAAIqE,QAAQC,OAEhB,GAAG,CAACF,IACG,CAAEpE,IAAAA,EACX,CDFkBuE,CAAyBH,GAAjCpE,IACR,GAAoB,OAAhBoE,EACF,OAAO,KAET,IAAQI,EAAoBJ,EAApBI,WAAYtjB,EAAQkjB,EAARljB,IACpB,OACEyZ,EAAAA,GAAAA,MAACsC,GAAAA,GAAI,CACH,gBAAc,QACdxI,OAAQvT,EACR0Z,UAAU,SACV6J,OAAO,OAAM/J,SAAA,CAEZza,OAAOC,KAAKskB,GAAYpe,KAAI,SAACse,GAAG,OAC/BrK,EAAAA,GAAAA,KAACsK,GAAAA,EAAW,CACVC,GAAG,WAEH1rB,KAAMwrB,EACN5Z,MAAO0Z,EAAWE,IAFbA,EAGL,KAEJrK,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACG,KAAK,SAAS4E,IAAKA,MAGjC,EACAmE,GAAkB1C,aAAe,CAC/B2C,YAAa,MAEfD,GAAkB9I,UAAY,CAC5B+I,YAAarG,KAAAA,MAAgB,CAC3ByG,WAAYzG,KAAAA,SAAmBA,KAAAA,QAC/B7c,IAAK6c,KAAAA,UAIT,YEpCO,IAAM8G,GAAgB,SAAHtnB,GAAA,IAAMkX,EAAMlX,EAANkX,OAAQqQ,EAAOvnB,EAAPunB,QAASV,EAAW7mB,EAAX6mB,YAAW,OAC1DzJ,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,0BAAyBF,SACrCoK,IAEFrQ,IACC4F,EAAAA,GAAAA,KAACW,GAAAA,EAAS,CAACJ,UAAU,OAAMF,UACzBL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzE,WAAY1L,EAAO0L,SAEnBhM,KAAMM,EAAON,MAAQ,IACrB4Q,IAAI,WACJ9rB,OAAO,SACPiiB,QAAQ,kBACRN,UAAU,kBACVO,QAAS1G,EAAO0G,QAAQT,SAEvBjG,EAAOqQ,aAIdzK,EAAAA,GAAAA,KAAC8J,GAAiB,CAACC,YAAaA,MAC/B,EAELS,GAAcpD,aAAe,CAC3BhN,OAAQ,KACR2P,YAAa,MAEfS,GAAcxJ,UAAY,CACxB5G,OAAQsJ,KAAAA,MAAgB,CACtB5J,KAAM4J,KAAAA,OACN5C,QAAS4C,KAAAA,KACT+G,QAAS/G,KAAAA,OACToC,SAAUpC,KAAAA,OAEZ+G,QAAS/G,KAAAA,KAAeC,WACxBoG,YAAarG,KAAAA,MAAgB,CAC3B7c,IAAK6c,KAAAA,OACLyG,WAAYzG,KAAAA,SAAmBA,KAAAA,WAInC,YC1CO,IAAMiH,GAAe,SAAHznB,GAAmB,IAAbpB,EAAMoB,EAANpB,OACvBoD,EAASgV,GAAW7G,kBAAkBvR,GAC5C,OACEke,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CACRlP,KAAM5U,EAAO0E,kBACb8gB,IAAI,WACJ9rB,OAAO,SAAQyhB,SAEdnb,EAAO2E,cAGd,EACA8gB,GAAa3J,UAAY,CACvBlf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YCqCA,GA1DwBtjB,EAAW,CACjCuqB,SAAU,CACRrO,GAAI,kDACJE,YAAa,GACbD,eAAgB,oJAElBqO,gBAAiB,CACftO,GAAI,yDACJE,YAAa,GACbD,eAAgB,oBAElBsO,SAAU,CACRvO,GAAI,kDACJE,YAAa,GACbD,eAAgB,kHAElBuO,qBAAsB,CACpBxO,GAAI,8DACJE,YAAa,GACbD,eAAgB,yEAElBwO,UAAW,CACTzO,GAAI,mDACJE,YAAa,GACbD,eAAgB,cAElByO,YAAa,CACX1O,GAAI,qDACJE,YAAa,GACbD,eAAgB,8JAElB0O,SAAU,CACR3O,GAAI,kDACJE,YAAa,GACbD,eAAgB,mHAElB2O,SAAU,CACR5O,GAAI,kDACJE,YAAa,GACbD,eAAgB,gIAElB4O,cAAe,CACb7O,GAAI,uDACJE,YAAa,GACbD,eAAgB,kBAElB6O,WAAY,CACV9O,GAAI,oDACJE,YAAa,GACbD,eAAgB,eAElB8O,YAAa,CACX/O,GAAI,qDACJE,YAAa,GACbD,eAAgB,kBC7Cb,IAAM+O,GAAkB,SAAHroB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAChC0pB,EAAkDtR,GAAW7G,kBAAkBvR,GAApDgY,EAAI0R,EAAvB5hB,kBAAyBC,EAAY2hB,EAAZ3hB,aACzBoG,EAAmBiK,GAAW9E,oBAA9BnF,eACA4P,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACEG,EAAAA,GAAAA,KAACwK,GAAa,CACZpQ,OAAQ,CAAEN,KAAAA,EAAM2Q,QAAS5K,EAAca,GAAS2K,YAAavF,SAAU7V,GACvEwa,QAAS5K,EACPa,GAASkK,SACT,CACEC,iBAAiB7K,EAAAA,GAAAA,KAAA,KAAAK,SAAIR,EAAca,GAASmK,mBAC5CY,oBAAoBzL,EAAAA,GAAAA,KAAC2K,GAAY,CAAC7oB,OAAQA,IAC1C+H,aAAAA,KAKV,EACA0hB,GAAgBvK,UAAY,CAC1Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YCtBO,IAAM+H,GAAkB,SAAHxoB,GAAmB,IAAbpB,EAAMoB,EAANpB,OACxB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAhW,EAAiBqQ,GAAW7G,kBAAkBvR,GAA9C+H,aACA3C,EAAagT,GAAW9G,qBAAqBtR,GAA7CoF,SAEF4Z,EAAU3B,GAAMja,OAAO6Y,SAAS7W,GAChC8jB,EAAYnL,EAAca,GAASsK,WACnCP,EAAU5gB,EACZgW,EAAca,GAASqK,qBAAsB,CAAElhB,aAAAA,IAC/CgW,EAAca,GAASoK,SAAU,CAAEE,WAAYhL,EAAAA,GAAAA,KAAA,KAAAK,SAAI2K,MAEvD,OACEhL,EAAAA,GAAAA,KAACwK,GAAa,CACZpQ,OAAQ,CAAE0G,QAAAA,EAAS2J,QAASO,GAC5BP,QAASA,GAGf,EACAiB,GAAgB1K,UAAY,CAC1Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,uHC1BO,IAAM1gB,GAAQ5C,EAAW,CAC9BsrB,kBAAmB,SAAC5pB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAgBjD,SAboC,SAACD,GACnC,QAA0E8pB,KAApCjnB,GAAagnB,kBAAkB,QAAK,s5BAAnE5B,EAAW6B,EAAA,GAAEC,EAAcD,EAAA,GAC5BE,EAAyB5P,GAASX,uBAAuBzZ,GAQ/D,MAAO,CAAEioB,YAAAA,EAAagC,oBAPM,SAAC1sB,GAC3BA,EAAE6d,iBACF4O,IACG5V,MAAK,SAACtG,GACLic,EAAejc,EAAQ1J,KACzB,GACJ,EAEF,ECVO,IAAM8lB,GAAqB,SAAH9oB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC3B+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACRoM,EAA6CC,GAA2BpqB,GAAhEioB,EAAWkC,EAAXlC,YAAagC,EAAmBE,EAAnBF,oBACb9b,EAAmBiK,GAAW9E,oBAA9BnF,eACR,OACE+P,EAAAA,GAAAA,KAACwK,GAAa,CACZpQ,OAAQ,CACNqQ,QAAS5K,EAAca,GAAS0K,eAChCtK,QAASiL,EACTjG,SAAU7V,GAEZwa,QAAS5K,EAAca,GAASuK,YAAa,CAC3CQ,oBAAqBzL,EAAAA,GAAAA,KAAC2K,GAAY,CAAC7oB,OAAQA,IAC3CspB,eAAgBpL,EAAAA,GAAAA,KAAA,KAAAK,SAAIR,EAAca,GAAS0K,mBAE7CrB,YAAaA,GAGnB,EACAiC,GAAmBhL,UAAY,CAC7Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YC1BO,IAAMwI,GAAiB,SAAHjpB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC/B0pB,EAAkDtR,GAAW7G,kBAAkBvR,GAApDgY,EAAI0R,EAAvB5hB,kBAAyBC,EAAY2hB,EAAZ3hB,aACzBoG,EAAmBiK,GAAW9E,oBAA9BnF,eACA4P,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACEG,EAAAA,GAAAA,KAACwK,GAAa,CACZpQ,OAAQ,CACNN,KAAAA,EACA2Q,QAAS5K,EAAca,GAAS4K,aAChCxF,SAAU7V,GAEZwa,QAAS5K,EAAca,GAASwK,SAAU,CAAErhB,aAAAA,KAGlD,EACAsiB,GAAenL,UAAY,CACzBlf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YClBO,IAAMyI,GAAkB,SAAHlpB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC1BoD,EAASgV,GAAW7G,kBAAkBvR,GACpC+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACEG,EAAAA,GAAAA,KAACwK,GAAa,CACZC,QAAS5K,EAAca,GAASyK,SAAU,CACxCthB,aAAc3E,EAAO2E,aACrB4hB,oBAAqBzL,EAAAA,GAAAA,KAAC2K,GAAY,CAAC7oB,OAAQA,OAInD,EACAsqB,GAAgBpL,UAAY,CAC1Blf,OAAQ4hB,KAAAA,OAAiBC,YCbpB,IAAM0I,GAAmBhsB,EAAW,CACzCE,QAAS4rB,GACTvB,SAAUW,GACVJ,SDaF,KCYA,MCvBA,GAbwB9qB,EAAW,CACjCjB,MAAO,CACLmd,GAAI,+CACJE,YAAa,GACbD,eAAgB,mFAElB8P,aAAc,CACZ/P,GAAI,sDACJE,YAAa,GACbD,eAAgB,6uCCAb,IAAM+P,GAAe,SAAHrpB,GAAmB,IAAbpB,EAAMoB,EAANpB,OACrB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACF2M,EFG2B,SAAC1qB,GAClC,IAAMoD,EAASgV,GAAW7G,kBAAkBvR,GACpCynB,EAAiBrP,GAAWzH,0BAA5B8W,aACR,IAAKrkB,EAAOyE,WAAc,OAAO,KAEjC,IAAQvK,EAAoC8F,EAApC9F,MAAO0K,EAA6B5E,EAA7B4E,UAAWC,EAAkB7E,EAAlB6E,cACtB0iB,EAAmBf,GASvB,OARI5hB,IACmB,MAAjBC,EACF0iB,EAAmBT,GACVpmB,OAAOC,KAAKwmB,IAAkBphB,SAASlB,KAChD0iB,EAAmBJ,GAAiBtiB,KAIjC,CACL0iB,iBAAAA,EACArtB,MAAAA,EACAmqB,aAAAA,EAEJ,CEvBmB2C,CAA0BpqB,GAC3C,GAAiB,OAAb0qB,EACF,OAAO,KAGT,IAAQC,EAA0CD,EAA1CC,iBAAkBrtB,EAAwBotB,EAAxBptB,MAAOmqB,EAAiBiD,EAAjBjD,aAC3BmD,GAAoB1M,EAAAA,GAAAA,KAAC2J,GAAAA,GAAU,CAACC,GAAIL,EAAalJ,SAAEkJ,IACzD,OACEjJ,EAAAA,GAAAA,MAAC2G,GAAM5jB,GAAAA,GAAA,GAAMjE,GAAS,CAAEyhB,QAAS,WAAU,IAAAR,SAAA,CACxCjhB,IACC4gB,EAAAA,GAAAA,KAAA,KAAGO,UAAU,mBAAkBF,SAC5BkJ,EAAe1J,EAAca,GAASthB,MAAO,CAAEstB,iBAAAA,IAAsB7M,EAAca,GAAS4L,iBAGjGtM,EAAAA,GAAAA,KAACyM,EAAgB,CAAC3qB,OAAQA,OAGhC,EACAyqB,GAAavL,UAAY,CACvBlf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YCxBO,IAAMgJ,GAAoB,SAAHzpB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC1B+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACRgC,EAOI3H,GAAW3G,uBAAuBzR,GANpCqJ,EAAa0W,EAAb1W,cACAQ,EAAWkW,EAAXlW,YACAH,EAAWqW,EAAXrW,YACAH,EAAcwW,EAAdxW,eACAE,EAAqBsW,EAArBtW,sBACAG,EAASmW,EAATnW,UAEM6d,EAAiBrP,GAAWzH,0BAA5B8W,aACFqD,EAAmB1S,GAAW7F,oCAAoCvS,GAClElC,EAAauc,GAAUJ,gBAE7B,OAAK5Q,EAIAQ,GAAgBH,EASjBD,GAEAyU,EAAAA,GAAAA,KAACiH,GAAM,CAAA5G,SACJR,EAAca,GAAS8H,wBAAyB,CAC/Cnd,eAAgBzL,EAAWyL,GAC3BwhB,qBACE7M,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,OAAO8B,KAAK,SAASpC,UAAU,UAAUO,QAAS8L,EAAiBvM,SAChFR,EAAca,GAASgI,qBAOhChd,GAEAsU,EAAAA,GAAAA,KAACiH,GAAM,CAAA5G,SACJR,EAAca,GAAS+H,sBAIvB,MA5BHzI,EAAAA,GAAAA,KAACiH,GAAM,CAACpG,QAAQ,UAASR,SACtBR,EAAca,GAAS6H,uBAAwB,CAC9CkB,UAAWF,IAAgBvJ,EAAAA,GAAAA,KAAC2J,GAAAA,GAAU,CAACC,GAAIL,EAAalJ,SAAEkJ,QAPzD,IAkCX,EACAoD,GAAkB3L,UAAY,CAC5Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,4BC9DamJ,GAAe,SAAH5pB,GAAA,IAAMwC,EAAQxC,EAARwC,SAAQ,OACrCsa,EAAAA,GAAAA,KAAA,MAAIO,UAAU,kCAAiCF,SAC5C3a,EAASqG,KAAI,SAACC,GAAO,OACpBgU,EAAAA,GAAAA,KAAA,MAA6BO,UAAU,OAAMF,UAC3CL,EAAAA,GAAAA,KAAA,KAAGlG,KAAM9N,EAAQI,WAAWiU,SAAErU,EAAQM,SAD/BN,EAAQI,WAEZ,KAEJ,EAGP0gB,GAAa9L,UAAY,CACvBtb,SAAUge,KAAAA,QACRA,KAAAA,MAAgB,CACdtX,WAAYsX,KAAAA,OACZpX,MAAOoX,KAAAA,UAETC,YAGJ,YCQA,GA5BwBtjB,EAAW,CACjCmF,gBAAiB,CACf+W,GAAI,kDACJE,YAAa,oCACbD,eAAgB,sBAElBuQ,aAAc,CACZxQ,GAAI,+CACJE,YAAa,4BACbD,eAAgB,QAElBwQ,gBAAiB,CACfzQ,GAAI,kDACJE,YAAa,gCACbD,eAAgB,sBAElByQ,eAAgB,CACd1Q,GAAI,iDACJE,YAAa,8BACbD,eAAgB,QAElB0Q,kBAAmB,CACjB3Q,GAAI,oDACJE,YAAa,kCACbD,eAAgB,0BCdb,IAAM2Q,GAAwB,SAAHjqB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC9B+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAEFuN,EAAclT,GAAWxG,2BAA2B5R,GAE1D,OACEsrB,aAAW,EAAXA,EAAatnB,QAAS,IACpBwa,EAAAA,GAAAA,MAAC2G,GAAM,CACLC,KAAMmG,GAAAA,EACN9M,UAAU,iEAAgEF,SAAA,EAE1EL,EAAAA,GAAAA,KAAA,QAAMO,UAAU,qBAAoBF,SAAER,EAAca,GAASlb,oBAC7Dwa,EAAAA,GAAAA,KAACsN,GAAW,CAAC5nB,SAAU0nB,EAAYthB,SAI3C,EACAqhB,GAAsBnM,UAAY,CAChClf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YCtBO,IAAM4J,GAAoB,SAAHrqB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC1BkI,EAAekQ,GAAW5G,sBAAsBxR,GAAhDkI,WACR,OACEsW,EAAAA,GAAAA,MAAA,OAAKC,UAAU,sBAAsB,cAAY,oBAAmBF,SAAA,EAClEL,EAAAA,GAAAA,KAACmN,GAAqB,CAACrrB,OAAQA,KAC/Bke,EAAAA,GAAAA,KAAC6I,GAAY,CAAC/mB,OAAQA,KACtBke,EAAAA,GAAAA,KAAC2M,GAAiB,CAAC7qB,OAAQA,IAC1BkI,IAAcgW,EAAAA,GAAAA,KAACoJ,GAAiB,CAACtnB,OAAQA,IACzCkI,IAAcgW,EAAAA,GAAAA,KAACuM,GAAY,CAACzqB,OAAQA,MAG3C,EACAyrB,GAAkBvM,UAAY,CAC5Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,4BC3BA,SAAe,IAA0B,uCC+BzC,GA7BsC,SAAC7hB,GACrC,IAAQmO,EAAmBiK,GAAW9E,oBAA9BnF,eACR4R,EAEI3H,GAAW5G,sBAAsBxR,GADnC2I,EAAUoX,EAAVpX,WAAYH,EAASuX,EAATvX,UAAWI,EAAOmX,EAAPnX,QAASC,EAAoBkX,EAApBlX,qBAElCme,EAEI5O,GAAW3G,uBAAuBzR,GADpCqJ,EAAa2d,EAAb3d,cAAeK,EAAWsd,EAAXtd,YAAaI,EAASkd,EAATld,UAAWD,EAAWmd,EAAXnd,YAGzC6hB,EAA2CtT,GAAW9G,qBAAqBtR,GAAnE2H,EAAS+jB,EAAT/jB,UAIFgkB,GAAqBnjB,GAAcI,GAAWC,EAMpD,MAAO,CACL+iB,oBAXwBF,EAAPnkB,SAEqB4G,IAAmB3F,GAAcI,GAAWC,EAUlFgjB,qBAT2BlkB,GAAcwG,IAAmB3F,GAAcI,GAAWC,EAUrF8iB,kBAAAA,EACAG,sBAdoCJ,EAAVjkB,YAMiB0G,IAAmBxF,EAS9DojB,sBAV4B1iB,GAAiB8E,IAAmB3F,IAAesB,IAAcD,EAW7FmiB,mBAR0B3iB,IAAkBK,GAAgBiiB,EAUhE,ECJA,GAvBwBptB,EAAW,CACjC0tB,UAAW,CACTxR,GAAI,oCACJE,YAAa,8BACbD,eAAgB,oBAElBwR,eAAgB,CACdzR,GAAI,yCACJE,YAAa,8BACbD,eAAgB,YAElByR,yBAA0B,CACxB1R,GAAI,mDACJE,YAAa,yCACbD,eAAgB,yCAElB0R,wBAAyB,CACvB3R,GAAI,kDACJE,YAAa,8CACbD,eAAgB,8BCRpB,IAAQnF,GAAuB8H,GAAMpa,OAA7BsS,mBAEK8W,GAAkB,SAAHjrB,GAAgC,IAA1BpB,EAAMoB,EAANpB,OAAQssB,EAAWlrB,EAAXkrB,YAChCvO,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAnX,EAAiBwR,GAAW/G,kBAAkBrR,GAA9C4G,aACAW,EAAY6Q,GAAW9G,qBAAqBtR,GAA5CuH,QACAuB,EAAesP,GAAW5G,sBAAsBxR,GAAhD8I,WACAkjB,EAAuBO,GAAuBvsB,GAA9CgsB,mBACFQ,EAAqBpU,GAAW1F,oBAAoB6C,GAAoBvV,EAAQuH,GAChFklB,EAAmB,gDAAHhvB,OAAmD6uB,GACnEI,GACJlO,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAA,OACEO,UAAU,2BACV6F,IAAK1d,EACL+lB,IAAK5O,EAAca,GAASqN,aAG5BnjB,IACE0V,EAAAA,GAAAA,MAAA,QACEC,UAAU,sCACVjU,MAAOuT,EAAca,GAASuN,0BAA0B5N,SAAA,EAExDL,EAAAA,GAAAA,KAAC0O,GAAAA,EAAK,CAACnE,GAAG,MAAM1J,QAAQ,UAAUN,UAAU,QAAOF,SAChDR,EAAca,GAASsN,mBAE1BhO,EAAAA,GAAAA,KAAA,OAAKoG,IAAKuI,GAAgBF,IAAK5O,EAAca,GAASwN,iCAMhE,OAAOJ,GACF9N,EAAAA,GAAAA,KAAA,OAAKO,UAAWgO,EAAiBlO,SAAEmO,KAEpCxO,EAAAA,GAAAA,KAAA,KACEO,UAAWgO,EACXzU,KAAMzQ,EACNyX,QAASwN,EACTM,SAAS,KAAIvO,SAEZmO,GAGT,EACAL,GAAgBnN,UAAY,CAC1Blf,OAAQ4hB,KAAAA,OAAiBC,WACzByK,YAAa1K,KAAAA,OAAiBC,YAGhCwK,GAAgB/G,aAAe,CAAC,EAEhC,yKC1DO,IAAMnkB,GAAQ5C,EAAW,CAC9BwuB,OAAQ,SAAC9sB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAuBtC,SApB4B,SAAHmB,GAGnB,QAFJ4rB,EAAU5rB,EAAV4rB,WACAhtB,EAAMoB,EAANpB,OAEQgJ,EAAuBoP,GAAW5G,sBAAsBxR,GAAxDgJ,mBACmEikB,KAAvCpqB,GAAakqB,OAAO/jB,KAAmB,s5BAApEkkB,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1B9tB,EAAsBib,GAASf,uBAAuBrZ,GAO5D,MAAO,CACLotB,SAPe,WAAH,OAASD,GAAeD,EAAW,EAQ/CG,KAPW,WACXluB,GAAqB+tB,GACrBF,GACF,EAKEE,WAAAA,EAEJ,ECQA,GAlCwB3uB,EAAW,CACjCqhB,OAAQ,CACNnF,GAAI,oCACJE,YAAa,kCACbD,eAAgB,0BAElB4S,UAAW,CACT7S,GAAI,uCACJE,YAAa,8DACbD,eAAgB,yBAElB6S,SAAU,CACR9S,GAAI,sCACJE,YAAa,6DACbD,eAAgB,wBAElBC,YAAa,CACXF,GAAI,yCACJE,YAAa,uCACbD,eAAgB,mFAElB+E,UAAW,CACThF,GAAI,uCACJE,YAAa,yCACbD,eAAgB,cAElB2S,KAAM,CACJ5S,GAAI,kCACJE,YAAa,uCACbD,eAAgB,mBChBb,IAAM8S,GAAqB,SAAHpsB,GAIzB,IAHJ4rB,EAAU5rB,EAAV4rB,WACA7I,EAAI/iB,EAAJ+iB,KACAnkB,EAAMoB,EAANpB,OAEAytB,EAIIC,GAAa,CAAEV,WAAAA,EAAYhtB,OAAAA,IAH7BktB,EAAUO,EAAVP,WACAE,EAAQK,EAARL,SACAC,EAAII,EAAJJ,KAEMtP,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAER,OACEG,EAAAA,GAAAA,KAACC,GAAAA,EAAW,CACVC,OAAQ+F,EACR9F,QAAShgB,EACTigB,gBAAgB,EAChB9T,MAAM,GAAE+T,UAERC,EAAAA,GAAAA,MAAA,OAAKC,UAAU,8BAA8BC,MAAO,CAAEC,UAAW,SAAUJ,SAAA,EACzEL,EAAAA,GAAAA,KAAA,MAAAK,SAAKR,EAAca,GAASgB,WAC5B1B,EAAAA,GAAAA,KAAC4C,GAAAA,GAAK6M,OAAM,CAACxK,SAAU+J,EAAYhM,SAAUkM,EAAS7O,SACnDR,EAAcmP,EAAatO,GAAS0O,UAAY1O,GAAS2O,aAE5DrP,EAAAA,GAAAA,KAAA,KAAAK,SAAIR,EAAca,GAASjE,gBAC3B6D,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAAN,SAAA,EACRL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,WAAWC,QAASgO,EAAWzO,SAC5CR,EAAca,GAASa,cAE1BvB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACE,QAASqO,EAAK9O,SAAER,EAAca,GAASyO,eAKzD,EACAG,GAAmBtO,UAAY,CAC7Blf,OAAQ4hB,KAAAA,OAAiBC,WACzBmL,WAAYpL,KAAAA,KAAeC,WAC3BsC,KAAMvC,KAAAA,KAAeC,YAGvB,uCCDA,SArDwBtjB,EAAW,CACjCqvB,cAAe,CACbnT,GAAI,8CACJE,YAAa,oCACbD,eAAgB,yBAElBmT,cAAe,CACbpT,GAAI,8CACJE,YAAa,2CACbD,eAAgB,cAElBoT,gBAAiB,CACfrT,GAAI,gDACJE,YAAa,4CACbD,eAAgB,YAElBqT,cAAe,CACbtT,GAAI,sDACJE,YAAa,oCACbD,eAAgB,4CAElBsT,WAAY,CACVvT,GAAI,mDACJE,YAAa,wCACbD,eAAgB,eAElBuT,aAAc,CACZxT,GAAI,qDACJE,YAAa,0CACbD,eAAgB,iBAElBwT,cAAe,CACbzT,GAAI,sDACJE,YAAa,oCACbD,eAAgB,sBAElByT,iBAAkB,CAChB1T,GAAI,0DACJE,YAAa,6DACbD,eAAgB,wDAElB0T,WAAY,CACV3T,GAAI,mDACJE,YAAa,iCACbD,eAAgB,oDAElB2T,aAAc,CACZ5T,GAAI,qDACJE,YAAa,0CACbD,eAAgB,yBCzCb,IAAM4T,GAAc,SAAHltB,GAGlB,IAFJwc,EAAWxc,EAAXwc,YACA2Q,EAAantB,EAAbmtB,cAEQxQ,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACES,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAA,MAAAK,SAAKR,EAAca,GAASgP,kBAC5BpP,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAAN,SAAA,EACRL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,WAAWC,QAASpB,EAAYW,SAC7CR,EAAca,GAASiP,kBAE1B3P,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACE,QAASuP,EAAchQ,SAC5BR,EAAca,GAASkP,wBAKlC,EACAQ,GAAYpP,UAAY,CACtBtB,YAAagE,KAAAA,KAAeC,WAC5B0M,cAAe3M,KAAAA,KAAeC,YAGhC,6pBChCO,IAAM2M,GAAajwB,EAAW,CACnCyb,QAAS,UACTyU,WAAY,aACZC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,OAAQ,SACRC,QAAS,UACTC,QAAS,UACTC,KAAM,OACNC,OAAQ,WAGGC,GAAQ,CACnBV,GAAWxU,QACXwU,GAAWC,WACXD,GAAWE,MACXF,GAAWG,OACXH,GAAWI,KACXJ,GAAWK,OACXL,GAAWM,QACXN,GAAWO,QACXP,GAAWQ,MAwDb,UACEpQ,SAtDergB,GAAUwD,GAAAwJ,GAAA,GACxBijB,GAAWxU,QAAU,CACpBS,GAAI,+CACJE,YAAa,iDACbD,eAAgB,wDACjB3Y,GAAAwJ,GACAijB,GAAWC,WAAa,CACvBhU,GAAI,kDACJE,YAAa,gDACbD,eAAgB,qCACjB3Y,GAAAwJ,GACAijB,GAAWE,MAAQ,CAClBjU,GAAI,6CACJE,YAAa,yCACbD,eAAgB,sCACjB3Y,GAAAwJ,GACAijB,GAAWG,OAAS,CACnBlU,GAAI,8CACJE,YAAa,4CACbD,eAAgB,yBACjB3Y,GAAAwJ,GACAijB,GAAWI,KAAO,CACjBnU,GAAI,4CACJE,YAAa,wCACbD,eAAgB,0BACjB3Y,GAAAwJ,GACAijB,GAAWK,OAAS,CACnBpU,GAAI,8CACJE,YAAa,4CACbD,eAAgB,yCACjB3Y,GAAAwJ,GACAijB,GAAWM,QAAU,CACpBrU,GAAI,+CACJE,YAAa,2CACbD,eAAgB,gCACjB3Y,GAAAwJ,GACAijB,GAAWO,QAAU,CACpBtU,GAAI,+CACJE,YAAa,2CACbD,eAAgB,mDACjB3Y,GAAAwJ,GACAijB,GAAWQ,KAAO,CACjBvU,GAAI,4CACJE,YAAa,oCACbD,eAAgB,qCACjB3Y,GAAAwJ,GAAA,oBACkB,CACjBkP,GAAI,0DACJE,YAAa,iDACbD,eAAgB,UACjBnP,KAKD2jB,MAAAA,GACAV,WAAAA,msCCvEK,IAAMW,GAAa,SAAH/tB,GAEjB,IADJib,EAAMjb,EAANib,OAEQ0B,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAMR,OACES,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAA,MAAAK,SAAKR,EAAca,GAASmP,kBAC5BvP,EAAAA,GAAAA,MAACsC,GAAAA,GAAKG,SAAQ,CACZlkB,KAAK,iBACLmkB,SAAU7E,EAAO+S,aACjBzgB,MAAO0N,EAAOgT,SAAS9Q,SAAA,CAEtB+Q,GAAAA,MAAgBrlB,KAbR,SAACse,GAAG,OACjBrK,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKM,MAAK,CAAWzS,MAAO4Z,EAAIhK,SAC9BR,EAAcuR,GAAU1Q,SAAS2J,KADnBA,EAEJ,KAWTrK,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKM,MAAK,CAACzS,MAAO2gB,GAAAA,WAAqBL,OAAO1Q,UAC7CL,EAAAA,GAAAA,KAAC4C,GAAAA,GAAKyO,QAAOhuB,GAAAA,GAAA,GACP8a,EAAOmT,cAAY,IACvBC,YAAa1R,EAAcuR,GAAU1Q,SAAS8Q,4BAIpDlR,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAAN,SAAA,EACRL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,WAAWC,QAAS3C,EAAOsT,WAAWpR,SACnDR,EAAca,GAASoP,eAE1B9P,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACkF,UAAW3H,EAAOuT,UAAW5Q,QAAS3C,EAAOqE,aAAanC,SAC/DR,EAAca,GAASqP,qBAKlC,EACAkB,GAAWjQ,UAAY,CACrB7C,OAAQuF,KAAAA,MAAgB,CACtBjT,MAAOiT,KAAAA,OACP+N,WAAY/N,KAAAA,KACZgO,UAAWhO,KAAAA,KACXwN,aAAcxN,KAAAA,KACd4N,aAAc5N,KAAAA,MAAgB,CAC5BjT,MAAOiT,KAAAA,OACPV,SAAUU,KAAAA,OAEZyN,SAAUzN,KAAAA,OACVlB,aAAckB,KAAAA,KAAeC,aAC5BA,YAGL,YCrDO,IAAMgO,GAAe,SAAHzuB,GAGnB,IAFJ0uB,EAAU1uB,EAAV0uB,WACAlS,EAAWxc,EAAXwc,YAEQG,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,OACES,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAA,MAAAK,SAAKR,EAAca,GAASsP,kBAC5B1P,EAAAA,GAAAA,MAAA,KAAAD,SAAA,CACGuR,GAAc/R,EAAca,GAASuP,kBACrCpQ,EAAca,GAASwP,gBAE1BlQ,EAAAA,GAAAA,KAACW,GAAAA,EAAS,CAAAN,UACRL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACE,QAASpB,EAAYW,SAAER,EAAca,GAASyP,oBAI9D,EACAwB,GAAa3Q,UAAY,CACvBtB,YAAagE,KAAAA,KAAeC,WAC5BiO,WAAYlO,KAAAA,KAAeC,YAG7B,kiCCtBO,IAAM1gB,GAAQ5C,EAAW,CAC9BixB,aAAc,SAACvvB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EAC1C8vB,UAAW,SAAC9vB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EACvC+vB,eAAgB,SAAC/vB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EAC5CgwB,YAAa,SAAChwB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,+GCRpC,IAAMkB,GAAQ5C,EAAW,CAC9B2xB,UAAW,SAACjwB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAG5BkwB,GAAc5xB,EAAW,CACpC6xB,QAAS,UACT/T,OAAQ,SACRgU,SAAU,aAGCC,GAAkB,SAAHlvB,GAA+B,IAMrDmvB,MAN4BvD,EAAU5rB,EAAV4rB,WAAYhtB,EAAMoB,EAANpB,OACuBwwB,KAA7B3tB,GAAaqtB,WAAU,KAAM,s5BAA5DO,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BnU,EDF0B,SAAHjb,GAEzB,IADJpB,EAAMoB,EAANpB,OAG6EkgB,EAAAwC,GAAjC7f,GAAamtB,eAAe,MAAK,GAAtEA,EAAc9P,EAAA,GAAEyQ,EAAiBzQ,EAAA,GAE6B0Q,EAAAlO,GAA7B7f,GAAa2sB,aAAa,IAAG,GAA9DA,EAAYoB,EAAA,GAAEC,EAAeD,EAAA,GAG2BE,EAAApO,GAA7B7f,GAAaktB,WAAU,GAAM,GAAxDA,EAASe,EAAA,GAAEC,EAAYD,EAAA,GAEuCE,EAAAtO,GAA/B7f,GAAaotB,aAAY,GAAM,GAA9DA,EAAWe,EAAA,GAAEC,EAAcD,EAAA,GAE1B3nB,EAAkB+O,GAAW3G,uBAAuBzR,GAApDqJ,cAEF6nB,EAAqC,WAAnBlB,EAA8BR,EAAeQ,EAC/DJ,GAAa,CAAC,KAAM,IAAIzmB,SAAS+nB,GAEjCC,EAAqB/Y,GAAW1F,oBACpC2K,GAAMjB,WAAWlG,eACjBlW,EACAkxB,EACA7nB,GAGInK,EAAqBkb,GAASnB,sBAAsBjZ,GAuB1D,MAAO,CACLwvB,aAAc,CAAE7gB,MAAO6gB,EAActO,SAJN7G,GAAUN,iBAAiB8W,IAK1DO,YAvBkB,WAClBT,EAAkB,MAClBE,EAAgB,IAChBE,GAAa,GACbE,GAAe,EACjB,EAmBEtB,WAjBiB,WACjBoB,GAAa,GACb7xB,GACF,EAeEwhB,aAbmB,SAACnjB,GACpB4zB,EAAmB5zB,GACnB0zB,GAAe,GACf/xB,GACF,EAUE0wB,UAAAA,EACAG,UAAAA,EACAE,YAAAA,EACAb,aAVyB/U,GAAUN,iBAAiB4W,GAWpDO,gBAAAA,EAEJ,CCzDiBG,CAAmB,CAAErxB,OAAAA,IAC9BlB,EAAcsb,GAAS5B,mBAI3B+X,EADEE,EACYpU,EAAO4T,aAAe5T,EAAO0T,UACvCI,GAAYE,SAAWF,GAAY9T,OAE1B8T,GAAYC,QAG3B,IAAMpN,EAAQ,WACZgK,IACA0D,GAAe,GACfrU,EAAO+U,aACT,EAMA,MAAO,CACLX,YAAAA,EACAL,QAxBc,WAAH,OAASM,GAAe,EAAK,EAyBxCrU,OAAAA,EACA2G,MAAAA,EACAsO,gBAVsB,WACtBxyB,IACAkkB,GACF,EAQEuN,WAAAA,EAEJ,ECpCagB,GAAuB,SAAHnwB,GAI3B,IAHJ4rB,EAAU5rB,EAAV4rB,WACA7I,EAAI/iB,EAAJ+iB,KACAnkB,EAAMoB,EAANpB,OAEAwxB,EAMIlB,GAAgB,CAAEtD,WAAAA,EAAYhtB,OAAAA,IALhCowB,EAAOoB,EAAPpB,QACA/T,EAAMmV,EAANnV,OACAiV,EAAeE,EAAfF,gBACAtO,EAAKwO,EAALxO,MACAuN,EAAUiB,EAAVjB,WAEIkB,EAAiBlB,IAAeJ,GAAY9T,OAClD,OACE6B,EAAAA,GAAAA,KAACC,GAAAA,EAAW,CACVC,OAAQ+F,EACR9F,QAAShgB,EACTigB,gBAAgB,EAChBsC,qBAAsB6Q,EACtBjnB,MAAM,GAAE+T,UAERC,EAAAA,GAAAA,MAAA,OACEC,UAAWiT,KAAW,uBAAwB,CAAEC,QAASF,IACzD/S,MAAO,CAAEC,UAAW,SAAUJ,SAAA,CAE5BgS,IAAeJ,GAAYC,UAC3BlS,EAAAA,GAAAA,KAACoQ,GAAW,CAAC1Q,YAAaoF,EAAOuL,cAAe6B,IAEhDG,IAAeJ,GAAYE,WAC3BnS,EAAAA,GAAAA,KAAC2R,GAAY,CAACjS,YAAa0T,EAAiBxB,YAAazT,EAAO0T,YAEhEQ,IAAeJ,GAAY9T,SAC3B6B,EAAAA,GAAAA,KAACiR,GAAU,CAAC9S,OAAQA,QAK9B,EACAkV,GAAqBrS,UAAY,CAC/B8N,WAAYpL,KAAAA,KAAeC,WAC3BsC,KAAMvC,KAAAA,KAAeC,WACrB7hB,OAAQ4hB,KAAAA,OAAiBC,YAG3B,wCCvBA,SAjCwBtjB,EAAW,CACjCgZ,SAAU,CACRkD,GAAI,uCACJE,YAAa,8BACbD,eAAgB,YAElBkX,YAAa,CACXnX,GAAI,0CACJE,YAAa,8BACbD,eAAgB,2BAElBmX,cAAe,CACbpX,GAAI,4CACJE,YAAa,oCACbD,eAAgB,kBAElBoX,gBAAiB,CACfrX,GAAI,8CACJE,YAAa,iCACbD,eAAgB,qBAElBqX,eAAgB,CACdtX,GAAI,6CACJE,YAAa,gCACbD,eAAgB,oBAElBsX,WAAY,CACVvX,GAAI,yCACJE,YAAa,uBACbD,eAAgB,uEClBb,IAAMuX,IAAU1zB,EAAAA,GAAAA,IAAW,CAChC2zB,yBAA0B,6BAGfC,GAAkB,SAAH/wB,GAAkC,IAA5BpB,EAAMoB,EAANpB,OAAQ6xB,EAAazwB,EAAbywB,cAChC9T,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAEAjX,EAAesR,GAAW/G,kBAAkBrR,GAA5C8G,WACRiZ,EAA6C3H,GAAW5G,sBAAsBxR,GAAtE+I,EAAcgX,EAAdhX,eAAgBG,EAAgB6W,EAAhB7W,iBACxBkpB,EAA8Bha,GAAWvG,0BAA0B7R,GAA3DkS,EAAOkgB,EAAPlgB,QAASD,EAAQmgB,EAARngB,SACT9D,EAAmBiK,GAAW9E,oBAA9BnF,eAEFkkB,EAAqBja,GAAW1F,oBAAoB2K,GAAMN,YAAa/c,EAAQ,WAC/EsyB,EAAsBla,GAAW1F,oBAAoB2K,GAAMN,YAAa/c,EAAQ,YAEtF,OAAIkJ,EACK,MAIPsV,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CACGxV,IACCmV,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CACZxO,SAAU7V,EACV6Q,QAAS6S,EAAc1N,KACvB,cAAa8N,GAAQC,yBAAyB3T,SAE7CR,EAAca,GAASiT,iBAG3B5f,EAASF,YACRmM,EAAAA,GAAAA,KAACuU,GAAAA,EAA8B,CAC7B1tB,IAAKkN,EAASD,SACdgN,QAASsT,EACT9nB,MAAOuT,EAAca,GAASoT,WAAY,CACxClrB,WAAAA,EACA4rB,YAAazgB,EAASygB,cAExBC,kBAAkB,EAClBlU,UAAU,mCAAkCF,SAE3CR,EAAca,GAASkT,mBAG3B5f,EAAQH,YACPmM,EAAAA,GAAAA,KAACuU,GAAAA,EAA6B,CAC5B1tB,IAAKmN,EAAQF,SACbgN,QAASqT,EACT7nB,MAAOuT,EAAca,GAASoT,WAAY,CACxClrB,WAAAA,EACA4rB,YAAaxgB,EAAQwgB,cAEvBC,kBAAkB,EAClBlU,UAAU,mCAAkCF,SAE3CR,EAAca,GAASmT,oBAKlC,EACAI,GAAgBjT,UAAY,CAC1Blf,OAAQ4hB,KAAAA,OAAiBC,WACzBgQ,cAAejQ,KAAAA,MAAgB,CAC7BuC,KAAMvC,KAAAA,OACLC,YAGL,kiCC5EO,IAAM+Q,IAAYr0B,EAAAA,GAAAA,IAAW,CAClCs0B,yBAA0B,2BAC1BC,uBAAwB,2BCcbb,IAAU1zB,EAAAA,GAAAA,IAAW,CAChCw0B,oBAAqB,wBAGVC,GAAiB,SAAH5xB,GAAmB,IDL4C6xB,EAAjFC,EAAWC,ECKanzB,EAAMoB,EAANpB,OACvB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAEF8T,GDRCqB,GAAiFD,EAAAvQ,IAAtD0Q,EAAAA,GAAAA,IAAcR,GAAUE,wBAAwB,GAAM,IAAxE,GAAEK,EAAYF,EAAA,GACvB,CACL9O,KAAM,kBAAMgP,GAAa,EAAK,EAC9BE,KAAM,kBAAMF,GAAa,EAAM,EAC/BD,UAAAA,ICKII,EDnBuB,WAC7B,IAA0FC,EAAA7Q,IAAxD0Q,EAAAA,GAAAA,IAAcR,GAAUC,0BAA0B,GAAM,GAAnFK,EAASK,EAAA,GAAEJ,EAAYI,EAAA,GAC9B,MAAO,CACLpP,KAAM,kBAAMgP,GAAa,EAAK,EAC9BE,KAAM,kBAAMF,GAAa,EAAM,EAC/BD,UAAAA,EAEJ,CCYwB5C,GAChBkD,EDF+B,SAACxzB,GACtC,IAAMyzB,EAAmBrb,GAAW1F,oBAClC2K,GAAMpa,OAAOwS,6BACbzV,GAEF,OAAO,SAACoe,GACFA,GAAUqV,GAChB,CACF,CCN+BC,CAAwB1zB,GACrD2zB,EDOiC,SAAC3zB,GAClC,IAAA+f,EAAuC3H,GAAW5G,sBAAsBxR,GAAhEkI,EAAU6X,EAAV7X,WAAYa,EAAcgX,EAAdhX,eACpBqpB,EAA8Bha,GAAWvG,0BAA0B7R,GAA3DkS,EAAOkgB,EAAPlgB,QAASD,EAAQmgB,EAARngB,SACTvL,EAAa0R,GAAWhH,uBAAuBpR,GAA/C0G,SAEFktB,EAAyB1rB,IAAexB,EAQ9C,MAAO,CACLktB,uBAAAA,EACAC,mBARAD,GACG7qB,GACAkJ,EAASF,WACTG,EAAQH,UAOf,CCxByD+hB,CAAoB9zB,GAAnE4zB,EAAsBD,EAAtBC,uBAAwBC,EAAkBF,EAAlBE,mBACxB1lB,EAAmBiK,GAAW9E,oBAA9BnF,eACApF,EAAmBqP,GAAW5G,sBAAsBxR,GAApD+I,eAER,OAAK8qB,GAKHrV,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEC,EAAAA,GAAAA,MAAC+T,GAAAA,GAAQ,CAACnF,SAAUoG,EAAqBjV,SAAA,EACvCL,EAAAA,GAAAA,KAACqU,GAAAA,GAASwB,OAAM,CACdtZ,GAAE,2BAAAhd,OAA6BuC,GAC/ByoB,GAAIuL,GAAAA,EACJ1P,IAAK2P,GAAAA,EACLC,OAAQ7P,GAAAA,EACRtF,QAAQ,UACR4N,IAAK5O,EAAca,GAASgT,gBAE9BpT,EAAAA,GAAAA,MAAC+T,GAAAA,GAAS4B,KAAI,CAAA5V,SAAA,CACXqV,IACC1V,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CACZxO,SAAU7V,EACV6Q,QAASsU,EAAcnP,KACvB,cAAa8N,GAAQc,oBAAoBxU,SAExCR,EAAca,GAASrH,aAG5B2G,EAAAA,GAAAA,KAACiU,GAAe,CAACnyB,OAAQA,EAAQ6xB,cAAeA,WAGpD3T,EAAAA,GAAAA,KAACqT,GAAoB,CACnBpN,KAAMmP,EAAcJ,UACpBlG,WAAYsG,EAAcD,KAC1BrzB,OAAQA,IAET+I,IACCmV,EAAAA,GAAAA,KAACsP,GAAkB,CACjBrJ,KAAM0N,EAAcqB,UACpBlG,WAAY6E,EAAcwB,KAC1BrzB,OAAQA,OApCP,IAyCX,EACAgzB,GAAe9T,UAAY,CACzBlf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,2tCCnEA,SAV4B,SAACuS,GAC3B,ICHQ3Q,EDGF4Q,GCHE5Q,GAAUD,EAAAA,GAAAA,KAAVC,OACOC,GAAAA,EAAY4Q,OAAOpP,UAAYzB,EAAQC,GAAAA,EAAYC,MAAMuB,SDGxE,OACEhH,EAAAA,GAAAA,KAACY,GAAAA,GAAMvd,GAAAA,GAAA,GACD6yB,GACAC,GAAW,CAAExT,KAAM,OAG7B,EEiBA,GA5BwBtiB,EAAW,CACjC2W,QAAS,CACPuF,GAAI,0CACJE,YAAa,kCACbD,eAAgB,WAElB6Z,YAAa,CACX9Z,GAAI,8CACJE,YAAa,uCACbD,eAAgB,gBAElB8Z,OAAQ,CACN/Z,GAAI,yCACJE,YAAa,iCACbD,eAAgB,UAElB+Z,WAAY,CACVha,GAAI,6CACJE,YAAa,sCACbD,eAAgB,eAElBkM,cAAe,CACbnM,GAAI,gDACJE,YAAa,yCACbD,eAAgB,mtCCbb,IAAMga,GAAgB,SAAHtzB,GAAmB,IAAbpB,EAAMoB,EAANpB,OACtB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAEAtW,EAAe2Q,GAAW9G,qBAAqBtR,GAA/CyH,WACAqkB,EAAyBS,GAAuBvsB,GAAhD8rB,qBAQF6I,EAAe,CACnBlM,GAAI,IACJzQ,KAAMvQ,EACNuX,QATwB5G,GAAW1F,oBACnC2K,GAAMpa,OAAO+Y,eACbhc,EACAyH,IAQF,OACEyW,EAAAA,GAAAA,KAAC0W,GAAYrzB,GAAAA,GAAA,CACXuiB,WAAY+Q,GAAAA,EACZ9V,QAAQ,kBACRiF,SAAU8H,IACLA,GAAwB6I,GAAY,IAAApW,SAExCR,EAAca,GAAS1J,WAG9B,EACAwf,GAAcxV,UAAY,CACxBlf,OAAQ4hB,KAAAA,OAAiBC,YAE3B,YClCO,IAAMiT,GAAsB,SAAH1zB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC5B+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAgO,EAAyBQ,GAAuBvsB,GAAhD+rB,qBACFjB,EAAmB1S,GAAW7F,oCAAoCvS,GACxE,OACEke,EAAAA,GAAAA,KAAC0W,GAAY,CACX5Q,SAAU+H,EACV/M,QAAS8L,EAAiBvM,SAEzBR,EAAca,GAASgI,gBAG9B,EACAkO,GAAoB5V,UAAY,CAC9Blf,OAAQ4hB,KAAAA,OAAiBC,YAE3B,YCfO,IAAMkT,GAAoB,SAAH3zB,GAAmB,IAAbpB,EAAMoB,EAANpB,OAC1B+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAxW,EAAY6Q,GAAW9G,qBAAqBtR,GAA5CuH,QACFytB,EAAsB5c,GAAW/F,2BAA2BrS,GAC1D4rB,EAAuBW,GAAuBvsB,GAA9C4rB,mBAEFqJ,EAAc7c,GAAW1F,oBAC7B2K,GAAMpa,OAAOqS,mBACbtV,EACAuH,EAAUytB,GAEZ,OACE9W,EAAAA,GAAAA,KAAC0W,GAAY,CACX5Q,SAAU4H,EACVnD,GAAG,IACHzQ,KAAK,IACLgH,QAASiW,EAAY1W,SAEpBR,EAAca,GAAS2V,cAG9B,EACAQ,GAAkB7V,UAAY,CAC5Blf,OAAQ4hB,KAAAA,OAAiBC,YAE3B,YCzBO,IAAMqT,GAAe,SAAH9zB,GAAmB,IAAbpB,EAAMoB,EAANpB,OACrB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACApW,EAAcyQ,GAAW9G,qBAAqBtR,GAA9C2H,UACFqtB,EAAsB5c,GAAW/F,2BAA2BrS,GAC1D6rB,EAAwBU,GAAuBvsB,GAA/C6rB,oBAEFoJ,EAAc7c,GAAW1F,oBAC7B2K,GAAMpa,OAAOqS,mBACbtV,EACA2H,EAAYqtB,GAEd,OACE9W,EAAAA,GAAAA,KAAC0W,GAAY,CACX5Q,SAAU6H,EACVpD,GAAG,IACHzQ,KAAK,IACLgH,QAASiW,EAAY1W,SAEpBR,EAAca,GAAS4V,SAG9B,EACAU,GAAahW,UAAY,CACvBlf,OAAQ4hB,KAAAA,OAAiBC,YAE3B,YCzBO,IAAMsT,GAAmB,SAAH/zB,GAAmB,IAAbpB,EAAMoB,EAANpB,OACzB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAxW,EAAY6Q,GAAW9G,qBAAqBtR,GAA5CuH,QACAokB,EAAsBY,GAAuBvsB,GAA7C2rB,kBAEFsJ,EAAc7c,GAAW1F,oBAC7B2K,GAAMpa,OAAOqS,mBACbtV,EACAuH,GAEF,OACE2W,EAAAA,GAAAA,KAAC0W,GAAY,CACX5Q,SAAU2H,EACVlD,GAAG,IACHzQ,KAAK,IACLgH,QAASiW,EAAY1W,SAEpBR,EAAca,GAAS6V,aAG9B,EACAU,GAAiBjW,UAAY,CAC3Blf,OAAQ4hB,KAAAA,OAAiBC,YAE3B,YCtBO,IAAMuT,GAAoB,SAAHh0B,GAAmB,IAAbpB,EAAMoB,EAANpB,OAClC+f,EAAuC3H,GAAW3G,uBAAuBzR,GAAjEqJ,EAAa0W,EAAb1W,cAAeK,EAAWqW,EAAXrW,YACvBsd,EAII5O,GAAW5G,sBAAsBxR,GAHnC8I,EAAUke,EAAVle,WACAL,EAAUue,EAAVve,WACAS,EAAgB8d,EAAhB9d,iBAEMhC,EAAekR,GAAW9G,qBAAqBtR,GAA/CkH,WAER,OACEsX,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAC,eAAa,oBAAmBN,SAAA,GACtClV,GAAiBP,GAAcI,KAAqBgV,EAAAA,GAAAA,KAACwW,GAAa,CAAC10B,OAAQA,IAC7EqJ,IAAkBK,GACfwU,EAAAA,GAAAA,KAACiX,GAAgB,CAACn1B,OAAQA,KAC1Bke,EAAAA,GAAAA,KAAC4W,GAAmB,CAAC90B,OAAQA,KAE/BkH,IAAemC,IACf6U,EAAAA,GAAAA,KAACiX,GAAgB,CAACn1B,OAAQA,MAEzBkH,GAAcmC,KAAmBZ,GAChCyV,EAAAA,GAAAA,KAACgX,GAAY,CAACl1B,OAAQA,KACtBke,EAAAA,GAAAA,KAAC6W,GAAiB,CAAC/0B,OAAQA,OAIrC,EACAo1B,GAAkBlW,UAAY,CAC5Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,YCHA,GAtCwBtjB,EAAW,CACjC82B,cAAe,CACb5a,GAAI,0DACJE,YAAa,2EACbD,eAAgB,yCAElB4a,cAAe,CACb7a,GAAI,0DACJE,YAAa,wDACbD,eAAgB,yCAElB6a,YAAa,CACX9a,GAAI,wDACJE,YAAa,uCACbD,eAAgB,0BAElB8a,WAAY,CACV/a,GAAI,uDACJE,YAAa,wCACbD,eAAgB,yBAElB+a,aAAc,CACZhb,GAAI,yDACJE,YAAa,4CACbD,eAAgB,6BAElBgb,oBAAqB,CACnBjb,GAAI,gEACJE,YAAa,6CACbD,eAAgB,WAElBib,2BAA4B,CAC1Blb,GAAI,uEACJE,YAAa,oEACbD,eAAgB,6BC9Bb,IAAMkb,GAAmB,SAAHx0B,GAAmB,IAAbpB,EAAMoB,EAANpB,OACzB+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFlc,EAAauW,GAAW5G,sBAAsBxR,GAC9CmD,EAAYiV,GAAW9G,qBAAqBtR,GAC5ClC,EAAauc,GAAUJ,gBAC7B,IAAK9W,EAAUgE,UAAW,CACxB,IAAKhE,EAAU8D,UAAa,OAAO,KACnC,IAAMA,EAAYnJ,EAAWqF,EAAU8D,WACvC,OAAO8W,EAAca,GAAS6W,aAAc,CAAExuB,UAAAA,GAChD,CACA,GAAIpF,EAAWqG,WAAY,CACzB,IAAQhB,EAAwB/D,EAAxB+D,WAAYF,EAAY7D,EAAZ6D,QAElB0B,EAEE7G,EAFF6G,qBACAG,EACEhH,EADFgH,qBAGF,OAAIhH,EAAW+G,SAAWF,EACjBqV,EACLlV,EAAuB+V,GAASyW,cAAgBzW,GAAS0W,cACzD,CAAE5sB,qBAAsB5K,EAAW4K,KAGlC1B,EACE+W,EACL7W,EAAa0X,GAAS2W,YAAc3W,GAAS4W,WAC7C,CAAExuB,QAASlJ,EAAWkJ,KAHD,IAKzB,CACA,OAAO,IACT,EC5BO,IAAM6uB,GAAoB,SAAHz0B,GAAmB,IAC/C00B,ED6BgC,SAAH7zB,GAAmB,IAAbjC,EAAMiC,EAANjC,OAC3B+d,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFhW,EAAeqQ,GAAWzG,oBAAoB3R,GAAQjD,KACpD8J,EAAiBuR,GAAW/G,kBAAkBrR,GAA9C6G,aACRkZ,EAII3H,GAAW3G,uBAAuBzR,GAHpCqJ,EAAa0W,EAAb1W,cACAK,EAAWqW,EAAXrW,YACAI,EAASiW,EAATjW,UAGIghB,EAAmB1S,GAAW7F,oCAAoCvS,GAExE,MAAO,CACL+H,aAAcA,GAAgBgW,EAAca,GAAS8W,qBACrDK,cAAe3L,GAAuB,CAAEpqB,OAAAA,IACxCqJ,cAAAA,EACAK,YAAAA,EACAI,UAAAA,EACAghB,iBAAAA,EACAjkB,aAAAA,EACAmvB,4BAA6BjY,EAAca,GAAS+W,4BAExD,CC1CMM,CAAmB,CAAEj2B,OAVeoB,EAANpB,SAEhC+H,EAAY+tB,EAAZ/tB,aACAguB,EAAaD,EAAbC,cACA1sB,EAAaysB,EAAbzsB,cACAK,EAAWosB,EAAXpsB,YACAI,EAASgsB,EAAThsB,UACAghB,EAAgBgL,EAAhBhL,iBACAjkB,EAAYivB,EAAZjvB,aACAmvB,EAA2BF,EAA3BE,4BAGF,OACExX,EAAAA,GAAAA,MAAA,QAAMC,UAAU,QAAQ,cAAY,oBAAmBF,SAAA,CACpDxW,EAAa,MAAIlB,IACfwC,IAAkBK,IAAgBqsB,GAAiB,MAAJt4B,OAC1Cs4B,GAEP1sB,GAAiBK,GAAeI,GAC/B0U,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CACG,OACDL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACC,QAAQ,OAAO8B,KAAK,SAASpC,UAAU,UAAUO,QAAS8L,EAAiBvM,SAChFyX,OAGH,OAGV,EAEAH,GAAkB3W,UAAY,CAC5Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3BgU,GAAkBvQ,aAAe,CAAC,EAElC,YCrCA,IAAQ9P,GAAuB6H,GAAMpa,OAA7BuS,mBAEK0gB,GAAkB,SAAH90B,GAAmB,IAAbpB,EAAMoB,EAANpB,OACxB8G,EAAesR,GAAW/G,kBAAkBrR,GAA5C8G,WACAS,EAAY6Q,GAAW9G,qBAAqBtR,GAA5CuH,QACF4uB,EAAqB/d,GAAW1F,oBACpC8C,GACAxV,EACAuH,GAEMykB,EAAuBO,GAAuBvsB,GAA9CgsB,mBACR,OACE9N,EAAAA,GAAAA,KAAA,MAAAK,SACGyN,GACC9N,EAAAA,GAAAA,KAAA,QAAMO,UAAU,oBAAoB,cAAY,kBAAiBF,SAAEzX,KAEnEoX,EAAAA,GAAAA,KAAA,KACElG,KAAMzQ,EACNkX,UAAU,oBACV,cAAY,kBACZO,QAASmX,EAAmB5X,SAE3BzX,KAKX,EAEAovB,GAAgBhX,UAAY,CAC1Blf,OAAQ4hB,KAAAA,OAAiBC,YAG3BqU,GAAgB5Q,aAAe,CAAC,EAEhC,2sCC3BO,IAAM8Q,GAAa,SAAHh1B,GAEjB,IADJpB,EAAMoB,EAANpB,OAEMq2B,EAAcpR,KACdqH,EAAc+J,EAAc,WAAa,aAC/C,OACEnY,EAAAA,GAAAA,KAAA,OAAKO,UAAU,qBAAqBhE,GAAIza,EAAQ,cAAY,aAAYue,UACtEL,EAAAA,GAAAA,KAACoY,GAAAA,GAAI,CAAChK,YAAaA,EAAY/N,UAC7BC,EAAAA,GAAAA,MAAA,OAAKC,UAAU,2BAA0BF,SAAA,EACvCC,EAAAA,GAAAA,MAAA,MAAAjd,GAAAA,GAAA,IAAW80B,GAAe,CAAE5X,UAAW,WAAU,IAAAF,SAAA,EAC/CL,EAAAA,GAAAA,KAACmO,GAAe,CAACrsB,OAAQA,EAAQssB,YAAY,gBAC7C9N,EAAAA,GAAAA,MAAC8X,GAAAA,GAAKC,KAAI,CAAAhY,SAAA,EACRL,EAAAA,GAAAA,KAACoY,GAAAA,GAAKE,OAAM,CACVhsB,OAAO0T,EAAAA,GAAAA,KAACgY,GAAe,CAACl2B,OAAQA,IAChCuC,SAAS2b,EAAAA,GAAAA,KAAC8U,GAAc,CAAChzB,OAAQA,OAEnCke,EAAAA,GAAAA,KAACoY,GAAAA,GAAKG,QAAO,CAAChY,UAAU,OAAMF,UAC5BL,EAAAA,GAAAA,KAAC2X,GAAiB,CAAC71B,OAAQA,OAE7Bke,EAAAA,GAAAA,KAACoY,GAAAA,GAAKI,OAAM,CAACpK,YAAaA,EAAY/N,UACpCL,EAAAA,GAAAA,KAACkX,GAAiB,CAACp1B,OAAQA,cAIjCke,EAAAA,GAAAA,KAACuN,GAAiB,CAACzrB,OAAQA,UAKrC,EACAo2B,GAAWlX,UAAY,CACrBlf,OAAQ4hB,KAAAA,OAAiBC,YAG3B,wCCwDA,SAAe,IAA0B,uCChFzC,IAvBiBtH,EAAAA,GAAAA,IAAe,CAC9Boc,0BAA2B,CACzBlc,GAAI,oDACJC,eAAgB,+BAChBC,YAAa,iCAEfic,qBAAsB,CACpBnc,GAAI,+CACJC,eAAgB,qDAChBC,YAAa,uCAEfkc,qBAAsB,CACpBpc,GAAI,+CACJC,eAAgB,kBAChBC,YAAa,kCAEfsR,UAAW,CACTxR,GAAI,oCACJC,eAAgB,yBAChBC,YAAa,6BCkBjB,GA3B6B,WAC3B,IAAQoD,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACA+Y,EAAoB1e,GAAWzH,0BAA/BmmB,gBACR,OACEtY,EAAAA,GAAAA,MAAA,OACE/D,GAAG,0BACHgE,UAAU,0DAAyDF,SAAA,EAEnEL,EAAAA,GAAAA,KAAC6Y,GAAAA,EAAK,CAACzS,IAAK0S,GAAgBrK,IAAK5O,EAAca,GAASqN,cACxD/N,EAAAA,GAAAA,KAAA,MAAAK,SACGR,EAAca,GAAS+X,8BAE1BzY,EAAAA,GAAAA,KAAA,KAAAK,SACGR,EAAca,GAASgY,yBAE1B1Y,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACLC,QAAQ,QACR0J,GAAG,IACHzQ,KAAM/S,EAAW6xB,GACjBhT,WAAYmT,GAAAA,EAAO1Y,SAElBR,EAAca,GAASiY,0BAIhC,wiCC1BO,IAKM11B,GAAQ5C,EAAW,CAC9BwN,OAAQ,SAAC9L,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,ICPtC,UARiBsa,EAAAA,GAAAA,IAAe,CAC9B2c,UAAW,CACTzc,GAAI,sBACJC,eAAgB,aAChBC,YAAa,wtCCaV,IAAMwc,GAAa,WACxB,IAAQpZ,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACF9Z,EAAamU,GAAWtH,gBAC9BsmB,EFF+B,WAC/B,IAAsDC,EAAA3U,IAAxB4U,EAAAA,GAAAA,GAAqB,IAAG,GAA/CtrB,EAAOqrB,EAAA,GAAE9U,EAAU8U,EAAA,GACwCE,EAAA7U,GAAtC7f,GAAakJ,OAAOjB,GAASC,UAAS,GAA3DgB,EAAMwrB,EAAA,GAAEjV,EAASiV,EAAA,GAClB/2B,EAAa4X,GAAW7H,gBACxBinB,EAAc9iB,GAAAA,MAAkBhK,OAAOC,SAAS8sB,OAAQ,CAAEC,cAAc,IAE9EC,EAA8Bvf,GAAWpH,qBAAqB,CAC5DjF,OAAAA,EACAC,QAAAA,EACAU,SAA8C,KAApC8qB,aAAW,EAAXA,EAAaI,oBAA2B,EvGV1B,KuGOlB/qB,EAAQ8qB,EAAR9qB,SAAUD,EAAO+qB,EAAP/qB,QASlB,MAAO,CACLpM,WAAAA,EACAqM,SAAAA,EACAxK,cALoB+V,GAAWnF,mBAM/B4kB,YAAajrB,EACbkrB,cAAe,CACb/rB,OAAAA,EACAuW,UAAAA,EACAtW,QAAAA,EACAuW,WAAAA,EACAqC,mBAbuB,SAAC3Y,GAAM,OAAK,kBAAMsW,EAAWc,OAAOpX,EAAO,IAepE8rB,YAAa/rB,EAAQhI,OAAS,EAElC,CErBMg0B,GALFF,EAAaV,EAAbU,cACAz1B,EAAa+0B,EAAb/0B,cACAwK,EAAQuqB,EAARvqB,SACAkrB,EAAWX,EAAXW,YACAF,EAAWT,EAAXS,YAEIxB,GFjBY7S,EAAAA,GAAAA,KAAVC,MACOC,GAAAA,EAAY4Q,OAAOpP,SEiBlC,OACE1G,EAAAA,GAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EACpCC,EAAAA,GAAAA,MAAA,OAAKC,UAAU,gCAA+BF,SAAA,EAC5CL,EAAAA,GAAAA,KAAA,MAAIO,UAAU,oBAAmBF,SAAER,EAAca,GAASsY,cAC1DhZ,EAAAA,GAAAA,KAAA,OAAKO,UAAU,mCAAkCF,UAC/CL,EAAAA,GAAAA,KAACmE,GAAoB9gB,GAAA,GAAKu2B,SAG7B7zB,GAEGua,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CACGwZ,IACC7Z,EAAAA,GAAAA,KAAA,OAAKzD,GAAG,uCAAsC8D,UAC5CL,EAAAA,GAAAA,KAACyG,GAAmBpjB,GAAA,GAAKu2B,OAG7BtZ,EAAAA,GAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,CAC5CsZ,EAAY5tB,KAAI,SAAA7I,GAAA,IAAGpB,EAAMoB,EAANpB,OAAM,OACxBke,EAAAA,GAAAA,KAACkY,GAAU,CAAcp2B,OAAQA,GAAhBA,EAA0B,IAE5C6M,EAAW,IACVqR,EAAAA,GAAAA,KAAC+Z,GAAAA,GAAU,CACTlZ,QAASsX,EAAc,UAAY,YACnC6B,gBAAgB,cAChBzZ,UAAU,eACV0Z,UAAWtrB,EACXurB,aAAc/1B,WAMtB6b,EAAAA,GAAAA,KAACma,GAAa,MAIxB,EAEAlB,GAAWjY,UAAY,CAAC,EAExB,4BC6BA,SAAe,IAA0B,uCC/FlC,IAAM3I,GAAahY,EAAW,CACnC+5B,yBAA0B,yCAGf1hB,GAAYrY,EAAW,CAClCg6B,kBAAmB,gCAgBrB,SAbwC,SAACvgB,GAAI,OAAKqF,GAAMH,YAAY1G,mBAAmBwB,EAAM,CAC3FwD,SAAU5E,GAAU2hB,mBACpB,ECCF,IAbiBhe,EAAAA,GAAAA,IAAe,CAC9Boc,0BAA2B,CACzBlc,GAAI,0CACJC,eAAgB,+BAChBC,YAAa,iCAEf6d,kBAAmB,CACjB/d,GAAI,kCACJC,eAAgB,wBAChBC,YAAa,oCCGV,IAAM8d,IAAava,EAAAA,GAAAA,KAACmG,GAAAA,EAAI,CAAC5F,UAAU,OAAO6F,IAAKoU,GAAAA,IAEzCC,GAA4B,WACvC,IAAQ5a,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACA+Y,EAAoB1e,GAAWzH,0BAA/BmmB,gBACR,OACEtY,EAAAA,GAAAA,MAAC8X,GAAAA,GAAI,CAAChK,YAAY,aAAa7R,GAAG,+BAA8B8D,SAAA,EAC9DL,EAAAA,GAAAA,KAACoY,GAAAA,GAAKsC,SAAQ,CACZtU,IAAKuU,GACLC,OAAO,wBAETta,EAAAA,GAAAA,MAAC8X,GAAAA,GAAKC,KAAI,CAAC9X,UAAU,cAAaF,SAAA,EAChCL,EAAAA,GAAAA,KAAA,MAAAK,SACGR,EAAca,GAAS+X,8BAE1BzY,EAAAA,GAAAA,KAAA,MAAAK,UACEL,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CACRnI,QAAQ,QACRqI,YAAaniB,EAAW6xB,GACxB9X,QAAS3B,GAA+BpY,EAAW6xB,IACnDrY,UAAU,4BAA2BF,SAEpCR,EAAca,GAAS4Z,kBAAmB,CAAEO,MAAON,cAMhE,EAEAE,GAA0BzZ,UAAY,CAAC,EAEvC,4BC1BA,SAlBwB3gB,EAAW,CACjCy6B,UAAW,CACTve,GAAI,yBACJE,YAAa,kCACbD,eAAgB,cAElBue,aAAc,CACZxe,GAAI,kCACJC,eAAgB,8EAChBC,YAAa,sBAEfue,UAAW,CACTze,GAAI,qBACJE,YAAa,2BACbD,eAAgB,6HCPb,IAAMvZ,GAAQ5C,EAAW,CAC9B46B,eAAgB,SAACl5B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAQjCm5B,GAAuB,WAClC,IAAQrb,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACR,MAAO,CACLsb,wBAAyBtb,EAAc7N,GAAY8oB,WACnDE,UAAWnb,EAAc7N,GAAYgpB,WAEzC,EAYA,SAVsC,WACpC,QAAQzV,GAAUD,EAAAA,GAAAA,KAAVC,MACsE6V,KAAlCz2B,GAAas2B,gBAAe,KAAM,s5BAAvEA,EAAcG,EAAA,GAAEC,EAAiBD,EAAA,GACxC,MAAO,CACLE,qBAAsB/V,EAAQC,GAAAA,EAAY+V,MAAMvU,SAChDiU,eAAAA,EACAI,kBAAAA,EAEJ,EAEA,GAGEH,GCrBF,GAb2B,WACzB,IAAQC,EAA4BD,KAA5BC,wBACR,OACEnb,EAAAA,GAAAA,KAAA,OAAKO,UAAU,gCAA+BF,UAC5CL,EAAAA,GAAAA,KAACwb,GAAAA,EAAO,CACNC,UAAU,SACV5a,QAAQ,QACR6a,iBAAkBP,KAI1B,kBCAA,SAbiC,SAACp2B,EAAQ42B,GAUxC,MAAO,CAAEC,kBATiB,SAACv8B,GACzBA,EAAE6d,iBNWkC,SAAC2e,EAAWF,EAAW7hB,GAAI,OAAKmD,GACtEJ,GAAmBxE,GAAW+hB,yBAA0B,CACtDxe,WAAYigB,EACZC,WAAYH,EACZ9hB,KAAM,cAERC,EACD,CMhBGqF,CACEpa,EAAO82B,UACPF,EACA52B,aAAM,EAANA,EAAQuE,aAHV6V,CAIE9f,EACJ,EAEF,ECLO,IAAM64B,GAAa,SAAHh1B,GAA8B,IAAxB6B,EAAM7B,EAAN6B,OAAQ42B,EAASz4B,EAATy4B,UAC7BxD,EAAcpR,KACZ6U,EAAsB3oB,GAAkBlO,EAAQ42B,GAAhDC,kBAER,OACE5b,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CACRE,YAAankB,aAAM,EAANA,EAAQuE,aACrBiX,UAAU,YACVO,QAAS8a,EAAkBvb,UAE3BL,EAAAA,GAAAA,KAACoY,GAAAA,GAAI,CAAChK,YAAa+J,EAAc,WAAa,aAAc5X,UAAU,mCAAkCF,UACtGC,EAAAA,GAAAA,MAAA,OAAKC,UAAW4X,EAAc,GAAK,4BAA4B9X,SAAA,EAC7DL,EAAAA,GAAAA,KAACoY,GAAAA,GAAKsC,SAAQ,CACZtU,IAAKrhB,EAAOg3B,aACZnB,OAAQ71B,EAAOuH,SAEjB0T,EAAAA,GAAAA,KAACoY,GAAAA,GAAKC,KAAI,CAAC9X,UAAU,4BAA2BF,UAC9CL,EAAAA,GAAAA,KAACoY,GAAAA,GAAKG,QAAO,CAAChY,UAAW4X,EAAc,OAAS,OAAO9X,UACrDL,EAAAA,GAAAA,KAAA,MAAIO,UAAU,gBAAeF,UAC3BL,EAAAA,GAAAA,KAACgc,GAAAA,EAAQ,CAACC,MAAO,EAAE5b,SAChBtb,EAAOuH,oBAS1B,EAEA4rB,GAAWlX,UAAY,CACrBjc,OAAQ2e,KAAAA,MAAgB,CACtBmY,UAAWnY,KAAAA,OACXpX,MAAOoX,KAAAA,OACPqY,aAAcrY,KAAAA,OACdpa,aAAcoa,KAAAA,SACbC,WACHgY,UAAWjY,KAAAA,MAAgB,EAAC,GAAM,EAAO,OAAOC,YAGlD,YC9BA,IAlBiBtH,EAAAA,GAAAA,IAAe,CAC9B6f,uBAAwB,CACtB3f,GAAI,8CACJC,eAAgB,0BAChBC,YAAa,wDAEf0f,sBAAuB,CACrB5f,GAAI,6CACJC,eAAgB,kBAChBC,YAAa,oDAEfkc,qBAAsB,CACpBpc,GAAI,4CACJC,eAAgB,kBAChBC,YAAa,6DCbV,IAAMpE,GAAahY,EAAW,CACnC+7B,eAAgB,kDAChBC,6BAA8B,8CAC9BC,0CAA2C,6DAC3CC,sCAAuC,gxECKlC,IAAMt5B,GAAQ5C,EAAW,CAC9Bm8B,eAAgB,SAACz6B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EAC5C06B,eAAgB,SAAC16B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAwDjC26B,GAA+BjhB,EAAAA,cAAoB,CAC9DkhB,oBAAqB,KACrBC,gCAAiC,KACjCC,gCAAiC,KACjCC,8BAA+B,KAC/BC,kBAAmB,OAGRC,GAAgC,SAAH95B,GAAqB,IAAfmd,EAAQnd,EAARmd,SAO5C4c,EAAAzY,GAN0C7f,GAAa83B,eAAe,CACtEE,oBAAqB,GACrBC,iCAAiC,EACjCC,iCAAiC,EACjCC,+BAA+B,EAC/BC,mBAAmB,IACnB,GANKN,EAAcQ,EAAA,GAAEC,EAAiBD,EAAA,GAOlCT,EA7C2B,WACjC,IAGEW,EAAA3Y,GAH0C7f,GAAa63B,eAAe,CACtEY,kBAAkB,EAClBC,WAAW,IACX,GAHKb,EAAcW,EAAA,GAAEG,EAAiBH,EAAA,GAKlCI,EAAgBjoB,GAAoB5U,EAAYC,YAChDsF,EAAyB4M,KACzB2qB,EAAmBjrB,KAkBzB,OAhBAkJ,EAAAA,WAAgB,YACT8hB,GAAiB33B,OAAOC,KAAK23B,GAAkB13B,QAAUG,EAC5Dq3B,GAAkB,SAAAG,GAAI,OAAAp6B,GAAAA,GAAA,GACjBo6B,GAAI,IACPL,kBAAkB,EAClBC,WAAW,GAAK,IAERE,IAAiB33B,OAAOC,KAAK23B,GAAkB13B,QAAWG,GACpEq3B,GAAkB,SAAAG,GAAI,OAAAp6B,GAAAA,GAAA,GACjBo6B,GAAI,IACPL,kBAAkB,EAClBC,WAAW,GAAK,GAGtB,GAAG,CAACE,IAEGf,CACT,CAkByBkB,GAEjBC,EAAeliB,EAAAA,SACnB,kBAAApY,GAAC,CAAD,EACKo5B,EAAc,GAEnB,CAACA,IAuBH,OApBAhhB,EAAAA,WAAgB,WACd,IAAImiB,EAAQ,KAgBZ,OAfKpB,EAAea,WAAcb,EAAeY,mBA/DnD5wB,OAAOqxB,WAAarxB,OAAOqxB,YAAc,GACzCrxB,OAAOqxB,WAAWC,KAAK,CACrB/c,KAAM,OACNvD,SAnBsC,+DAiFpCogB,EAAQzgB,YAAW,WACjB,IAAM4gB,EA7EP,WACL,IACE,GAAIvxB,OAAOqxB,YAAcrxB,OAAOqxB,WAAWl+B,IAAI,QAAQq+B,YAAYC,aAAsC,CACvG,IAAMC,EAAkB1xB,OAAOqxB,WAAWl+B,IAAI,SAASw+B,kBAAkBF,aACzE,OAAOC,aAAe,EAAfA,EAAiBr/B,IAC1B,CACF,CAAE,MAAOQ,GAAgB,CACzB,MAAO,EACT,CAqE0B++B,GAClBlB,GAAkB,SAAAO,GAAI,OAAAp6B,GAAAA,GAAA,GACjBo6B,GAAI,IACPd,oBAAqBoB,EACrBnB,gCArFyC,eAqFRmB,EACjClB,gCArFyC,eAqFRkB,EACjCjB,8BArFsC,YAqFPiB,EAC/BhB,mBAAmB,GAAK,IDjGY,SAACgB,GAC7ClhB,GAAmBxE,GAAW+jB,eAAgB,CAC5C2B,UAAAA,EACAlkB,KAAM,aAFRgD,EAIF,CC8FQwhB,CAA+BN,EACjC,GAAG,MAEE,kBAAMO,aAAaV,EAAM,CAClC,GAAG,CAACpB,KAGFxc,EAAAA,GAAAA,KAAC0c,GAA6B6B,SAAQ,CAAC9tB,MAAOktB,EAAatd,SACxDA,GAGP,EAEame,GAAkC,WAAH,OAAS/iB,EAAAA,WAAiBihB,GAA6B,EAEnGM,GAA8Bhc,UAAY,CACxCX,SAAUqD,KAAAA,KAAeC,YAG3B,YChIO,IAAM8a,GAAmB,kBACnBC,GAAkB,iBAClBC,GAAwB,uBCsCrC,UAtCiBtiB,EAAAA,GAAAA,IAAe,CAC9BuiB,2BAA4B,CAC1BriB,GAAI,kDACJC,eAAgB,yIAChBC,YAAa,gCAEfoiB,yBAA0B,CACxBtiB,GAAI,gDACJC,eAAgB,0DAChBC,YAAa,gCAEfqiB,4BAA6B,CAC3BviB,GAAI,mDACJC,eAAgB,+BAChBC,YAAa,oBAEfsiB,gBAAiB,CACfxiB,GAAI,uCACJC,eAAgB,eAChBC,YAAa,2BAEfuiB,mBAAoB,CAClBziB,GAAI,0CACJC,eAAgB,eAChBC,YAAa,2BAEfwiB,kBAAmB,CACjB1iB,GAAI,4CACJC,eAAgB,sBAChBC,YAAa,qCAEfyiB,4BAA6B,CAC3B3iB,GAAI,mDACJC,eAAgB,0BAChBC,YAAa,uCC5BV,IAAM0iB,GAAe,SAAHj8B,GAAmC,IAA7BsjB,EAAStjB,EAATsjB,UAAWuQ,EAAW7zB,EAAX6zB,YAChClX,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAER,OACEG,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHhK,UAAWiT,KAAW,CACpB,MAAOhN,IAAckY,KAEvB7d,QAAQ,kBACRC,QAASiW,EAAY1W,SAEpBR,EAAca,GAASue,oBAG9B,EAEAE,GAAane,UAAY,CACvBwF,UAAW9C,KAAAA,MAAgB,CAAC+a,GAAkBC,KAAkB/a,WAChEoT,YAAarT,KAAAA,KAAeC,YAG9B,YCjBO,IAAMyb,GAAY,SAAHl8B,GAIhB,IAHJgd,EAAMhd,EAANgd,OACAC,EAAOjd,EAAPid,QACA4d,EAAS76B,EAAT66B,UAEQle,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAKR,OACEG,EAAAA,GAAAA,KAAA,OAAKO,UAAU,6BAA4BF,UACzCC,EAAAA,GAAAA,MAACL,GAAAA,EAAW,CACV3T,MAAM,GACN4T,OAAQA,EACRC,QAASA,EACTC,gBAAgB,EAChBif,oBAAkB,EAClBC,YAAU,EAAAjf,SAAA,EAEVL,EAAAA,GAAAA,KAACC,GAAAA,EAAYqY,OAAM,CAAAjY,UACjBL,EAAAA,GAAAA,KAACC,GAAAA,EAAYsf,MAAK,CAAChf,UAAU,OAAMF,SAChCR,EAAca,GAASoe,kCAG5B9e,EAAAA,GAAAA,KAACC,GAAAA,EAAYoY,KAAI,CAAAhY,UACfC,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEL,EAAAA,GAAAA,KAAA,KAAGO,UAAU,OAAMF,SAAER,EAAca,GAASke,+BAC5C5e,EAAAA,GAAAA,KAAA,KAAAK,SAAIR,EAAca,GAASme,kCAG/B7e,EAAAA,GAAAA,KAACC,GAAAA,EAAYuY,OAAM,CAAAnY,UACjBC,EAAAA,GAAAA,MAACK,GAAAA,EAAS,CAAAN,SAAA,EACRL,EAAAA,GAAAA,KAACC,GAAAA,EAAYuf,YAAW,CAAC3e,QAAQ,WAAWC,QA1B3B,WAAH,OLUsC,SAACid,GAC/DlhB,GAAmBxE,GAAWkkB,sCAAuC,CACnEwB,UAAAA,GADFlhB,EAGF,CKdmC4iB,CAAiD1B,EAAU,EA0BV1d,SACrER,EAAca,GAASqe,oBAE1B/e,EAAAA,GAAAA,KAACC,GAAAA,EAAYuf,YAAW,CAAC3e,QAAQ,UAAUC,QA5BtB,WAAH,OLGsC,SAACid,GACnElhB,GAAmBxE,GAAWikB,0CAA2C,CACvEyB,UAAAA,GADFlhB,EAGF,CKPuC6iB,CAAqD3B,EAAU,EA4Bf1d,SACxER,EAAca,GAASse,+BAOtC,EAEAI,GAAUhY,aAAe,CACvBlH,QAAQ,GAGVkf,GAAUpe,UAAY,CACpBb,QAASuD,KAAAA,KAAeC,WACxBzD,OAAQwD,KAAAA,KACRqa,UAAWra,KAAAA,OAAiBC,YAG9B,uHChEO,IAAM1gB,GAAQ5C,EAAW,CAC9Bs/B,YAAa,SAAC59B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,ICA9B69B,GAA6B,SAAH18B,GAAwB,IAAlB6zB,EAAW7zB,EAAX6zB,YACnClX,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAER,OACEG,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACH1J,QAAQ,QACRC,QAASiW,EAAY1W,SAEpBR,EAAca,GAASwe,8BAG9B,EAEAU,GAA2B5e,UAAY,CACrC+V,YAAarT,KAAAA,KAAeC,YAG9B,YCfO,IAAMkc,GAAgC,SAAH38B,GAA2C,IAArCsjB,EAAStjB,EAATsjB,UAAWmW,EAAmBz5B,EAAnBy5B,oBACzDmD,EFDiC,WACjC,QAAqEC,KAA/Bp7B,GAAag7B,aAAY,KAAM,s5BAA9DA,EAAWI,EAAA,GAAEC,EAAcD,EAAA,GAGlC,MAAO,CACLJ,YAAAA,EACAM,YAJkB,WAAH,OAASD,GAAgBL,EAAY,EAMxD,CEPuCO,GAA7BP,EAAWG,EAAXH,YAAaM,EAAWH,EAAXG,YAEflJ,EAAc,WRKsC,IAACgH,EQJzDkC,IRIyDlC,EQHZpB,ERI/C9f,GAAmBxE,GAAWgkB,6BAA8B,CAC1D0B,UAAAA,EACAlkB,KAAM,aAFRgD,EQHA,EAeA,OACEyD,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CAbI,CAACoe,GAAkBC,IAAiBzzB,SAASub,IAE7CxG,EAAAA,GAAAA,KAACmf,GAAY,CAACpI,YAAaA,EAAavQ,UAAWA,IAEjDA,IAAcmY,IAEhB3e,EAAAA,GAAAA,KAAC4f,GAA0B,CAAC7I,YAAaA,IAGtC,MAML/W,EAAAA,GAAAA,KAACmgB,GAAgB,CAACjgB,OAAQyf,EAAaxf,QAAS8f,EAAalC,UAAWpB,MAG9E,EAEAkD,GAA8B7e,UAAY,CACxCwF,UAAW9C,KAAAA,MAAgB,CAAC+a,GAAkBC,GAAiBC,KAAwBhb,WACvFgZ,oBAAqBjZ,KAAAA,OAAiBC,YAGxC,YCzBO,IAAMyc,GAAa,SAAHl9B,GAGjB,IAFJC,EAAOD,EAAPC,QACAw4B,EAASz4B,EAATy4B,UAEQ9b,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACA+Y,EAAoB1e,GAAWzH,0BAA/BmmB,gBACRyH,EAII7B,KAHF7B,EAAmB0D,EAAnB1D,oBACAE,EAA+BwD,EAA/BxD,gCACAE,EAAiBsD,EAAjBtD,kBAGF,OACEzc,EAAAA,GAAAA,MAAA,OAAKC,UAAU,6BAA4BF,SAAA,EACzCL,EAAAA,GAAAA,KAAA,MAAIO,UAAU,OAAMF,SAChBR,GADgC,IAAd8b,EACJjb,GAASwb,uBAAwCxb,GAASyb,0BAE5Enc,EAAAA,GAAAA,KAAA,OAAAK,SACGld,EAAQ4I,KAAI,SAAChH,GAAM,OAClBib,EAAAA,GAAAA,KAACkY,GAAU,CAETnzB,OAAQA,EACR42B,UAAWA,GAFN52B,EAAO82B,UAGZ,OAGN7b,EAAAA,GAAAA,KAAA,OAAKO,UAAU,kCAAiCF,UAC5C0c,GAAqBF,GACrB7c,EAAAA,GAAAA,KAAC6f,GAA6B,CAACrZ,UAAWmY,GAAuBhC,oBAAqBA,KAEtF3c,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACLC,QAAQ,WACR+E,WAAYmT,GAAAA,EACZxO,GAAG,IACHzQ,KAAM/S,EAAW6xB,GACjB9X,QAAS3B,GAA+BpY,EAAW6xB,IAAkBvY,SAEpER,EAAca,GAASiY,4BAMpC,EAEAyH,GAAWhZ,aAAe,CACxBuU,WAAW,GAGbyE,GAAWpf,UAAY,CACrB7d,QAASugB,KAAAA,QAAkBA,KAAAA,MAAgB,CACzCmY,UAAWnY,KAAAA,OACXpX,MAAOoX,KAAAA,OACPqY,aAAcrY,KAAAA,OACdpa,aAAcoa,KAAAA,UACZC,WACJgY,UAAWjY,KAAAA,MAAgB,EAAC,GAAM,EAAO,QAG3C,YC5EA,GAA0B,CAAC,CAAC,UAAY,cAAc,aAAe,8GAA8G,aAAe,wIAAwI,MAAQ,gDAAgD,CAAC,UAAY,iBAAiB,aAAe,8GAA8G,aAAe,4IAA4I,MAAQ,kDAAkD,CAAC,UAAY,aAAa,aAAe,8GAA8G,aAAe,8HAA8H,MAAQ,mCAAmC,CAAC,UAAY,cAAc,aAAe,8GAA8G,aAAe,6HAA6H,MAAQ,kCAAkC,CAAC,UAAY,iBAAiB,aAAe,8GAA8G,aAAe,+IAA+I,MAAQ,sDCIzrDrjB,EAAW,CAAE4Y,KAAM,+hCCInC,IAEMhW,GAAQ5C,EAAW,CAC9BigC,aAAc,SAACv+B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EAC1CmE,KAAM,SAACnE,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EAClCoB,QAAS,SAACpB,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAiDvC,SA5B0C,WAAM,IAAAw+B,EAAAC,EAAAC,EAC0CC,EAAAlc,GAAhD7f,GAAa27B,aAAalgC,EAAcG,SAAQ,GAAjF+/B,EAAYI,EAAA,GAAEC,EAAeD,EAAA,GACSE,EAAApc,GAArB7f,GAAauB,KAAK,CAAC,GAAE,GAAtCA,EAAI06B,EAAA,GAAEC,EAAOD,EAAA,IApBS,SAACD,EAAiBE,GAC/CplB,EAAAA,WAAgB,WACd,IAAIqlB,GAAY,EAWhB,ODvBkCnhC,GAAI+W,GAHlB,GAAAnX,OAAama,GAAKlT,YAAW,uDCgBnB0P,MAAK,SAAC/G,GAC9B2xB,IACFH,EAAgBvgC,EAAcI,WAC9BqgC,EAAQ1xB,GAEZ,IAAE,OAAO,WACH2xB,GACFH,EAAgBvgC,EAAcK,OAElC,IACO,WAAQqgC,GAAY,CAAO,CAEpC,GAAG,GACL,CAKEn8B,CAAuBg8B,EAAiBE,GACxC,IAA4EE,EAAAvc,GAA9C7f,GAAaxB,SAAiB,QAATo9B,EAAAr6B,EAAKA,YAAI,IAAAq6B,OAAA,EAATA,EAAWp9B,UAAW,IAAG,GAArEA,EAAO49B,EAAA,GAAEC,EAAUD,EAAA,GACpBpF,OAAqC1hB,KAAhB,QAATumB,EAAAt6B,EAAKA,YAAI,IAAAs6B,OAAA,EAATA,EAAW7E,WAA0B,KAAgB,QAAZ8E,EAAGv6B,EAAKA,YAAI,IAAAu6B,OAAA,EAATA,EAAW9E,UAazE,OAXAlgB,EAAAA,WAAgB,WACdjP,OAAOy0B,wBAA0B,WAC/BD,EAAWE,IACXP,EAAgBvgC,EAAcI,UAChC,CACF,GAAG,IAEHib,EAAAA,WAAgB,WAAM,IAAA0lB,EACpBH,GAAoB,QAATG,EAAAj7B,EAAKA,YAAI,IAAAi7B,OAAA,EAATA,EAAWh+B,UAAW,GACnC,GAAG,CAAC+C,IAEG,CACL/C,QAAAA,EACAw4B,UAAAA,EACAyF,SAAUd,IAAiBlgC,EAAcI,WAAa2C,EAAQ2C,OAAS,EACvE4J,SAAU4wB,IAAiBlgC,EAAcK,QACnC6/B,IAAiBlgC,EAAcI,WAAgC,IAAnB2C,EAAQ2C,OAC1Du3B,UAAWiD,IAAiBlgC,EAAcG,QAE9C,ECJA,GA/CoC,WAClC,IAAA8gC,EAMInV,KALF/oB,EAAOk+B,EAAPl+B,QACAw4B,EAAS0F,EAAT1F,UAEAyF,GADQC,EAAR3xB,SACQ2xB,EAARD,UACA/D,EAASgE,EAAThE,UAEFgD,EAII7B,KAHF7B,EAAmB0D,EAAnB1D,oBACAE,EAA+BwD,EAA/BxD,gCACAE,EAAiBsD,EAAjBtD,kBAqBF,OAAIM,GACMrd,EAAAA,GAAAA,KAACshB,GAAW,IAElBF,GAAYj+B,EAAQ2C,OAAS,GAE7Bka,EAAAA,GAAAA,KAACogB,GAAU,CAACj9B,QAASA,EAASw4B,UAAWA,KAtBtCoB,GAAqBF,GAEtBvc,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAACya,GAAyB,KAC1Bza,EAAAA,GAAAA,KAAA,OAAKO,UAAU,UACfP,EAAAA,GAAAA,KAAC6f,GAA6B,CAC5BlD,oBAAqBA,EACrBnW,UAAWmY,SAMjB3e,EAAAA,GAAAA,KAACya,GAAyB,GAiBhC,whCChDO,IAAMx3B,GAAQ5C,EAAW,CAC9BkhC,WAAY,SAACx/B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EACxCy/B,YAAa,SAACz/B,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAG9B0/B,GAAiB,SAACC,GAC7BjmB,EAAAA,WAAgB,WCNwB9b,GAAI+W,GAFR,GAAAnX,OAAYma,GAAKlT,YAAW,qEDW3D0P,MAAK,SAAC/G,GACLuyB,EAAevyB,EAASjJ,KAAKs7B,YAC/B,IAAE,OACK,WACLE,EAAe,GACjB,GAEJ,GAAG,GACL,EAEaC,GAAoBlmB,EAAAA,gBAEpBmmB,GAAqB,SAAH1+B,GAAqB,IAAfmd,EAAQnd,EAARmd,SACiCwhB,EAAArd,GAA9B7f,GAAa68B,YAAY,MAAK,GAA7DA,EAAWK,EAAA,GAAEH,EAAcG,EAAA,GAIhC5E,EAAAzY,GAHkC7f,GAAa48B,WAAW,CAC1DO,oBAAoB,EACpBC,0BAA0B,IAC1B,GAHKR,EAAUtE,EAAA,GAAE+E,EAAa/E,EAAA,GAKhCt4B,GAAsB+8B,GACtB,IACMrc,GADYC,EAAAA,GAAAA,KAAVC,MACiBC,GAAAA,EAAYC,MAAMC,SAErCiY,EAAeliB,EAAAA,SACnB,iBAAO,CACL8lB,WAAAA,EACAC,YAAAA,EACAQ,cAAAA,EACAN,eAAAA,EACArc,SAAAA,EACD,GACD,CAACkc,EAAYC,EAAaQ,EAAeN,EAAgBrc,IAG3D,OACErF,EAAAA,GAAAA,KAAC2hB,GAAkBpD,SAAQ,CAAC9tB,MAAOktB,EAAatd,SAC7CA,GAGP,EAEa4hB,GAAuB,WAAH,OAASxmB,EAAAA,WAAiBkmB,GAAkB,EAE7EC,GAAmB5gB,UAAY,CAC7BX,SAAUqD,KAAAA,KAAeC,YE5DpB,IAAMue,GAAW,YACXC,GAAqB,sBACrBp9B,GAAS,qBCEhBq9B,IAAqB97B,EAAAA,EAAAA,MAAY+7B,8BAYvC,WATEC,EAAAA,GAAAA,IAAY,UAELC,EAAAA,GAAAA,IAAe,CACpBC,OAAQJ,MCPL,OAGM/pB,GAAahY,EAAW,CACnCoiC,6BAA8B,iCAC9BC,qBAAsB,yBACtBC,mBAAoB,uBACpBC,kBAAmB,wBAgBRC,GAAoC,SAACC,GAAgC,IAAxBC,EAAcpuB,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1EquB,GAAiB7jB,MAAM9G,GAAWoqB,6BAA8BK,EAAQC,EAC1E,4oBCzBO,IAAME,GAAc,CACzB17B,KAAMmc,KAAAA,OACNpX,MAAOoX,KAAAA,OACP8K,MAAO9K,KAAAA,MAAgB,CACrB0C,IAAK1C,KAAAA,SAEPwf,eAAgBxf,KAAAA,OAChByf,OAAQzf,KAAAA,QACNA,KAAAA,MAAgB,CACd2G,IAAK3G,KAAAA,OACL7kB,KAAM6kB,KAAAA,OACNqY,aAAcrY,KAAAA,UAGlB0f,gBAAiB1f,KAAAA,MAAgB,CAC/B2G,IAAK3G,KAAAA,OACLpa,aAAcoa,KAAAA,SAEhB2f,WAAY3f,KAAAA,QAGD4f,GAA6B,CACxCv+B,OAAAA,GACA,iBAAkBA,GAClBw+B,SAAUx+B,GACVy+B,MAAOz+B,GACP,wBAAyBA,GACzB,sBAAuBA,GACvB0+B,aAAc,2BACd,cAAevB,GACf,yBAA0BC,GAC1B,sBAAuBA,GACvBuB,QAAS,WACT,yBAA0B,YAGfC,IAA0B9/B,GAAA+/B,GAAG,CAAC,EACxCzB,GAAqB,uBAAqBt+B,GAAA+/B,GAC1C1B,GAAW,cAAYr+B,GAAA+/B,GACvB7+B,GAAS,gBAAc6+B,IAGbC,GAAiC,SAACC,GAE7C,GADqBA,EAAa74B,SAAS,KACzB,CAChB,IACM84B,EADoBD,EAAaE,MAAM,KAAKr3B,OAAO,GAAG,GACnBq3B,MAAM,KAAKr3B,MAAM,EAAG,GAC7D,MAAO,GAAPpN,OAAUwkC,EAAe,GAAE,KAAAxkC,OAAIwkC,EAAe,GAChD,CACA,IAAMA,EAAiBD,EAAaE,MAAM,KAAKr3B,MAAM,EAAG,GACxD,MAAO,GAAPpN,OAAUwkC,EAAe,GAAE,KAAAxkC,OAAIwkC,EAAe,GAChD,EClDa1rB,GAAahY,EAAW,CACnCsiC,mBAAoB,iCACpBsB,qBAAsB,mCACtBC,6BAA8B,6CAC9BC,sBAAuB,uCAqCZA,GAAwB,SAACxI,EAAWyI,EAAkBN,GACjEjnB,GAAmBxE,GAAW8rB,sBAAuB,CACnDrI,WAAYH,EACZ0I,wBAAyBD,EACzBvqB,KAAM,YACN+B,WAAYkoB,EAAeD,GAA+BC,GAAgB,IAE9E,utECpCO,IAAM7gC,GAAQ5C,EAAW,CAC9BigC,aAAc,SAACv+B,GAAG,OAAKuiC,EAAAA,EAAAA,UAASviC,EAAI,EACpCmE,KAAM,SAACnE,GAAG,OAAKuiC,EAAAA,EAAAA,UAASviC,EAAI,IAQjBwiC,GAA4B,WAAM,IAAA9K,EAO7C,OAFa,QAJeA,EAAGvf,GAAWpH,qBAAqB,CAC7DjF,OAAQjB,GAASC,SACjBiB,QAAS,GACTU,SAAU,IACTE,QAAQ,UAAE,IAAA+qB,GAAW,QAAXA,EAJkBA,EAIhBx0B,iBAAS,IAAAw0B,OAAA,EAJOA,EAILvyB,QAG5B,EA8HA,SAf6C,WAC3C,IAAwFw5B,EAAAlc,GAAhD7f,GAAa27B,aAAalgC,EAAcG,SAAQ,GAAjF+/B,EAAYI,EAAA,GAAEC,EAAeD,EAAA,GACSE,EAAApc,GAArB7f,GAAauB,KAAK,CAAC,GAAE,GAAtCA,EAAI06B,EAAA,GAKX,OA7DqC,SAACD,EAAiBE,GACvD,IAAMiD,EAAen/B,MAErB6/B,EAAAA,EAAAA,YAAU,WACR,INtFsCt9B,EMsFlC45B,GAAY,EAEV2D,EAAgB,SAACt1B,GACjB2xB,IACFD,EAAQ1xB,EAASjJ,MACjBy6B,EAAgBvgC,EAAcI,WAElC,EAEMkkC,EAAc,WACd5D,GACFH,EAAgBvgC,EAAcK,OAElC,EAaA,OAXIqjC,GNrGkC58B,EMuGA48B,ENtGxCnkC,GAAI+W,GAPoD,SAACxP,GAAQ,SAAA3H,OAAQma,GAAKlT,YAAW,yDAAAjH,OAAwD2H,EAAQ,KAOxIy9B,CAA2Cz9B,MMuGrDgP,KAAKuuB,GAAc,MACbC,GNtG6B/kC,GAAI+W,GARR,GAAAnX,OAAYma,GAAKlT,YAAW,0DMkH3D0P,KAAKuuB,GAAc,MACbC,GAEJ,WACL5D,GAAY,CACd,CAEF,GAAG,GACL,CAuBEn8B,CAA+Bg8B,EAFXC,EAAA,IAnBa,SAACN,EAAcp6B,GAChD,IAAM0+B,EAAyBjgC,KACzBm+B,GAAS+B,EAAAA,GAAAA,MAAuB/B,OAAO3jC,YAE7CqlC,EAAAA,EAAAA,YAAU,WACsC,IAAAM,EAA1CxE,IAAiBlgC,EAAcI,YACQ,KAAb,QAAxBskC,EAAA5+B,EAAK6+B,2BAAmB,IAAAD,OAAA,EAAxBA,EAA0Bh/B,SAC5B+8B,GAAkCC,GAClCqB,IAAsB,ELnIL,YKmIuBS,KAExC/B,GAAkCC,GAClCqB,IAAsB,ELrIF,gBKqIsBS,IAGhD,GAAG,CAAC1+B,EAAMo6B,GACZ,CAOE37B,CAA2B27B,EAAcp6B,GAElC,CACL8+B,uBAAwB9+B,EACxBm3B,UAAWiD,IAAiBlgC,EAAcG,QAC1C6gC,SAAUd,IAAiBlgC,EAAcI,UACzCykC,UAAW3E,IAAiBlgC,EAAcK,OAE9C,EAEA,GA3E4C,WAG1C,OAFuBwhC,KAAfV,UAGV,ECnFO,IAAM2D,GAAgB,SAAHhiC,GAA8B,IAAxBm4B,EAAiBn4B,EAAjBm4B,kBAC9B8J,EAAyDjZ,KAAjD6V,EAAwBoD,EAAxBpD,yBAA0BD,EAAkBqD,EAAlBrD,mBAElC,OAAKC,GAA4BD,GAC/BzG,GAAkB,IAGhBrb,EAAAA,GAAAA,KAAA,OAAKO,UAAU,iBAAgBF,UAC7BL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,qBAAoBF,UACjCL,EAAAA,GAAAA,KAAColB,GAAoB,SAMtB,IACT,EAEAF,GAAclkB,UAAY,CACxBqa,kBAAmB3X,KAAAA,KAAeC,YAGpC,YCtBO,IAAMuhB,GAAgB,SAAHhiC,GAA8B,IAAxBm4B,EAAiBn4B,EAAjBm4B,kBAC9B8J,EAAyDjZ,KAAjD6V,EAAwBoD,EAAxBpD,yBAA0BD,EAAkBqD,EAAlBrD,mBAElC,OAAKC,GAA4BD,GAC/BzG,GAAkB,IAGhBrb,EAAAA,GAAAA,KAAA,OAAKO,UAAU,sBAAqBF,UAClCL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,SAAQF,UACrBL,EAAAA,GAAAA,KAAColB,GAAoB,SAMtB,IACT,EAEAF,GAAclkB,UAAY,CACxBqa,kBAAmB3X,KAAAA,KAAeC,YAGpC,YCTA,GAd2B,WACzB,IAAQwX,EAA4BjP,KAA5BiP,wBAER,OACEnb,EAAAA,GAAAA,KAAA,OAAKO,UAAU,sBAAqBF,UAClCL,EAAAA,GAAAA,KAACwb,GAAAA,EAAO,CACNC,UAAU,SACVlb,UAAU,QACVmb,iBAAkBP,KAI1B,qDCVA,SAJ2B,WAAH,OACtBnb,EAAAA,GAAAA,KAACqlB,GAAAA,EAAQ,CAACC,OAAQ,KAAO,ECoC3B,IAtCiBjpB,EAAAA,GAAAA,IAAe,CAC9B6f,uBAAwB,CACtB3f,GAAI,gDACJC,eAAgB,sBAChBC,YAAa,2CAEf8oB,0BAA2B,CACzBhpB,GAAI,mDACJC,eAAgB,sBAChBC,YAAa,4DAEf+oB,8BAA+B,CAC7BjpB,GAAI,uDACJC,eAAgB,6CAChBC,YAAa,sDAEfgpB,gBAAiB,CACflpB,GAAI,yCACJC,eAAgB,YAChBC,YAAa,gDAEfipB,oBAAqB,CACnBnpB,GAAI,6CACJC,eAAgB,8CAChBC,YAAa,0CAEfkpB,cAAe,CACbppB,GAAI,uCACJC,eAAgB,UAChBC,YAAa,6CAEfmpB,kBAAmB,CACjBrpB,GAAI,2CACJC,eAAgB,6CAChBC,YAAa,+CCtBjB,IAAMopB,GAAc,SAAH3iC,GAQX,IAcoB4iC,EAEhBC,EAvBRz5B,EAAKpJ,EAALoJ,MACA05B,EAAQ9iC,EAAR8iC,SACAC,EAAW/iC,EAAX+iC,YACAnC,EAAY5gC,EAAZ4gC,aACAoC,EAAUhjC,EAAVgjC,WACA7C,EAAUngC,EAAVmgC,WACAx8B,EAAG3D,EAAH2D,IA0BMs/B,GAXkBL,EAWWj/B,EAT3Bk/B,EAA6C,KADpC,IAAIK,IAAIN,GACiBvM,OAG/B,GAAPh6B,OAAUumC,EADRC,EACY,2BAGF,6BAKhB,OACEzlB,EAAAA,GAAAA,MAAC8X,GAAAA,GAAI,CACH7X,UAAU,wCACVgK,GAAIvB,GAAAA,GACJE,YAAaid,EACbrlB,QAAS,YA/BO,SAACC,EAAM+kB,GACzB,IAAMO,EAAoB,CAAClE,GAAoBD,IACzCY,GAAS+B,EAAAA,GAAAA,MAAuB/B,OAAO3jC,WAEzCknC,EAAkBp7B,SAAS8V,ITOI,SAAC+hB,GAAgC,IAAxBC,EAAcpuB,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChEquB,GAAiB7jB,MAAM9G,GAAWsqB,mBAAoBG,EAAQC,EAChE,CSRMuD,CAAwBxD,GPjBI,SAACgB,EAAchiB,EAAauhB,EAAYvpB,GACxEmD,GACEJ,GAAmBxE,GAAWsqB,mBAAoB,CAChD/kB,MAAOkE,EACPnI,cAAemqB,EACfjqB,KAAM,YACN0sB,aAAc5C,GAA2BN,KAE3CvpB,EAEJ,COQM6oB,CAAmBmB,EAAcx3B,EAAOyU,EAAM+kB,KTSd,SAAChD,GAAgC,IAAxBC,EAAcpuB,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/DquB,GAAiB7jB,MAAM9G,GAAWuqB,kBAAmBE,EAAQC,EAC/D,CSTMyD,CAAuB1D,GPRO,SAACgB,EAAchiB,EAAahI,GAC9DmD,GACEJ,GAAmBxE,GAAW4rB,qBAAsB,CAClDrmB,MAAOkE,EACPnI,cAAemqB,EACfjqB,KAAM,YACN0sB,aAAc,gBAEhBzsB,EAEJ,CODMmqB,CAAqBH,EAAcx3B,EAAOw5B,GAE9C,CAqBM/O,CAAYsM,EAAY8C,EAC1B,EACAM,aAAW,EAAApmB,SAAA,EAEXL,EAAAA,GAAAA,KAACoY,GAAAA,GAAKsC,SAAQ,CACZtU,IAAK6f,EACLrL,OAAM,oBAAAr7B,OAAsB+M,GAC5Bo6B,QAASR,EACTS,QAAO,YAAApnC,OAAcymC,MAEvBhmB,EAAAA,GAAAA,KAACoY,GAAAA,GAAKE,OAAM,CACV/X,UAAU,OACVjU,OACE0T,EAAAA,GAAAA,KAACgc,GAAAA,EAAQ,CAACC,MAAO,EAAG2K,SAAS,IAAIrmB,UAAU,sCAAqCF,SAC7E/T,IAGL05B,UACEhmB,EAAAA,GAAAA,KAACgc,GAAAA,EAAQ,CAACC,MAAO,EAAG1b,UAAU,2CAA0CF,SACrE2lB,OAIPhmB,EAAAA,GAAAA,KAACoY,GAAAA,GAAKG,QAAO,CAAAlY,UACXL,EAAAA,GAAAA,KAAA,OAAKO,UAAU,kCAAiCF,UAC9CL,EAAAA,GAAAA,KAAC0O,GAAAA,EAAK,CAACnO,UAAU,6BAA4BF,SAAEgjB,UAKzD,EAEAwC,GAAY7kB,UAAY,CACtB1U,MAAOoX,KAAAA,OAAiBC,WACxBqiB,SAAUtiB,KAAAA,OAAiBC,WAC3BsiB,YAAaviB,KAAAA,OAAiBC,WAC9BmgB,aAAcpgB,KAAAA,OAAiBC,WAC/BuiB,WAAYxiB,KAAAA,OAAiBC,WAC7B0f,WAAY3f,KAAAA,OAAiBC,WAC7B9c,IAAK6c,KAAAA,OAAiBC,YAGxB,4BCpFMkjB,GAAoB,SAAH3jC,GAAuB,IAAjBmgC,EAAUngC,EAAVmgC,WAgCnBxjB,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFinB,EAhCuB,SAAC/lB,GAC5B,OAAQA,GACN,KAAKohB,GACH,MAAO,CACL4E,QAASrmB,GAAS6kB,0BAClB9oB,YAAaiE,GAAS8kB,8BACtB3+B,IAAK,gDAET,KAAKq7B,GACH,MAAO,CACL6E,QAASrmB,GAAS+kB,gBAClBhpB,YAAaiE,GAASglB,oBACtB7+B,IAAK,uCAET,QACE,MAAO,CACLkgC,QAASrmB,GAASilB,cAClBlpB,YAAaiE,GAASklB,kBACtB/+B,IAAK,sBAIb,CAU0BmgC,CAAqB3D,GACzC4D,EAAY,GAAH1nC,QAAM+G,EAAAA,EAAAA,MAAY4gC,yBAAuB3nC,OAAGunC,EAAkBjgC,KAE7E,OACEyZ,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEL,EAAAA,GAAAA,KAACgJ,GAAAA,GAAS,CACRE,YAAa+d,EACb1mB,UAAU,sCACVO,QAAS,WAhBK,IAACC,EAAMla,EAANka,EAiBDsiB,EAjBOx8B,EAiBKogC,EVzBO,SAACnE,GAAgC,IAAxBC,EAAcpuB,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClEquB,GAAiB7jB,MAAM9G,GAAWqqB,qBAAsBI,EAAQC,EAClE,CUSIoE,EAFetC,EAAAA,GAAAA,MAAuB/B,OAAO3jC,YRJL,SAACkkC,EAAYvpB,GACvDmD,GACEJ,GAAmBxE,GAAW6rB,6BAA8B,CAC1DrqB,KAAM,YACN0sB,aAAc5C,GAA2BN,KAE3CvpB,EAEJ,CQDIoqB,CAA6BnjB,EAAMla,EAc/B,EAAEwZ,UAEFC,EAAAA,GAAAA,MAAA,OAAKC,UAAU,0CAAyCF,SAAA,EACtDL,EAAAA,GAAAA,KAAA,MAAIO,UAAU,oBAAmBF,SAC9BR,EAAcinB,EAAkBC,YAEnC/mB,EAAAA,GAAAA,KAACmG,GAAAA,EAAI,CAACC,IAAKghB,GAAAA,EAAc7mB,UAAU,kCAGvCP,EAAAA,GAAAA,KAAA,KAAGO,UAAU,kCAAiCF,SAC3CR,EAAcinB,EAAkBrqB,iBAIzC,EAEAoqB,GAAkB7lB,UAAY,CAC5BqiB,WAAY3f,KAAAA,OAAiBC,YAG/B,YCnEA,IAAM0jB,GAAuB,SAAHnkC,GAAA,IAAMokC,EAAgBpkC,EAAhBokC,iBAAkBC,EAAWrkC,EAAXqkC,YAAW,OAC3DvnB,EAAAA,GAAAA,KAAA,OAAKO,UAAU,gCAA+BF,SAC3CinB,GACIC,EAAYx7B,KAAI,SAACgV,GAAI,OACtBT,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEL,EAAAA,GAAAA,KAAC6mB,GAAiB,CAACxD,WAAYtiB,KAC/Bf,EAAAA,GAAAA,KAAA,OACEO,UAAWiT,KAAW,SAAU,CAC9B,sBAAuBzS,IAAShc,KAC/Bsb,SAEFinB,EACEv5B,QAAO,SAACy5B,GAAS,OAAKlE,GAA2BkE,EAAUnE,cAAgBtiB,CAAI,IAC/EhV,KAAI,SAAC07B,GAAI,OACRznB,EAAAA,GAAAA,KAAC6lB,GAAW,CAEVh/B,IAAK4gC,EAAKn+B,aACVgD,MAAOm7B,EAAKn7B,MACZ05B,SAAUyB,EAAKtE,OAAO,GAAGtkC,KACzBonC,YAAawB,EAAKjZ,MAAMpI,IACxB0d,aAAc2D,EAAK3D,aACnBoC,WAAYuB,EAAKtE,OAAO,GAAGpH,aAC3BsH,WAAYtiB,GAPP0mB,EAAKn7B,MAQV,QAnBAyU,EAsBJ,KAEN,EAGRsmB,GAAqBrmB,UAAY,CAC/BsmB,iBAAkB5jB,KAAAA,QAChBA,KAAAA,MAAgBuf,KAChBtf,WACF4jB,YAAa7jB,KAAAA,QAAkBA,KAAAA,QAAkBC,YAGnD,uHCtCA,IAAMyc,GAAa,SAAHl9B,GAA6C,MAAvC6hC,EAAmB7hC,EAAnB6hC,oBAAqB2C,EAAWxkC,EAAXwkC,YACjC7nB,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACF8nB,EAA2D,IAA/B5C,EAAoBj/B,OAEhDwhC,GAAmBM,EAAAA,EAAAA,UAAQ,WAC/B,GAAID,EAA2B,CAC7B,IAAME,EAAiBH,EAAY/6B,MAAM,EAAG,GAC5C,OAAOo4B,EAAoBxlC,OAAOsoC,EACpC,CACA,OAAOH,CACT,GAAG,CAAC3C,EAAqB2C,EAAaC,IAEhCJ,kDAAkB,IAAIO,IAAIR,EAAiBv7B,KAAI,SAAC07B,GAAI,OAAKnE,GAA2BmE,EAAKpE,WAAW,ykBAE1G,OACE/iB,EAAAA,GAAAA,MAACynB,GAAAA,EAAS,CACRplB,KAAK,KACLpC,UAAU,0DAAyDF,SAAA,EAEnEL,EAAAA,GAAAA,KAAA,MAAAK,SACGR,EAAca,GAASwb,2BAE1Blc,EAAAA,GAAAA,KAACqnB,GAAoB,CAACC,iBAAkBA,EAAkBC,YAAaA,MAG7E,EAEAnH,GAAWpf,UAAY,CACrB+jB,oBAAqBrhB,KAAAA,QACnBA,KAAAA,MAAgBuf,KAChBtf,WACF+jB,YAAahkB,KAAAA,QACXA,KAAAA,MAAgBuf,KAChBtf,YAGJ,YCNA,GA/B+B,WAC7B,IAA4BpgB,EACpBkL,EAKRu5B,EAAwD9b,KAAhD8Y,EAAsBgD,EAAtBhD,uBAAwB3H,EAAS2K,EAAT3K,UAAW+D,EAAQ4G,EAAR5G,SACrC/b,GVMYC,EAAAA,GAAAA,KAAVC,MACOC,GAAAA,EAAYC,MAAMC,SUN3B3f,EAAamU,GAAWtH,gBACxBq1B,GATsB1kC,EASqByhC,GARzCv2B,EAAS7I,OAAO6I,OAAOlL,IACPwK,QAAO,SAAC05B,GAAI,OAAqB,IAAhBA,EAAK3hC,MAAY,IAC1CA,SAAW2I,EAAO3I,QAQlC,OAAIu3B,IAAchY,GACTrF,EAAAA,GAAAA,KAACshB,GAAW,KAGjBF,GAAa/b,GAAa4iB,EAS1B7G,GAAYr7B,IAAesf,GAAY4iB,GAClCjoB,EAAAA,GAAAA,KAACma,GAAa,IAEhB,MAVHna,EAAAA,GAAAA,KAACogB,GAAU,CACTsH,YAAa1C,EAAuBkD,iBACpCnD,oBAAqBC,EAAuBD,qBAAuB,IAS3E,ECjBA,GAf4B,YX+BwB,WAClD,IAAMoD,EAA0BjuB,GAAW1H,6BACrC41B,EAAsBluB,GAAW1E,sBAAsB9U,EAAYC,YACnEikC,EAAyBjgC,KACzBm+B,GAAS+B,EAAAA,GAAAA,MAAuB/B,OAAO3jC,WAE7CkpC,EAKIpG,KAJYH,EAAkBuG,EAAhC9G,WAAcO,mBACdE,EAAaqG,EAAbrG,cACA3c,EAAQgjB,EAARhjB,SACAmc,EAAW6G,EAAX7G,aAGFgD,EAAAA,EAAAA,YAAU,WACR,IAAK1C,GAAsC,OAAhBN,GAuBrB4G,EAAqB,CACvB,IAAAE,GAtBMvF,EAAiB,CACrBwF,eAAgBljB,EAChBmjB,qBAAsBL,EACtB17B,SAAU+0B,EAAcA,EAAYh0B,cAAgB,IAEhD+zB,EH5C0C,SAACuB,EAAQC,GAC/D,IAAMhF,EAAYiF,cAAgB,EAAhBA,GAAkByF,SAXS,gDAa3C3F,EACAC,GAGF,MAAO,CACL2F,oBAAmC,OAAd3K,EACrB4K,oBAlBiD,sDAkB5B5K,EAEzB,CGiC2B6K,CAAyC9F,EAAQC,GAEpEf,GAAc,SAACvE,GAAI,OAAAp6B,GAAAA,GAAA,GACdo6B,GAAI,IACPqE,oBAAoB,EACpBC,yBAA0BR,EAAWoH,qBAAmB,IAGnDpH,GASCmH,EAAmBJ,EAAnBI,oBAAqBC,EAAmBL,EAAnBK,oBAEzBD,IAAwBC,IAP5B9F,GAAkCC,GAClCqB,IAAsB,ELlEP,UKkEsBS,GASvC,CA5B2B,IACnB7B,EAKAxB,CAyBZ,GAAG,CAACO,EAAoBN,GAC1B,CW7EEtV,GACA,IAAAiZ,EAAyDjZ,KAAjD6V,EAAwBoD,EAAxBpD,yBAA0BD,EAAkBqD,EAAlBrD,mBAElC,OAAIC,GAA4BD,GAE5B9hB,EAAAA,GAAAA,KAAA,OAAKO,UAAU,gBAAeF,UAC5BL,EAAAA,GAAAA,KAAC6oB,GAAsB,MAKtB,IACT,isCCVO,IAAMC,GAAe,CAC1BC,WAAY,CACVC,YAAa,CACXC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,IAEzBE,UAAW,CACTJ,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBC,GAAI,CAAEF,KAAM,GAAIC,OAAQ,KAG5BG,QAAS,CACPL,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,KAIdI,GAAkB,SAAHrmC,GAAuC,IAAjCmd,EAAQnd,EAARmd,SAAmBmpB,EAAOtmC,EAAhBomC,QAC1CG,EAIIvd,KAHFiM,EAAWsR,EAAXtR,YACA8C,EAAcwO,EAAdxO,eACAI,EAAiBoO,EAAjBpO,kBAGIqO,EAAwBzO,EAC1B6N,GAAaC,WAAWC,YACxBF,GAAaC,WAAWM,UAE5B,OACE/oB,EAAAA,GAAAA,MAACynB,GAAAA,EAAS,CAAC4B,OAAK,EAAChnB,KAAK,KAAItC,SAAA,EACxBC,EAAAA,GAAAA,MAACspB,GAAAA,EAAG,CAAAvpB,SAAA,EACFL,EAAAA,GAAAA,KAAC6pB,GAAAA,EAAGxmC,GAAAA,GAAA,GAAKqmC,GAAqB,IAAEnpB,UAAU,qBAAoBF,SAC3DA,MAEHC,EAAAA,GAAAA,MAACupB,GAAAA,EAAGxmC,GAAAA,GAAA,GAAKylC,GAAaQ,SAAO,IAAE/oB,UAAU,iBAAgBF,SAAA,EACrD8X,IAAgBnY,EAAAA,GAAAA,KAAA,MAAIO,UAAU,oBAAmBF,SAAC,OACpDL,EAAAA,GAAAA,KAACwpB,EAAO,CAACnO,kBAAmBA,YAGhCrb,EAAAA,GAAAA,KAAC4pB,GAAAA,EAAG,CAAAvpB,UACFL,EAAAA,GAAAA,KAAC6pB,GAAAA,EAAG,CAAAxpB,UACFL,EAAAA,GAAAA,KAAC8pB,GAAY,UAKvB,EACAP,GAAgBvoB,UAAY,CAC1BX,SAAUqD,KAAAA,KAAeC,WACzB2lB,QAAS5lB,KAAAA,KAAeC,YAG1B,YCdA,GA9ByB,YvCHa,WACpC,IAAMhjB,EAAaub,GAAS5B,mBAC5BmB,EAAAA,WAAgB,WAAQ9a,GAAc,GAAG,GAC3C,CuCCEurB,GACA,IAAQ8O,EAAc9O,KAAd8O,UACFj1B,EAAamU,GAAWtH,gBACxB3M,EAAyBiU,GAAWrH,4BACpC0qB,EAAgBrjB,GAAW5E,oBAAoB5U,EAAYC,YAC3DyF,EAAyB8T,GAAWlH,4BAE1C,OACEsN,EAAAA,GAAAA,MAAA,OAAK/D,GAAG,sBAAsBgE,UAAU,8BAA6BF,SAAA,EACnEL,EAAAA,GAAAA,KAAA,MAAIO,UAAU,UAASF,SAAE2a,KACvBuC,IACAjd,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,CACGpa,IAA0B+Z,EAAAA,GAAAA,KAACJ,GAAwB,IAClD7Z,GAAcK,IAA2B4Z,EAAAA,GAAAA,KAAC+pB,GAAkB,QAGlE/pB,EAAAA,GAAAA,KAAA,OAAKzD,GAAG,oBAAmB8D,SACxBkd,GACIvd,EAAAA,GAAAA,KAACshB,GAAW,KAEbthB,EAAAA,GAAAA,KAACupB,GAAe,CAACD,QAASvjC,EAAaikC,GAAgBC,GAAiB5pB,UACtEL,EAAAA,GAAAA,KAACiZ,GAAU,UAMzB,iBC7BA,SAbwB54B,EAAW,CACjC6pC,aAAc,CACZ3tB,GAAI,uBACJE,YAAa,+BACbD,eAAgB,eAElB2tB,iBAAkB,CAChB5tB,GAAI,2BACJE,YAAa,qBACbD,eAAgB,8eC4CpB,SA/CmB,WACjB,IAAQqD,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFuqB,EAAU,CACdC,SAAS,EACTC,UAAW,CACTC,eAAgB,CACdC,SAAS,GAEXC,KAAM,CACJC,UAAU,EACVC,YAAa,CACXH,QAAS,CAAC,mBAAoB,uBAAwB,eAAgB,YAAa,8BAA+B,QAAS,gBAG/HI,YAAa,CACXC,YAAa,CACX,CACEtuB,GAAI,aACJuuB,SAAS,EACTC,OAAQ,CAAC,CAAExuB,GAAI,cAAeyuB,QAAS,CAAE,IAAK,QAGlDb,iBAAkB,CAChB,IAAKtqB,EAAca,GAASypB,mBAE9Bc,aAAa,GAEfC,WAAY,CACVC,uBAAuB,GAEzBC,UAAW,CACTV,UAAU,EACVW,uBAAuB,EACvB/+B,MAAO,CAAE,IAAKuT,EAAca,GAASwpB,eACrCoB,OAAQ,CACNzkC,IAAK,0CACLhI,KAAM,CAAE,IAAKghB,EAAca,GAASwpB,mBAM5C,OACElqB,EAAAA,GAAAA,KAACurB,GAAAA,uvBAAOloC,CAAA,CAACmoC,OAAK,EAACC,YAAYnlC,EAAAA,EAAAA,MAAYoL,aAAiB04B,GAE5D,EC7CA,IAAiBsB,gBANcrrC,EAAW,CACxCE,QAAS,UACTqqB,SAAU,WACVO,SAAU,0mDCFL,IAAMwgB,GAAYtrC,EAAW,CAClCurC,IAAK,CAAE/sC,KAAM,uBACbgtC,IAAK,CAAEhtC,KAAM,SAGF2G,GAAkB,CAC7B,CACE6G,SAAU,WACV3D,aAAc,oHACduD,WAAY,0HACZK,MAAO,iCACPF,WAAY,qBACZD,YAAa,yBACbD,gBAAiB,GAEnB,CACEG,SAAU,0BACV3D,aAAc,8HACduD,WAAY,0HACZK,MAAO,qCACPF,WAAY,uBACZD,YAAa,yBACb2/B,eAAgB,0BAChB5/B,gBAAiB,GAEnB,CACEG,SAAU,WACV3D,aAAc,oHACduD,WAAY,0HACZK,MAAO,iCACPF,WAAY,uBACZD,YAAa,yBACbD,gBAAiB,GAEnB,CACEG,SAAU,0BACV3D,aAAc,8HACduD,WAAY,0HACZK,MAAO,qCACPF,WAAY,uBACZD,YAAa,yBACb2/B,eAAgB,0BAChB5/B,gBAAiB,IAKR6/B,GAAc,SAACtoC,GAAK,sBAAAlE,OAAqBkE,EAAK,cAAAlE,OAAakE,EAAK,EAChEuoC,GAAkB,SAACvoC,GAAK,sBAAAlE,OAAqBkE,EAAK,EAClDwoC,GAAoB,SAACxoC,GAAK,uCAAAlE,OAAsCkE,EAAK,EACrEyoC,GAAqB,SAACzoC,GAAK,iCAAAlE,OAAgCkE,EAAK,EAEvEiF,GAAe,2EAGRyjC,GAAW,uBACXC,GAAa,uBAEbC,GAAW,IAAIpqC,KAC5BoqC,GAASrkC,QAAQqkC,GAASpkC,UAAY,IAC/B,IAAMqkC,GAAcD,GAASE,eAiDvBC,GAAmB,WAAH,IAAItmC,EAAIyO,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAAtR,GAAA,CACxC4F,WAAW,EACXD,YAAY,EACZD,UAAW7C,EAAK+C,UA1DS,uBA0DiBmjC,GAC1CtjC,QAxD2B,uBAyD3BI,gBAAiB,OACjBG,QAAS,qCACTC,aAAc,0CACdE,YAAa,yCACbE,YAAa,yCACbD,UAAW,wCACRvD,EAAI,EAGIumC,GAAa,CACxB7iC,kBAAmB,2BACnBC,aAAc,uBACdxC,WAAY,qBACZjI,OAAO,EACP0K,WAAW,EACXC,cAAe,MAGJ2iC,GAAoB,WAAH,IAAIxmC,EAAIyO,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAAtR,GAAA,CACzC6G,iBAAkB,CAChBG,YAAY,EACZ0e,uBAAuB,EACvB5e,SAAS,GAEXK,sBAA4C,IAApBtE,EAAK8D,WAAwB,KAAOoiC,GAC5D3hC,YAAavE,EAAK0E,YAAa,KAC/BL,YAAY,EACZG,SAAUxE,EAAK0E,aAAmC,IAApB1E,EAAK8D,WACnCW,uBAAsBzE,EAAK0E,YAAa,KACxCC,gBAAgB,EAChBC,oBAAoB,EACpBd,YAAY,EACZY,YAAY,GACT1E,EAAI,EAGIymC,GAAqB,WAAU,OAAAtpC,GAAA,CAC1C+E,cAAe,KACfK,cAAc,EACdD,UAAU,EACVF,gBAAgB,EAChBD,eAAgB,8CALqBsM,UAAA7O,OAAA,QAAAmU,IAAAtF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAMlC,EAGIlJ,GAAoB,CAC/B,CACE1C,UAAW,uBACXD,QAAS,uBACT5B,SAAU6kC,GAAY,MAExB,CACEhjC,UAAW,uBACXD,QAAS,uBACT5B,SAAU6kC,GAAY,OAExB,CACEhjC,UAAW,uBACXD,QAAS,uBACT5B,SAAU6kC,GAAY,OAExB,CACEhjC,UAAW,uBACXD,QAAS,uBACT5B,SAAU6kC,GAAY,OAExB,CACEhjC,UAAW,uBACXD,QAAS,uBACT5B,SAAU6kC,GAAY,QAIpBa,GAAe,CAEnB,CACEhkC,WAAY,wCAGd,CACEA,WAAY,0DACZjF,WAAY,CACVuG,iBAAkB,CAChBG,YAAY,EACZ0e,uBAAuB,EACvB5e,SAAS,KAKf,CACEvB,WAAY,8EACZjF,WAAY,CACVuG,iBAAkB,CAChBG,YAAY,EACZ0e,uBAAuB,EACvB5e,SAAS,KAKf,CACEvB,WAAY,uCACZ3D,UAAW,CAAEgE,WAAW,IAG1B,CACEL,WAAY,0DACZjF,WAAY,CACVuG,iBAAkB,CAChBG,YAAY,EACZ0e,uBAAuB,EACvB5e,SAAS,IAGblF,UAAW,CAAEgE,WAAW,IAG1B,CACEL,WAAY,6EACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CACV6G,qBAAsB2hC,GACtBxhC,sBAAsB,IAI1B,CACE/B,WAAY,kGACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CACV6G,qBAAsB2hC,GACtB1hC,YAAY,EACZE,sBAAsB,IAI1B,CACE/B,WAAY,4FACZ3D,UAAW,CACT6D,QAASqjC,GACTljC,WAAW,GAEbtF,WAAY,CACV6G,qBAAsB2hC,GACtBxhC,sBAAsB,IAI1B,CACE/B,WAAY,+FACZ3D,UAAW,CACT6D,QAASqjC,GACTnjC,YAAY,EACZC,WAAW,GAEbtF,WAAY,CACV6G,qBAAsB2hC,GACtBxhC,sBAAsB,IAI1B,CACE/B,WAAY,wDACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CAAE4G,YAAY,IAG5B,CACE3B,WAAY,qEACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CACV6G,qBAAsB2hC,GACtBxhC,sBAAsB,EACtBJ,YAAY,IAIhB,CACE3B,WAAY,qFACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CACV6G,qBAAsB2hC,GACtB1hC,YAAY,EACZE,sBAAsB,EACtBJ,YAAY,IAIhB,CACE3B,WAAY,+FACZ3D,UAAW,CACTgE,WAAW,EACXH,QAASqjC,IAEXxoC,WAAY,CACV6G,qBAAsB2hC,GACtB1hC,YAAY,EACZE,sBAAsB,EACtBJ,YAAY,GAEdsiC,MAAO,CAAEhhC,WAAW,IAGtB,CACEjD,WAAY,kGACZ3D,UAAW,CACTgE,WAAW,EACXD,YAAY,EACZF,QAASqjC,IAEXxoC,WAAY,CACV6G,qBAAsB2hC,GACtB1hC,YAAY,EACZE,sBAAsB,EACtBJ,YAAY,GAEdsiC,MAAO,CAAEhhC,WAAW,KAGlBihC,GAAkB,CAEtB,CACElkC,WAAY,kDACZjF,WAAY,CAAEiH,YAAY,IAG5B,CACEhC,WAAY,uDACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CAAEiH,YAAY,IAG5B,CACEhC,WAAY,uDACZ3D,UAAW,CAAEgE,WAAW,GACxBtF,WAAY,CAAE4G,YAAY,EAAMK,YAAY,IAG9C,CACEhC,WAAY,2DACZ3D,UAAW,CAAEgE,WAAW,GACxB3D,UAAW,CAAEuG,WAAW,GACxBlI,WAAY,CAAE4G,YAAY,EAAMK,YAAY,IAG9C,CACEhC,WAAY,qDACZjF,WAAY,CACV4G,YAAY,EACZK,YAAY,GAEd3F,UAAW,CAAEgE,WAAW,EAAMD,YAAY,GAC1C1D,UAAW,CAAEuG,WAAW,GACxB/G,YAAa,CACX0D,UAAU,IAId,CACEI,WAAY,mEACZjF,WAAY,CACV4G,YAAY,EACZK,YAAY,GAEd3F,UAAW,CAAEgE,WAAW,EAAMD,YAAY,GAC1ClE,YAAa,CACX0D,UAAU,EACVJ,cAAegkC,KAInB,CACExjC,WAAY,qEACZjF,WAAY,CACV4G,YAAY,EACZK,YAAY,GAEd3F,UAAW,CAAEgE,WAAW,EAAMD,YAAY,GAC1ClE,YAAa,CAAE2D,cAAc,IAG/B,CACEG,WAAY,oFACZjF,WAAY,CACV4G,YAAY,EACZK,YAAY,GAEd3F,UAAW,CAAEgE,WAAW,EAAMD,YAAY,GAC1ClE,YAAa,CACX0D,UAAU,EACVF,gBAAgB,EAChBF,cAAe+jC,GACf9jC,eAAgBK,KAIpB,CACEE,WAAY,qFACZjF,WAAY,CACV4G,YAAY,EACZK,YAAY,GAEd3F,UAAW,CACTgE,WAAW,EACXD,YAAY,EACZF,QAASqjC,IAEXrnC,YAAa,CACX0D,UAAU,EACVF,gBAAgB,EAChBF,cAAe+jC,KAInB,CACEvjC,WAAY,kGACZjF,WAAY,CACV4G,YAAY,EACZK,YAAY,GAEd3F,UAAW,CACTgE,WAAW,EACXD,YAAY,EACZF,QAASqjC,IAEXrnC,YAAa,CACX0D,UAAU,EACVF,gBAAgB,EAChBF,cAAe+jC,GACf9jC,eAAgBK,MAIhBqkC,GAA8B,CAElC,CACEnkC,WAAY,kCACZjF,WAAY,CACViH,YAAY,EACZV,iBAAkB,CAChBG,YAAY,EACZ0e,uBAAuB,EACvB5e,SAAS,IAGblF,UAAW,CAAEgE,WAAW,GACxBzG,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAAA,GACAJ,eAAgB+gC,GAChBY,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,IAIlB,CACElS,WAAY,iFACZjF,WAAY,CACViH,YAAY,EACZV,iBAAkB,CAClB,GAEFjF,UAAW,CAAEgE,WAAW,GACxBzG,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAAA,GACAJ,eAAgB+gC,GAChBY,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,IAIlB,CACElS,WAAY,uEACZjF,WAAY,CACViH,YAAY,EACZL,YAAY,GAEdtF,UAAW,CAAEgE,WAAW,GACxBzG,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAAA,GACAJ,eAAgB+gC,GAChBY,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,GAEhBxV,UAAW,CAAEuG,WAAW,IAG1B,CACEjD,WAAY,sFACZjF,WAAY,CACViH,YAAY,EACZL,YAAY,GAEdtF,UAAW,CAAEgE,WAAW,GACxBzG,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAAA,GACAJ,eAAgB8gC,GAChBa,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,IAIlB,CACElS,WAAY,wDACZjF,WAAY,CACViH,YAAY,GAEd3F,UAAW,CAAEgE,WAAW,EAAMD,YAAY,GAC1CxG,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAmB,KACnBJ,eAAgB8gC,GAChBa,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,GAEhBxV,UAAW,CAAEuG,WAAW,IAG1B,CACEjD,WAAY,mFACZjF,WAAY,CACViH,YAAY,GAEd3F,UAAW,CAAEgE,WAAW,EAAMD,YAAY,GAC1CxG,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAmB,KACnBJ,eAAgB8gC,GAChBa,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,GAEhBhW,YAAa,CACX0D,UAAU,EACVF,gBAAgB,EAChBF,cAAe+jC,GACf9jC,eAAgBK,KAIpB,CACEE,WAAY,+EACZjF,WAAY,CACViH,YAAY,GAEd3F,UAAW,CACTgE,WAAW,EACXD,YAAY,EACZF,QAASqjC,IAEX3pC,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAmB,KACnBuhC,cAAe,0BACfxhC,aAAa,EACbsP,cAAc,EACdzP,eAAgB8gC,GAChBzgC,WAAW,GAEbpG,UAAW,CAAEuG,WAAW,IAG1B,CACEjD,WAAY,oFACZjF,WAAY,CACViH,YAAY,GAEd3F,UAAW,CACT+D,YAAY,EACZC,WAAW,EACXH,QAASqjC,IAEX3pC,YAAa,CACX+E,KAAM2kC,GAAmB,GACzBzgC,kBAAmB,KACnBJ,eAAgB8gC,GAChBa,cAAe,0BACfthC,WAAW,EACXoP,cAAc,EACdtP,aAAa,GAEf1G,YAAa,CACX0D,UAAU,EACVF,gBAAgB,EAChBF,cAAe+jC,GACf9jC,eAAgBK,MAIhBukC,GAAgB,CACpB,CACErkC,WAAY,qDACZ1D,OAAM7B,GAAAA,GAAA,GACDopC,IAAU,IACb5iC,aAAc,KACdxC,WAAY,OAEd1D,WAAY,CAAEqG,YAAY,IAE5B,CACEpB,WAAY,mDACZ1D,OAAQunC,GACR9oC,WAAY,CAAEqG,YAAY,IAE5B,CACEpB,WAAY,sCACZ1D,OAAM7B,GAAAA,GAAA,GAAOopC,IAAU,IAAE3iC,WAAW,IACpCnG,WAAY,CAAEqG,YAAY,IAE5B,CACEpB,WAAY,kCACZ1D,OAAM7B,GAAAA,GAAA,GACDopC,IAAU,IACb3iC,WAAW,EACXC,cAAemjC,GAAAA,gBAA2B3sC,UAE5CoD,WAAY,CAAEqG,YAAY,IAE5B,CACEpB,WAAY,mCACZ1D,OAAM7B,GAAAA,GAAA,GACDopC,IAAU,IACb3iC,WAAW,EACXC,cAAemjC,GAAAA,gBAA2BtiB,WAE5CjnB,WAAY,CAAEqG,YAAY,IAE5B,CACEpB,WAAY,iDACZ1D,OAAM7B,GAAAA,GAAA,GACDopC,IAAU,IACb3iC,WAAW,EACXC,cAAemjC,GAAAA,gBAA2B/hB,SAC1C/rB,OAAO,IAETuE,WAAY,CAAEqG,YAAY,KAIjBmjC,GAAa,GAAH5tC,OAClBqtC,GACAE,GACAC,GACAE,IAOQG,GAAqB,CAChC,CACExkC,WAAY,yCACZpG,YAAa,CACX+E,KAAM2kC,GAAmB,IACzBzgC,kBAAAA,GACAJ,eAAgB+gC,GAChBY,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,IAEf,CACDlS,WAAY,gEACZpG,YAAa,CACX+E,KAAM2kC,GAAmB,IACzBzgC,kBAAAA,GACAJ,eAAgBihC,GAChBU,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,IAEf,CACDlS,WAAY,+EACZpG,YAAa,CACX+E,KAAM2kC,GAAmB,IACzBzgC,kBAAAA,GACAJ,eAAgB8gC,GAChBa,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,IAEf,CACDlS,WAAY,kFACZpG,YAAa,CACX+E,KAAM2kC,GAAmB,IACzBzgC,kBAAmB,GACnBJ,eAAgB8gC,GAChBa,cAAe,0BACfthC,WAAW,EACXF,aAAa,EACbsP,cAAc,KAKduyB,GAAkB,CACtB1B,GAAUC,IACVD,GAAUE,IACV,MAGIyB,GAAe,CACnB,CAAEziC,gBAAgB,EAAOC,oBAAoB,GAC7C,CAAED,gBAAgB,EAAMC,oBAAoB,GAC5C,CAAED,gBAAgB,EAAMC,oBAAoB,IAGxCyiC,GAAkB,CACtB,CAAE/nC,gBAAAA,IACF,CAAEA,gBAAiB,CAACA,GAAgB,KACpC,CAAEA,gBAAiB,KAGfgoC,GAAY,SAAC1wB,EAASrZ,GAAK,OAAKqZ,EAAQrZ,EAAQqZ,EAAQhX,OAAO,EAExD2nC,GAAuB,SAAHvqC,EAA6BO,GAAU,IAAjCmF,EAAU1F,EAAV0F,WAAe1C,EAAIgP,GAAAhS,EAAAiS,IAClDjO,EAAW6kC,GAAYtoC,GACvBkF,EAAeqjC,GAAgBvoC,GAC/BoF,EAAiBojC,GAAkBxoC,GACnCiqC,EAAmB,IAAIzrC,KAC7ByrC,EAAiB1lC,QAAQ0lC,EAAiBzlC,UAAYxE,EAAQ,GAC9D,IAAMG,EAAe8pC,EAAiBC,cAChCjqC,EAAGL,GAAAA,GAAA,CACPiC,UAAW,CAAEuG,WAAW,GACxBrJ,YAAa,KACb0C,OAAQ,CAAC,GACNgB,GAAI,IACPpB,YAAa6nC,GAAmBzmC,EAAKpB,aACrCnB,WAAY+oC,GAAiBrpC,GAAAA,GAAC,CAC5BO,aAAAA,GACG4pC,GAAUF,GAAc7pC,IACxByC,EAAKvC,aAEVsB,UAAWunC,GAAgBnpC,GAAAA,GAAC,CAAC,EACxB6C,EAAKjB,WAAS,IACjBiC,SAAAA,KAEFnC,OAAQ,CACN6D,WAAAA,EACAF,aAAAA,GACAC,aAAAA,EACAE,eAAAA,GAEF7D,eAAgBwoC,GAAUH,GAAiB5pC,GAC3CiC,SAAU8nC,GAAUD,GAAiB9pC,KAKvC,OAHIC,EAAIC,WAAW8G,aACjB/G,EAAIuB,UAAUsE,WAAa,oBAEtB7F,CACT,EAEakqC,GAAyB,SAAH7pC,EAA6BN,GAAU,IAAjCmF,EAAU7E,EAAV6E,WAAe1C,EAAIgP,GAAAnR,EAAA8pC,IACpDllC,EAAeqjC,GAAgB,IAAMvoC,GACrCoF,EAAiBojC,GAAkB,IAAMxoC,GAC/C,OAAAJ,GAAAA,GAAA,CACEM,WAAY+oC,GAAkB,CAC5B1iC,YAAY,EACZpG,aAAc,KACd4G,qBAAsB,KACtBC,YAAY,EACZF,YAAY,EACZG,SAAS,EACTC,sBAAsB,EACtBE,gBAAgB,EAChBD,YAAY,IAEdtF,UAAW,KACXR,YAAa,KACbG,UAAW,MACRiB,GAAI,IACPnB,OAAQ,CACN6D,WAAAA,EACAD,aAAAA,EACAD,aAAAA,GACAG,eAAAA,GAEF7D,eAAgBwoC,GAAUH,GAAiB5pC,GAC3CiC,SAAU8nC,GAAUD,GAAiB9pC,IAEzC,EASA,UACEmqC,uBAAAA,GACAH,qBAAAA,GACAK,cAN2BX,GAAWphC,IAAI0hC,IAO1CM,gBAN6BX,GAAmBrhC,IAAI6hC,IAOpD34B,WA5vBwB,CACxBxS,kBAAmB,CACjBurC,UAAU,EACV1yB,aAAc,4BAEhB5Y,oBAAqB,CAAEkb,MAAO,YAAa/W,IAAK,kBAChDlE,iBAAkB,CAChB4mB,aAAc,sBACdC,aAAc,oBACdoP,gBAAiB,yBAEnBh2B,iBAAkB,CAChB,CACE8F,aAAc,8HACdE,WAAY,qBACZqlC,UAAW,4BAEb,CACEvlC,aAAc,8HACdE,WAAY,2EACZqlC,UAAW,4BAEb,CACEvlC,aAAc,8HACdE,WAAY,qBACZqlC,UAAW,4BAEb,CACEvlC,aAAc,8HACdE,WAAY,qBACZqlC,UAAW,6BAGfjqC,oBAAqB,CACnB+P,SAAU,CACRF,WAAW,EACX2gB,YAAa,UACbtgB,UAAW,wEAEbF,QAAS,CACPH,WAAW,EACX2gB,YAAa,UACbtgB,UAAW,0ECtGV,IAAMg6B,GAAa,SAAHhrC,GAEjB,IADJmd,EAAQnd,EAARmd,SAGE,OACEL,EAAAA,GAAAA,KAACgd,GAA6B,CAAA3c,SAC3BA,GAKT,EACA6tB,GAAWltB,UAAY,CACrBX,SAAUqD,KAAAA,UAAoB,CAC5BA,KAAAA,KACAA,KAAAA,QAAkBA,KAAAA,QACjBC,YAGL,4ECWA,UAjCiBtH,EAAAA,GAAAA,IAAe,CAC9B8xB,OAAQ,CACN5xB,GAAI,uBACJC,eAAgB,YAChBC,YAAa,yBAEf2xB,UAAW,CACT7xB,GAAI,0BACJC,eAAgB,eAChBC,YAAa,4BAEf4xB,aAAc,CACZ9xB,GAAI,6BACJC,eAAgB,SAChBC,YAAa,+BAEf6xB,iBAAkB,CAChB/xB,GAAI,iCACJC,eAAgB,oBAChBC,YAAa,6CAEf8xB,eAAgB,CACdhyB,GAAI,+BACJC,eAAgB,wDAChBC,YAAa,0CAEf+xB,aAAc,CACZjyB,GAAI,6BACJC,eAAgB,4BAChBC,YAAa,2JCtBV,IAAMxZ,GAAQ5C,EAAW,CAC9BouC,gBAAiB,SAAC1sC,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAYzC2sC,GAA4B,CAChC,IAAKhuB,GAAS6tB,gBAUHI,GAAuB,SAAHzrC,GAE3B,IADJyY,EAAiBzY,EAAjByY,kBAEQkE,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACF+uB,EAAqB1yB,GAASlB,kBAC9B6zB,EAAwB3yB,GAASjB,qBAEvC6zB,EAKI50B,GAAW9E,oBAJbnF,EAAc6+B,EAAd7+B,eACAC,EAAoB4+B,EAApB5+B,qBACAC,EAAqB2+B,EAArB3+B,sBACAC,EAAqB0+B,EAArB1+B,sBAEF2+B,EAjCgC,WAChC,QAA8EC,KAAhCrqC,GAAa8pC,gBAAgB,MAAG,s5BAAvEA,EAAeO,EAAA,GAAEC,EAAkBD,EAAA,GAE1C,MAAO,CACLE,4BAFkC,SAAC7vC,GAAC,OAAK4vC,EAAmB5vC,EAAET,OAAO6R,MAAM,EAG3Eg+B,gBAAAA,EAEJ,CA0B2D9pC,GAAjD8pC,EAAeM,EAAfN,gBAAiBS,EAA2BH,EAA3BG,4BAEnBC,EAtBiC,SAACx/B,GACxC,OAAmB,MAAfA,EACK,KAEF++B,GAA0B/+B,IAAgB+Q,GAAS8tB,YAC5D,CAiBiCY,CAA0Bh/B,GAMzD,MAAO,CACLi/B,cAAe1zB,aAAiB,EAAjBA,EAAmB2zB,cAClCr/B,eAAAA,EACAC,qBAAAA,EACAC,sBAAAA,EACAg/B,uBAAAA,EACAV,gBAAAA,EACAc,uBAZ6B,SAACt2B,GAAI,OAAK,SAAC5Z,GACxCuvC,EAAmB31B,GACnB5Z,EAAE6d,gBACJ,CAAC,EAUC2xB,sBAAAA,EACAK,4BAAAA,EACArvB,cAAAA,EAEJ,ECyBA,SAxE6B,WAC3B,IAAQlE,EAAsBF,EAAAA,WAAiBC,GAAAA,GAAvCC,kBAER6zB,EAWIb,GAAqB,CAAEhzB,kBAAAA,IAVzB0zB,EAAaG,EAAbH,cACAp/B,EAAcu/B,EAAdv/B,eACAC,EAAoBs/B,EAApBt/B,qBACAC,EAAqBq/B,EAArBr/B,sBACAs+B,EAAee,EAAff,gBACAU,EAAsBK,EAAtBL,uBACAD,EAA2BM,EAA3BN,4BACAL,EAAqBW,EAArBX,sBACAU,EAAsBC,EAAtBD,uBACA1vB,EAAa2vB,EAAb3vB,cAGF,OAAKwvB,GAGHrvB,EAAAA,GAAAA,KAAA,OAAKO,UAAU,uBAAsBF,UACnCL,EAAAA,GAAAA,KAAC4C,GAAAA,GAAI,CAACrC,UAAU,uBAAsBF,SACnCpQ,GACCqQ,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEC,EAAAA,GAAAA,MAACmvB,GAAAA,EAAS,CAACC,QAAM,EAACnvB,UAAU,wBAAuBF,SAAA,EACjDL,EAAAA,GAAAA,KAACmG,GAAAA,EAAI,CAACC,IAAKupB,GAAAA,IACV9vB,EAAca,GAAS0tB,eAE1BpuB,EAAAA,GAAAA,KAAC2G,GAAAA,EAAI,CACHpG,UAAU,kBACVqG,UAAWP,GAAAA,EACXvF,QAAS+tB,EAAsBxuB,SAE9BouB,QAILnuB,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEC,EAAAA,GAAAA,MAACmvB,GAAAA,EAAS,CAACC,QAAM,EAACnzB,GAAG,wBAAwBgE,UAAU,wBAAuBF,SAAA,EAC5EL,EAAAA,GAAAA,KAACmG,GAAAA,EAAI,CAACC,IAAKupB,GAAAA,IACV9vB,EAAca,GAASytB,YAE1B7tB,EAAAA,GAAAA,MAACsvB,GAAAA,EAAS,CAACC,UAAW3/B,EAAsBqQ,UAAU,wBAAuBF,SAAA,EAC3EL,EAAAA,GAAAA,KAACsK,GAAAA,EAAW,CACV7Z,MAAOg+B,EACPzrB,SAAUksB,EACVY,cAAejwB,EAAca,GAAS4tB,kBACtC,kBAAgB,0BAEjBp+B,IACC8P,EAAAA,GAAAA,KAAC+vB,GAAAA,EAAmB,CAAChvB,KAAK,UAAUivB,SAAS,EAAM3vB,SAChDR,EAAcsvB,SAIrBnvB,EAAAA,GAAAA,KAACiwB,GAAAA,EAAc,CACbnqB,UAAW2oB,EAAgB3oC,OAC3B+a,QAAQ,QACRC,QAASyuB,EAAuBd,GAChCyB,OAAQ,CACNC,QAAStwB,EAAca,GAAS2tB,eAElC9tB,UAAU,OACVtd,MAAOkN,EAAwB,UAAY,UAC3C4Q,KAAK,kBA/CY,IAsD/B,8BCoEA,SAAe,IAA0B,uCC1HzC,IAjCiB1E,EAAAA,GAAAA,IAAe,CAC9B+zB,iBAAkB,CAChB7zB,GAAI,qCACJE,YAAa,kDACbD,eAAgB,eAElB6zB,+BAAgC,CAC9B9zB,GAAI,iDACJE,YAAa,2CACbD,eAAgB,4FAElB8zB,2BAA4B,CAC1B/zB,GAAI,6CACJE,YAAa,uCACbD,eAAgB,2BAElB+zB,wBAAyB,CACvBh0B,GAAI,0CACJE,YAAa,mCACbD,eAAgB,sBAElBg0B,sBAAuB,CACrBj0B,GAAI,wCACJE,YAAa,uCACbD,eAAgB,0IAElBi0B,qBAAsB,CACpBl0B,GAAI,uCACJE,YAAa,+BACbD,eAAgB,ojCCxBb,IAAMvZ,GAAQ5C,EAAW,CAC9BqwC,eAAgB,SAAC3uC,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,EAC5C4uC,iBAAkB,SAAC5uC,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,ICOzC,IAAM6uC,GAAqB,WAChC,IAAAC,EDLuC,WACvC,IAAQ7C,EAAa9zB,GAAW3H,2BAAxBy7B,SACyE8C,EAAAtsB,GAArC7f,GAAa+rC,eAAe1C,GAAS,GAA1E0C,EAAcI,EAAA,GAAEC,EAAiBD,EAAA,GAC4CE,EAAAxsB,GAApC7f,GAAagsC,kBAAiB,GAAM,GAA7EA,EAAgBK,EAAA,GAAEC,EAAmBD,EAAA,GACtCE,EAAkB,WAAH,OAASH,GAAkB,EAAM,EAChDI,EAAoB,WAAH,OAASF,GAAoB,EAAM,EAEpDG,EAAmBl1B,GAASb,sBAYlC,MAAO,CACL2yB,SAAAA,EACA0C,eAAAA,EACAQ,gBAAAA,EACAP,iBAAAA,EACAQ,kBAAAA,EACAE,4BAhBkC,WAClCD,IAJ6BH,GAAoB,GAMjDC,GACF,EAaEI,4BAXkC,WAClCH,IACAD,GACF,EAUF,CCfMK,GAPFvD,EAAQ6C,EAAR7C,SACA2C,EAAgBE,EAAhBF,iBACAD,EAAcG,EAAdH,eACAQ,EAAeL,EAAfK,gBACAC,EAAiBN,EAAjBM,kBACAE,EAA2BR,EAA3BQ,4BACAC,EAA2BT,EAA3BS,4BAEMzxB,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cAER,OAAKmuB,GAGH1tB,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAACwxB,GAAAA,GAAU,CAACvrB,KAAMyqB,EAAgBe,aAAW,EAACC,UAAWR,EAAgB7wB,SACtER,EAAca,GAAS2vB,+BAAgC,CACtDD,kBACEpwB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACLL,UAAU,2BACVM,QAAQ,OACR8B,KAAK,SACL7B,QAASuwB,EAA4BhxB,SAEpCR,EAAca,GAAS0vB,yBAKhC9vB,EAAAA,GAAAA,MAACqxB,GAAAA,EAAc,CACbrlC,MAAM,GACN4T,OAAQywB,EACRxwB,QAASgxB,EACT/wB,gBAAgB,EAChBwxB,UACE5xB,EAAAA,GAAAA,KAACC,GAAAA,EAAY4xB,KAAI,CAACtxB,UAAU,cAAaF,UACvCL,EAAAA,GAAAA,KAAC6Y,GAAAA,EAAK,CACJtY,UAAU,SACV6F,IAAK0rB,GACLrjB,IAAK5O,EAAca,GAAS+vB,0BAIlCsB,YACE/xB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAACL,UAAU,eAAeM,QAAQ,SAASC,QAASwwB,EAA4BjxB,SACpFR,EAAca,GAAS4vB,8BAE1BjwB,SAAA,EAEFL,EAAAA,GAAAA,KAAA,MAAIO,UAAU,kBAAiBF,SAAER,EAAca,GAAS6vB,4BACxDvwB,EAAAA,GAAAA,KAAA,KAAGO,UAAU,cAAaF,SAAER,EAAca,GAAS8vB,+BAvCjC,IA2C1B,EACAI,GAAmB5vB,UAAY,CAAC,EAEhC,uIClEO,IAAM/d,GAAQ5C,EAAW,CAC9B6f,OAAQ,SAACne,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAGzBglB,GAAiB,WAC5B,IAAQxB,GAAUD,EAAAA,GAAAA,KAAVC,MAER,OADoB9J,EAAAA,SAAc,kBAAO8J,GAASC,GAAAA,EAAY+V,MAAM7V,QAAQ,GAAG,CAACH,GAElF,EAUaysB,GAAgC,WAC3C,QAAsDC,KAA1BttC,GAAaub,QAAO,KAAM,s5BAA/CA,EAAM+xB,EAAA,GAAEC,EAASD,EAAA,GAGxB,MAAO,CACL/xB,OAAAA,EACAiyB,aAJmB,WAAH,OAASD,GAAWhyB,EAAO,EAM/C,EC1BakyB,GAAe,SAAHlvC,GAAsB,IAAhBsjB,EAAStjB,EAATsjB,UAC7B6Z,EAII7B,KAHF7B,EAAmB0D,EAAnB1D,oBACAC,EAA+ByD,EAA/BzD,gCAIF,OAHmByD,EAAjBtD,mBAGwBH,GAEtB5c,EAAAA,GAAAA,KAAC6f,GAA6B,CAACrZ,UAAWA,EAAWmW,oBAAqBA,IAIvE,IACT,EAEAyV,GAAapxB,UAAY,CACvBwF,UAAW9C,KAAAA,MAAgB,CAAC+a,GAAkBC,KAAkB/a,YAGlE,YC8DA,IAxFiBtH,EAAAA,GAAAA,IAAe,CAC9BtF,UAAW,CACTwF,GAAI,+CACJC,eAAgB,YAChBC,YAAa,yDAEf41B,kBAAmB,CACjB91B,GAAI,uDACJC,eAAgB,WAChBC,YAAa,2CAEf61B,gBAAiB,CACf/1B,GAAI,qDACJC,eAAgB,mBAChBC,YAAa,4CAEf81B,KAAM,CACJh2B,GAAI,qCACJC,eAAgB,OAChBC,YAAa,4CAEf+1B,QAAS,CACPj2B,GAAI,6CACJC,eAAgB,UAChBC,YAAa,uDAEfg2B,aAAc,CACZl2B,GAAI,kDACJC,eAAgB,gBAChBC,YAAa,6DAEfi2B,QAAS,CACPn2B,GAAI,6CACJC,eAAgB,UAChBC,YAAa,uDAEfk2B,aAAc,CACZp2B,GAAI,kDACJC,eAAgB,gBAChBC,YAAa,6DAEfm2B,QAAS,CACPr2B,GAAI,6CACJC,eAAgB,WAChBC,YAAa,gDAEf1X,OAAQ,CACNwX,GAAI,iCACJC,eAAgB,UAChBC,YAAa,gDAEfzQ,QAAS,CACPuQ,GAAI,kCACJC,eAAgB,WAChBC,YAAa,8CAEfo2B,YAAa,CACXt2B,GAAI,sCACJC,eAAgB,eAChBC,YAAa,+CAEfq2B,YAAa,CACXv2B,GAAI,sCACJC,eAAgB,sBAChBC,YAAa,8BAEfs2B,wBAAyB,CACvBx2B,GAAI,kDACJC,eAAgB,OAChBC,YAAa,8DAEfu2B,0BAA2B,CACzBz2B,GAAI,oDACJC,eAAgB,QAChBC,YAAa,gEAEfw2B,OAAQ,CACN12B,GAAI,oCACJC,eAAgB,SAChBC,YAAa,sDAEfy2B,SAAU,CACR32B,GAAI,wBACJC,eAAgB,MAChBC,YAAa,8DCtEV,IAAM02B,GAAmB,SAAHjwC,GAAmB,IHMF4W,EGNXoG,EAAMhd,EAANgd,OACzBL,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAlE,EAAsBF,EAAAA,WAAiBC,GAAAA,GAAvCC,kBAEF5E,EAAYmD,GAAW1H,6BACrBomB,EAAoB1e,GAAWzH,0BAA/BmmB,gBAEFwa,GHDsCt5B,EGCcJ,GAAK3S,WAAW6xB,GHDrBzZ,GAAMH,YAAY1G,mBAAmBwB,EAAM,CAChGwD,SAAU5E,GAAUE,iCGEpB,OACEsH,IACEI,EAAAA,GAAAA,MAAA,OAAKC,UAAU,8CAA6CF,SAAA,EAC1DL,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAAC2J,GAAG,IAAIzQ,KAAK,IAAI+G,QAAQ,kBAAiBR,SAC9CR,EAAca,GAAS3b,WAE1Bib,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAAC2J,GAAG,IAAIzQ,KAAMJ,GAAK1S,YAAa6Z,QAAQ,kBAAiBR,SAC7DR,EAAca,GAAS1U,YAE1BgU,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,KAAMJ,GAAK3S,WAAW6xB,GACtB/X,QAAQ,kBACRC,QAASsyB,EAAoB/yB,SAE5BR,EAAca,GAASmyB,gBAE1B7yB,EAAAA,GAAAA,KAACoyB,GAAY,CAAC5rB,UAAWiY,MACzBze,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAAC2J,GAAG,IAAIzQ,MAAMxT,EAAAA,EAAAA,MAAYqL,YAAakP,QAAQ,kBAAiBR,SACpER,EAAca,GAAS6xB,QAEzB52B,IACC2E,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,GACKtJ,IACDiJ,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CAAC2J,GAAG,IAAIzQ,KAAM/C,EAAUlQ,IAAKga,QAAQ,kBAAiBR,SAC1DR,EAAca,GAAS3J,cAG1BA,IAAazQ,EAAAA,EAAAA,MAAYuL,kBACzByO,EAAAA,GAAAA,MAACM,GAAAA,GAAM,CAAC9G,KAAI,GAAAva,QAAK+G,EAAAA,EAAAA,MAAYuL,iBAAkBwO,SAAA,CAC5CR,EAAca,GAASuyB,SACxBjzB,EAAAA,GAAAA,KAAC0O,GAAAA,EAAK,CAACnO,UAAU,YAAYM,QAAQ,UAASR,SAC3CR,EAAca,GAASwyB,gBAI9BlzB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,KAAI,GAAAva,QAAK+G,EAAAA,EAAAA,MAAYC,aAAY,OAAAhH,OAC/Boc,EAAkBH,UAEpBqF,QAAQ,kBAAiBR,SAExBR,EAAca,GAAS8xB,YAE1BxyB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,KAAI,GAAAva,QAAK+G,EAAAA,EAAAA,MAAYC,aAAY,qBACjCsa,QAAQ,kBAAiBR,SAExBR,EAAca,GAASgyB,YAEzBpsC,EAAAA,EAAAA,MAAY+sC,oBACXrzB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACH1J,QAAQ,kBACR/G,MAAMxT,EAAAA,EAAAA,MAAY+sC,kBAAkBhzB,SAEnCR,EAAca,GAASiyB,iBAG5B3yB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,MAAMxT,EAAAA,EAAAA,MAAYgtC,WAClBzyB,QAAQ,kBAAiBR,SAExBR,EAAca,GAASkyB,gBAOtC,EAEAO,GAAiBnyB,UAAY,CAC3Bd,OAAQwD,KAAAA,KAAeC,YAGzB,YC/FO,IAAM4vB,GAAY,WACvB,IAAQ1zB,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACF9I,EAAYmD,GAAW1H,6BAE7B,OACEwN,EAAAA,GAAAA,KAAA,KAAGlG,MAAM/C,aAAS,EAATA,EAAWlQ,MAAO,IAAK0Z,UAAU,UAASF,UACjDL,EAAAA,GAAAA,KAAA,OACEO,UAAU,YACV6F,KAAK9f,EAAAA,EAAAA,MAAYwL,SACjB2c,IAAK5O,EAAca,GAASoyB,gBAIpC,EAEAS,GAAUvyB,UAAY,CAAC,EAEvB,YCbO,IAAMwyB,GAAkB,WAC7B,IAAQ3zB,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFsY,EAAcpR,KACpB0sB,EAAiCzB,KAAzB9xB,EAAMuzB,EAANvzB,OAAQiyB,EAAYsB,EAAZtB,aAEhB,OACEha,IACE7X,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEC,EAAAA,GAAAA,MAAA,UAAQC,UAAU,6DAA4DF,SAAA,EAC5EL,EAAAA,GAAAA,KAAC8V,GAAAA,EAAU,CACT4d,cAAY,EACZvqB,UAAQ,EACR/C,IAAKlG,EAASmG,GAAAA,EAAQstB,GAAAA,EACtB3d,OAAQ7P,GAAAA,EACRsI,IAEM5O,EADJK,EACkBQ,GAASqyB,wBACTryB,GAASsyB,2BAE7BlyB,QAASqxB,EACTtxB,QAAQ,UACRN,UAAU,SAEZP,EAAAA,GAAAA,KAACuzB,GAAS,QAEZvzB,EAAAA,GAAAA,KAACmzB,GAAgB,CAACjzB,OAAQA,MAIlC,EAEAszB,GAAgBxyB,UAAY,CAAC,EAE7B,4BCnCa4yB,GAA4B,WACvC,IAAQ/zB,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACAlE,EAAsBF,EAAAA,WAAiBC,GAAAA,GAAvCC,kBACF5E,EAAYmD,GAAW1H,6BAE7B,OACEmJ,IACE2E,EAAAA,GAAAA,MAAC+T,GAAAA,GAAQ,CAAC9T,UAAU,oBAAmBF,SAAA,EACrCL,EAAAA,GAAAA,KAACqU,GAAAA,GAASwB,OAAM,CACdtL,GAAIspB,GAAAA,EACJztB,IAAKzK,EAAkBm4B,aACvBv3B,GAAG,OACHsE,QAAQ,QACRN,UAAU,MAAKF,UAEfL,EAAAA,GAAAA,KAAA,QAAM,sBAAiBO,UAAU,cAAaF,SAC3C1E,EAAkBH,cAGvB8E,EAAAA,GAAAA,MAAC+T,GAAAA,GAAS4B,KAAI,CAAC1V,UAAU,sBAAqBF,SAAA,EAC1C/Z,EAAAA,EAAAA,MAAYyL,gCACZuO,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAACqU,GAAAA,GAASiE,OAAM,CAAAjY,SAAER,EAAca,GAAS4xB,oBACzCtyB,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CAAC/J,GAAG,IAAIzQ,KAAK,iBAAiByG,UAAU,SAAQF,SAC3DR,EAAca,GAAS2xB,uBAEvBt7B,IACDuJ,EAAAA,GAAAA,MAAC+T,GAAAA,GAASC,KAAI,CAAC/J,GAAG,IAAIzQ,KAAM/C,EAAUlQ,IAAIwZ,SAAA,CACvCtJ,EAAU6G,MAAM,IAAEiC,EAAca,GAAS3J,aADIA,EAAU6G,QAI5DoC,EAAAA,GAAAA,KAACqU,GAAAA,GAAS0f,QAAO,QAInBh9B,IAAazQ,EAAAA,EAAAA,MAAYuL,kBACzByO,EAAAA,GAAAA,MAAC+T,GAAAA,GAASC,KAAI,CAACxa,KAAI,GAAAva,QAAK+G,EAAAA,EAAAA,MAAYuL,iBAAkBwO,SAAA,CACnDR,EAAca,GAASuyB,SACxBjzB,EAAAA,GAAAA,KAAC0O,GAAAA,EAAK,CAACnO,UAAU,YAAYM,QAAQ,UAASR,SAC3CR,EAAca,GAASwyB,gBAI9BlzB,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CAACxa,KAAI,GAAAva,QAAK+G,EAAAA,EAAAA,MAAY0tC,oBAAmB,OAAAz0C,OAAMoc,EAAkBH,UAAW6E,SACvFR,EAAca,GAAS8xB,YAE1BxyB,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CAACxa,MAAMxT,EAAAA,EAAAA,MAAY2tC,qBAAqB5zB,SACnDR,EAAca,GAASgyB,YAEzBpsC,EAAAA,EAAAA,MAAY+sC,oBACXrzB,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CAACxa,MAAMxT,EAAAA,EAAAA,MAAY+sC,kBAAkBhzB,SAChDR,EAAca,GAASiyB,iBAG5B3yB,EAAAA,GAAAA,KAACqU,GAAAA,GAAS0f,QAAO,KACjB/zB,EAAAA,GAAAA,KAACqU,GAAAA,GAASC,KAAI,CAACxa,MAAMxT,EAAAA,EAAAA,MAAYgtC,WAAWjzB,SACzCR,EAAca,GAASkyB,gBAMpC,EAEAgB,GAA0B5yB,UAAY,CAAC,EAEvC,YC7DO,IAAMkzB,GAAiB,WAC5B,IPCoCp6B,EOD5B+F,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACA+Y,EAAoB1e,GAAWzH,0BAA/BmmB,gBACFT,EAAcpR,KAEdqsB,GPH8Bt5B,EOGcJ,GAAK3S,WAAW6xB,GPHrBzZ,GAAMH,YAAY1G,mBAAmBwB,EAAM,CACxFwD,SAAU5E,GAAUC,yBOIpB,OACGwf,IACD7X,EAAAA,GAAAA,MAAA,UAAQC,UAAU,kEAAiEF,SAAA,EACjFC,EAAAA,GAAAA,MAAA,OAAKC,UAAU,wCAAuCF,SAAA,EACpDL,EAAAA,GAAAA,KAACuzB,GAAS,KAEVvzB,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,KAAK,IACL+G,QAAQ,kBACRN,UAAU,kBAAiBF,SAE1BR,EAAca,GAAS3b,WAE1Bib,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,KAAMJ,GAAK1S,YACX6Z,QAAQ,kBACRN,UAAU,MAAKF,SAEdR,EAAca,GAAS1U,YAE1BgU,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,KAAMJ,GAAK3S,WAAW6xB,GACtB/X,QAAQ,kBACRN,UAAU,MACVO,QAASsyB,EAAoB/yB,SAE5BR,EAAca,GAASmyB,gBAE1B7yB,EAAAA,GAAAA,KAACoyB,GAAY,CAAC5rB,UAAWkY,MACzB1e,EAAAA,GAAAA,KAAA,QAAMO,UAAU,iBAChBP,EAAAA,GAAAA,KAACY,GAAAA,GAAM,CACL2J,GAAG,IACHzQ,MAAMxT,EAAAA,EAAAA,MAAYqL,YAClBkP,QAAQ,kBACRN,UAAU,MAAKF,SAEdR,EAAca,GAAS6xB,YAI5BvyB,EAAAA,GAAAA,KAAC4zB,GAAyB,MAIhC,EAEAM,GAAelzB,UAAY,CAAC,EAE5B,YChEO,IAAMmzB,GAAyB,WAAH,OACjC7zB,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEL,EAAAA,GAAAA,KAAC4wB,GAAkB,KACnB5wB,EAAAA,GAAAA,KAACwzB,GAAe,KAChBxzB,EAAAA,GAAAA,KAACk0B,GAAc,KACfl0B,EAAAA,GAAAA,KAACo0B,GAAa,MACb,EAGLD,GAAuBnzB,UAAY,CAAC,EAEpC,g8DCiGA,SArFmB,WACjB,IAAQrF,EAAsBF,EAAAA,WAAiBC,GAAAA,GAAvCC,kBACAkE,GAAkB7D,EAAAA,GAAAA,KAAlB6D,cACFnQ,EAAW,CACf/O,WAAYuZ,GAAW3E,mBAAmB7U,EAAYC,YACtDC,YAAasZ,GAAW3E,mBAAmB7U,EAAYE,cAEnDyzC,EAAoB3kC,EAAS/O,YAAc+O,EAAS9O,YAClD2oB,EAAiBrP,GAAWzH,0BAA5B8W,aACFhP,EAAWL,GAAWlF,cA8C5B,OA/BAyG,EAAAA,WAAgB,WAmBd,IAlBIE,SAAAA,EAAmB2zB,eAA0C,iBAAzBhpC,EAAAA,EAAAA,MAAYguC,YAClD9nC,OAAO+nC,cAAgB,WACrBh6B,EAAQlX,GAAAA,GAAC,CAAC,EAAImxC,GAAAA,YAAmB,IAAErxC,QAAS,KAC9C,EACAqJ,OAAOioC,aAAe,WACpBl6B,EAAQlX,GAAAA,GAAC,CAAC,EACLmxC,GAAAA,YAAmB,IACtBrxC,QAAS,GAAF5D,OAAAm1C,GACFF,GAAAA,eAAsBE,GACtBF,GAAAA,oBAGT,EACAhoC,OAAOmoC,MAAQA,GACfnoC,OAAOoE,UAAYA,GACnBpE,OAAOnI,QAAUA,GACjBmI,OAAO2S,MAAQA,KAEb7Y,EAAAA,EAAAA,MAAYsuC,cACd,KACEC,EAAAA,GAAAA,IAAiB,CACfC,UAAUxuC,EAAAA,EAAAA,MAAYsuC,cACtBG,eAAezuC,EAAAA,EAAAA,MAAY0uC,eAC3BC,eAAe3uC,EAAAA,EAAAA,MAAY4uC,cAE/B,CAAE,MAAO91C,IACP+1C,EAAAA,GAAAA,GAAS/1C,EACX,CAEJ,GAAG,CAACuc,EAAmBpB,KAErB+F,EAAAA,GAAAA,MAAA4D,GAAAA,SAAA,CAAA7D,SAAA,EACEC,EAAAA,GAAAA,MAAC80B,GAAAA,EAAM,CAAA/0B,SAAA,EACLL,EAAAA,GAAAA,KAAA,SAAAK,SAAQR,EAAca,GAASsa,cAC/Bhb,EAAAA,GAAAA,KAAA,QAAM0K,IAAI,gBAAgB5Q,MAAMxT,EAAAA,EAAAA,MAAY+uC,YAAat0B,KAAK,kBA/C9Dza,EAAAA,EAAAA,MAAYgvC,gBACPt1B,EAAAA,GAAAA,KAAA,UAAQoG,KAAK9f,EAAAA,EAAAA,MAAYgvC,kBAC5BhvC,EAAAA,EAAAA,MAAYivC,uBAEdv1B,EAAAA,GAAAA,KAAA,UACEoG,IAAG,GAAA7mB,QAAK+G,EAAAA,EAAAA,MAAY4gC,wBAAuB,kBAAA3nC,QAAiB+G,EAAAA,EAAAA,MAAYivC,sBAAqB,SAI5F,SAyCLj1B,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,GAAAA,MAAC4tB,GAAU,CAAA7tB,SAAA,EACTL,EAAAA,GAAAA,KAACm0B,GAAsB,KACvBn0B,EAAAA,GAAAA,KAAA,QAAAK,SACGg0B,GAEGr0B,EAAAA,GAAAA,KAACmH,GAAAA,EAAK,CAACtG,QAAQ,SAAQR,UACrBL,EAAAA,GAAAA,KAACw1B,EAAAA,EAAS,CAAC/qB,QAAS5K,EAAca,GAASqa,aAAc,CAAExR,aAAAA,SAG7DvJ,EAAAA,GAAAA,KAAC4hB,GAAkB,CAAAvhB,UACjBL,EAAAA,GAAAA,KAACy1B,GAAS,YAKpBz1B,EAAAA,GAAAA,KAACwY,GAAAA,GAAM,CAACkd,MAAMpvC,EAAAA,EAAAA,MAAYqvC,oCAC1B31B,EAAAA,GAAAA,KAAC41B,GAAU,SAInB,yPCnHAC,GAAA,kBAAAx2C,CAAA,MAAAy2C,EAAAz2C,EAAA,GAAA02C,EAAAnwC,OAAAowC,UAAAC,EAAAF,EAAAG,eAAAC,EAAAvwC,OAAAwwC,gBAAA,SAAAN,EAAAz2C,EAAA02C,GAAAD,EAAAz2C,GAAA02C,EAAAtlC,KAAA,EAAA4lC,EAAA,mBAAAv3C,OAAAA,OAAA,GAAAuP,EAAAgoC,EAAAC,UAAA,aAAAC,EAAAF,EAAAG,eAAA,kBAAAC,EAAAJ,EAAAt3C,aAAA,yBAAA23C,EAAAZ,EAAAz2C,EAAA02C,GAAA,OAAAnwC,OAAAwwC,eAAAN,EAAAz2C,EAAA,CAAAoR,MAAAslC,EAAAY,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAz2C,EAAA,KAAAq3C,EAAA,aAAAZ,GAAAY,EAAA,SAAAZ,EAAAz2C,EAAA02C,GAAA,OAAAD,EAAAz2C,GAAA02C,CAAA,WAAAe,EAAAhB,EAAAz2C,EAAA02C,EAAAE,GAAA,IAAAI,EAAAh3C,GAAAA,EAAA22C,qBAAAe,EAAA13C,EAAA03C,EAAA1oC,EAAAzI,OAAAoxC,OAAAX,EAAAL,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9nC,EAAA,WAAAoC,MAAAymC,EAAApB,EAAAC,EAAAQ,KAAAloC,CAAA,UAAA8oC,EAAArB,EAAAz2C,EAAA02C,GAAA,WAAAh1B,KAAA,SAAAq2B,IAAAtB,EAAAuB,KAAAh4C,EAAA02C,GAAA,OAAAD,GAAA,OAAA/0B,KAAA,QAAAq2B,IAAAtB,EAAA,EAAAz2C,EAAAy3C,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAnB,EAAAmB,EAAAxpC,GAAA,8BAAAypC,EAAAlyC,OAAAmyC,eAAAC,EAAAF,GAAAA,EAAAA,EAAArpC,EAAA,MAAAupC,GAAAA,IAAAjC,GAAAE,EAAAoB,KAAAW,EAAA3pC,KAAAwpC,EAAAG,GAAA,IAAAC,EAAAL,EAAA5B,UAAAe,EAAAf,UAAApwC,OAAAoxC,OAAAa,GAAA,SAAAK,EAAApC,GAAA,0BAAAqC,SAAA,SAAA94C,GAAAq3C,EAAAZ,EAAAz2C,GAAA,SAAAy2C,GAAA,YAAAsC,QAAA/4C,EAAAy2C,EAAA,gBAAAuC,EAAAvC,EAAAz2C,GAAA,SAAAi5C,EAAAvC,EAAAI,EAAAE,EAAAhoC,GAAA,IAAAkoC,EAAAY,EAAArB,EAAAC,GAAAD,EAAAK,GAAA,aAAAI,EAAAx1B,KAAA,KAAA01B,EAAAF,EAAAa,IAAAE,EAAAb,EAAAhmC,MAAA,OAAA6mC,GAAA,UAAAt4C,GAAAs4C,IAAArB,EAAAoB,KAAAC,EAAA,WAAAj4C,EAAAk5C,QAAAjB,EAAAkB,SAAAtiC,MAAA,SAAA4/B,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAhoC,EAAA,aAAAynC,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAhoC,EAAA,IAAAhP,EAAAk5C,QAAAjB,GAAAphC,MAAA,SAAA4/B,GAAAW,EAAAhmC,MAAAqlC,EAAAO,EAAAI,EAAA,aAAAX,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAhoC,EAAA,IAAAA,EAAAkoC,EAAAa,IAAA,KAAArB,EAAAI,EAAA,gBAAA1lC,MAAA,SAAAqlC,EAAAG,GAAA,SAAAwC,IAAA,WAAAp5C,GAAA,SAAAA,EAAA02C,GAAAuC,EAAAxC,EAAAG,EAAA52C,EAAA02C,EAAA,WAAAA,EAAAA,EAAAA,EAAA7/B,KAAAuiC,EAAAA,GAAAA,GAAA,aAAAvB,EAAA73C,EAAA02C,EAAAE,GAAA,IAAAE,EAAAmB,EAAA,gBAAAjB,EAAAhoC,GAAA,GAAA8nC,IAAAqB,EAAA,UAAAl4C,MAAA,mCAAA62C,IAAAsB,EAAA,cAAApB,EAAA,MAAAhoC,EAAA,OAAAoC,MAAAqlC,EAAA7oC,MAAA,OAAAgpC,EAAA7rB,OAAAisB,EAAAJ,EAAAmB,IAAA/oC,IAAA,KAAAkoC,EAAAN,EAAAyC,SAAA,GAAAnC,EAAA,KAAAE,EAAAkC,EAAApC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA7rB,OAAA6rB,EAAA2C,KAAA3C,EAAA4C,MAAA5C,EAAAmB,SAAA,aAAAnB,EAAA7rB,OAAA,IAAA+rB,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAA6C,kBAAA7C,EAAAmB,IAAA,gBAAAnB,EAAA7rB,QAAA6rB,EAAA8C,OAAA,SAAA9C,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAA93C,EAAA02C,EAAAE,GAAA,cAAA4B,EAAA92B,KAAA,IAAAo1B,EAAAF,EAAAhpC,KAAAwqC,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAjnC,MAAAonC,EAAAT,IAAAnqC,KAAAgpC,EAAAhpC,KAAA,WAAA4qC,EAAA92B,OAAAo1B,EAAAsB,EAAAxB,EAAA7rB,OAAA,QAAA6rB,EAAAmB,IAAAS,EAAAT,IAAA,YAAAuB,EAAAt5C,EAAA02C,GAAA,IAAAE,EAAAF,EAAA3rB,OAAA+rB,EAAA92C,EAAAi3C,SAAAL,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA2C,SAAA,eAAAzC,GAAA52C,EAAAi3C,SAAA,SAAAP,EAAA3rB,OAAA,SAAA2rB,EAAAqB,IAAAtB,EAAA6C,EAAAt5C,EAAA02C,GAAA,UAAAA,EAAA3rB,SAAA,WAAA6rB,IAAAF,EAAA3rB,OAAA,QAAA2rB,EAAAqB,IAAA,IAAA4B,UAAA,oCAAA/C,EAAA,aAAAyB,EAAA,IAAArB,EAAAc,EAAAhB,EAAA92C,EAAAi3C,SAAAP,EAAAqB,KAAA,aAAAf,EAAAt1B,KAAA,OAAAg1B,EAAA3rB,OAAA,QAAA2rB,EAAAqB,IAAAf,EAAAe,IAAArB,EAAA2C,SAAA,KAAAhB,EAAA,IAAArpC,EAAAgoC,EAAAe,IAAA,OAAA/oC,EAAAA,EAAApB,MAAA8oC,EAAA12C,EAAA45C,YAAA5qC,EAAAoC,MAAAslC,EAAAmD,KAAA75C,EAAA85C,QAAA,WAAApD,EAAA3rB,SAAA2rB,EAAA3rB,OAAA,OAAA2rB,EAAAqB,IAAAtB,GAAAC,EAAA2C,SAAA,KAAAhB,GAAArpC,GAAA0nC,EAAA3rB,OAAA,QAAA2rB,EAAAqB,IAAA,IAAA4B,UAAA,oCAAAjD,EAAA2C,SAAA,KAAAhB,EAAA,UAAA0B,EAAAtD,GAAA,IAAAz2C,EAAA,CAAAg6C,OAAAvD,EAAA,SAAAA,IAAAz2C,EAAAi6C,SAAAxD,EAAA,SAAAA,IAAAz2C,EAAAk6C,WAAAzD,EAAA,GAAAz2C,EAAAm6C,SAAA1D,EAAA,SAAA2D,WAAA3b,KAAAz+B,EAAA,UAAAq6C,EAAA5D,GAAA,IAAAz2C,EAAAy2C,EAAA6D,YAAA,GAAAt6C,EAAA0hB,KAAA,gBAAA1hB,EAAA+3C,IAAAtB,EAAA6D,WAAAt6C,CAAA,UAAA43C,EAAAnB,GAAA,KAAA2D,WAAA,EAAAJ,OAAA,SAAAvD,EAAAqC,QAAAiB,EAAA,WAAAQ,OAAA,YAAAnrC,EAAApP,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA02C,EAAA12C,EAAAgP,GAAA,GAAA0nC,EAAA,OAAAA,EAAAsB,KAAAh4C,GAAA,sBAAAA,EAAA65C,KAAA,OAAA75C,EAAA,IAAAw6C,MAAAx6C,EAAAyG,QAAA,KAAAqwC,GAAA,EAAAE,EAAA,SAAA6C,IAAA,OAAA/C,EAAA92C,EAAAyG,QAAA,GAAAmwC,EAAAoB,KAAAh4C,EAAA82C,GAAA,OAAA+C,EAAAzoC,MAAApR,EAAA82C,GAAA+C,EAAAjsC,MAAA,EAAAisC,EAAA,OAAAA,EAAAzoC,MAAAqlC,EAAAoD,EAAAjsC,MAAA,EAAAisC,CAAA,SAAA7C,EAAA6C,KAAA7C,CAAA,YAAA2C,UAAAh6C,GAAAK,GAAA,2BAAAs4C,EAAA3B,UAAA4B,EAAAzB,EAAA8B,EAAA,eAAAxnC,MAAAmnC,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAnnC,MAAAknC,EAAAf,cAAA,IAAAe,EAAA15B,YAAAy4B,EAAAkB,EAAAnB,EAAA,qBAAAp3C,EAAAy6C,oBAAA,SAAAhE,GAAA,IAAAz2C,EAAA,mBAAAy2C,GAAAA,EAAAiE,YAAA,QAAA16C,IAAAA,IAAAs4C,GAAA,uBAAAt4C,EAAA4e,aAAA5e,EAAAR,MAAA,EAAAQ,EAAA26C,KAAA,SAAAlE,GAAA,OAAAlwC,OAAAq0C,eAAAr0C,OAAAq0C,eAAAnE,EAAA8B,IAAA9B,EAAAoE,UAAAtC,EAAAlB,EAAAZ,EAAAW,EAAA,sBAAAX,EAAAE,UAAApwC,OAAAoxC,OAAAiB,GAAAnC,CAAA,EAAAz2C,EAAA86C,MAAA,SAAArE,GAAA,OAAA0C,QAAA1C,EAAA,EAAAoC,EAAAG,EAAArC,WAAAU,EAAA2B,EAAArC,UAAAO,GAAA,0BAAAl3C,EAAAg5C,cAAAA,EAAAh5C,EAAA+6C,MAAA,SAAAtE,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,IAAAA,EAAAgE,SAAA,IAAAhsC,EAAA,IAAAgqC,EAAAvB,EAAAhB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAh3C,EAAAy6C,oBAAA/D,GAAA1nC,EAAAA,EAAA6qC,OAAAhjC,MAAA,SAAA4/B,GAAA,OAAAA,EAAA7oC,KAAA6oC,EAAArlC,MAAApC,EAAA6qC,MAAA,KAAAhB,EAAAD,GAAAvB,EAAAuB,EAAAxB,EAAA,aAAAC,EAAAuB,EAAA5pC,GAAA,0BAAAqoC,EAAAuB,EAAA,qDAAA54C,EAAAwG,KAAA,SAAAiwC,GAAA,IAAAz2C,EAAAuG,OAAAkwC,GAAAC,EAAA,WAAAE,KAAA52C,EAAA02C,EAAAjY,KAAAmY,GAAA,OAAAF,EAAAnoC,UAAA,SAAAsrC,IAAA,KAAAnD,EAAAjwC,QAAA,KAAAgwC,EAAAC,EAAAuE,MAAA,GAAAxE,KAAAz2C,EAAA,OAAA65C,EAAAzoC,MAAAqlC,EAAAoD,EAAAjsC,MAAA,EAAAisC,CAAA,QAAAA,EAAAjsC,MAAA,EAAAisC,CAAA,GAAA75C,EAAAoP,OAAAA,EAAAwoC,EAAAjB,UAAA,CAAA+D,YAAA9C,EAAA2C,MAAA,SAAAv6C,GAAA,QAAAo+B,KAAA,OAAAyb,KAAA,OAAAN,KAAA,KAAAC,MAAA/C,EAAA,KAAA7oC,MAAA,OAAAyrC,SAAA,UAAAtuB,OAAA,YAAAgtB,IAAAtB,EAAA,KAAA2D,WAAAtB,QAAAuB,IAAAr6C,EAAA,QAAA02C,KAAA,WAAAA,EAAAwE,OAAA,IAAAtE,EAAAoB,KAAA,KAAAtB,KAAA8D,OAAA9D,EAAAppC,MAAA,WAAAopC,GAAAD,EAAA,EAAA0E,KAAA,gBAAAvtC,MAAA,MAAA6oC,EAAA,KAAA2D,WAAA,GAAAE,WAAA,aAAA7D,EAAA/0B,KAAA,MAAA+0B,EAAAsB,IAAA,YAAAqD,IAAA,EAAA3B,kBAAA,SAAAz5C,GAAA,QAAA4N,KAAA,MAAA5N,EAAA,IAAA02C,EAAA,cAAA2E,EAAAzE,EAAAE,GAAA,OAAA9nC,EAAA0S,KAAA,QAAA1S,EAAA+oC,IAAA/3C,EAAA02C,EAAAmD,KAAAjD,EAAAE,IAAAJ,EAAA3rB,OAAA,OAAA2rB,EAAAqB,IAAAtB,KAAAK,CAAA,SAAAA,EAAA,KAAAsD,WAAA3zC,OAAA,EAAAqwC,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAoD,WAAAtD,GAAA9nC,EAAAgoC,EAAAsD,WAAA,YAAAtD,EAAAgD,OAAA,OAAAqB,EAAA,UAAArE,EAAAgD,QAAA,KAAA5b,KAAA,KAAA8Y,EAAAN,EAAAoB,KAAAhB,EAAA,YAAAI,EAAAR,EAAAoB,KAAAhB,EAAA,iBAAAE,GAAAE,EAAA,SAAAhZ,KAAA4Y,EAAAiD,SAAA,OAAAoB,EAAArE,EAAAiD,UAAA,WAAA7b,KAAA4Y,EAAAkD,WAAA,OAAAmB,EAAArE,EAAAkD,WAAA,SAAAhD,GAAA,QAAA9Y,KAAA4Y,EAAAiD,SAAA,OAAAoB,EAAArE,EAAAiD,UAAA,YAAA7C,EAAA,UAAAn3C,MAAA,kDAAAm+B,KAAA4Y,EAAAkD,WAAA,OAAAmB,EAAArE,EAAAkD,WAAA,KAAAR,OAAA,SAAAjD,EAAAz2C,GAAA,QAAA02C,EAAA,KAAA0D,WAAA3zC,OAAA,EAAAiwC,GAAA,IAAAA,EAAA,KAAAI,EAAA,KAAAsD,WAAA1D,GAAA,GAAAI,EAAAkD,QAAA,KAAA5b,MAAAwY,EAAAoB,KAAAlB,EAAA,oBAAA1Y,KAAA0Y,EAAAoD,WAAA,KAAAlD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAgD,QAAAh6C,GAAAA,GAAAg3C,EAAAkD,aAAAlD,EAAA,UAAAhoC,EAAAgoC,EAAAA,EAAAsD,WAAA,UAAAtrC,EAAA0S,KAAA+0B,EAAAznC,EAAA+oC,IAAA/3C,EAAAg3C,GAAA,KAAAjsB,OAAA,YAAA8uB,KAAA7C,EAAAkD,WAAA7B,GAAA,KAAAiD,SAAAtsC,EAAA,EAAAssC,SAAA,SAAA7E,EAAAz2C,GAAA,aAAAy2C,EAAA/0B,KAAA,MAAA+0B,EAAAsB,IAAA,gBAAAtB,EAAA/0B,MAAA,aAAA+0B,EAAA/0B,KAAA,KAAAm4B,KAAApD,EAAAsB,IAAA,WAAAtB,EAAA/0B,MAAA,KAAA05B,KAAA,KAAArD,IAAAtB,EAAAsB,IAAA,KAAAhtB,OAAA,cAAA8uB,KAAA,kBAAApD,EAAA/0B,MAAA1hB,IAAA,KAAA65C,KAAA75C,GAAAq4C,CAAA,EAAAkD,OAAA,SAAA9E,GAAA,QAAAz2C,EAAA,KAAAo6C,WAAA3zC,OAAA,EAAAzG,GAAA,IAAAA,EAAA,KAAA02C,EAAA,KAAA0D,WAAAp6C,GAAA,GAAA02C,EAAAwD,aAAAzD,EAAA,YAAA6E,SAAA5E,EAAA4D,WAAA5D,EAAAyD,UAAAE,EAAA3D,GAAA2B,CAAA,kBAAA5B,GAAA,QAAAz2C,EAAA,KAAAo6C,WAAA3zC,OAAA,EAAAzG,GAAA,IAAAA,EAAA,KAAA02C,EAAA,KAAA0D,WAAAp6C,GAAA,GAAA02C,EAAAsD,SAAAvD,EAAA,KAAAG,EAAAF,EAAA4D,WAAA,aAAA1D,EAAAl1B,KAAA,KAAAo1B,EAAAF,EAAAmB,IAAAsC,EAAA3D,EAAA,QAAAI,CAAA,YAAA72C,MAAA,0BAAAu7C,cAAA,SAAAx7C,EAAA02C,EAAAE,GAAA,YAAAyC,SAAA,CAAApC,SAAA7nC,EAAApP,GAAA45C,WAAAlD,EAAAoD,QAAAlD,GAAA,cAAA7rB,SAAA,KAAAgtB,IAAAtB,GAAA4B,CAAA,GAAAr4C,CAAA,UAAAy7C,GAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAA7wB,EAAA+sB,GAAA,QAAA+D,EAAAJ,EAAA1wB,GAAA+sB,GAAA3mC,EAAA0qC,EAAA1qC,KAAA,OAAArR,GAAA,YAAA47C,EAAA57C,EAAA,CAAA+7C,EAAAluC,KAAAsrC,EAAA9nC,GAAA4pC,QAAA9B,QAAA9nC,GAAAyF,KAAA+kC,EAAAC,EAAA,CAGO,IAAME,GAAa,GAAH77C,QAAM+G,EAAAA,EAAAA,MAAYC,aAAY,6ICS9C,IAAMtD,GAAQ5C,EAAW,CAC9Bg7C,aAAc,SAACt5C,GAAG,OAAK0Z,EAAAA,SAAe1Z,EAAI,IAoB5C,SAjBqC,WACnC,QAAmEu5C,KAA3B32C,GAAa02C,iBAAc,s5BAA5DA,EAAYC,EAAA,GAAEC,EAAeD,EAAA,GAapC,OAZA7/B,EAAAA,WAAgB,WDZQ,IAAG+/B,EACrB7/B,EAEA+oB,GCUAp+B,EAAAA,EAAAA,MAAYsL,iBDbS4pC,ECcZ,CACTA,OAAQ,SAACt1C,GAAS,IAAAq6B,GACZr6B,SAAU,QAANq6B,EAAJr6B,EAAMA,YAAI,IAAAq6B,GAAS,QAATA,EAAVA,EAAYkb,eAAO,IAAAlb,OAAA,EAAnBA,EAAqBz6B,QAAS,IAChCy1C,GAAgB,GAChB/uC,OAAOC,SAASivC,QAAQ,GAADn8C,OAAI2G,EAAKA,KAAKu1C,QAAQ,GAAE,UAAAl8C,OAASiN,OAAOC,SAASqN,OAE5E,GDpBqB0hC,OACrB7/B,GAAoBkpB,EAAAA,GAAAA,MAEpBH,EAAW,eATnBn1B,EASmBxL,GATnBwL,EASmBsmC,KAAAmE,MAAG,SAAA2B,EAAOt8C,GAAC,OAAAw2C,KAAAiB,MAAA,SAAA8E,GAAA,cAAAA,EAAAne,KAAAme,EAAA1C,MAAA,OAGF,MAD0B75C,EAA1Cw8C,iBAAoBC,iBAE1BC,EAAAA,GAAAA,IAAQ,GAADx8C,OAAIF,EAAC,MAAAE,OATa,qFAWzB41C,EAAAA,GAAAA,GAAS91C,GACV,wBAAAu8C,EAAApB,OAAA,GAAAmB,EAAA,IAhBL,eAAAK,EAAA,KAAApnC,EAAAD,UAAA,WAAA0lC,SAAA,SAAA9B,EAAAyC,GAAA,IAAAD,EAAAxrC,EAAA8B,MAAA2qC,EAAApnC,GAAA,SAAAqmC,EAAAxqC,GAAAqqC,GAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAA,OAAAzqC,EAAA,UAAAyqC,EAAAe,GAAAnB,GAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAA,QAAAe,EAAA,CAAAhB,OAAAhhC,EAAA,MAiBG,gBARgBiiC,GAAA,OAAAn4C,EAAAsN,MAAA,KAAAsD,UAAA,KASbgH,IACKtF,EAAAA,GAAAA,MAA6B1W,IAAIy7C,GAAY,CAAC,GAAGllC,KAAKslC,GAAO,MAAO9W,GCU7E,GAAG,CAAC6W,IACG,CAAEF,aAAAA,EACX,ECrBA,IAAMc,GAAiB,SAAHj5C,GAAqB,IAAfmd,EAAQnd,EAARmd,SAChBg7B,EAAiBe,KAAjBf,aACR,OACEr7B,EAAAA,GAAAA,KAAA,OAAAK,UACoB,IAAjBg7B,EAAwB,KAAOh7B,GAGtC,EAEA87B,GAAen7B,UAAY,CACzBX,SAAUqD,KAAAA,KAAeC,YAG3B,aCOA04B,EAAAA,GAAAA,IAAUC,GAAAA,IAAW,WACnBC,EAAAA,QACEv8B,EAAAA,GAAAA,KAACw8B,EAAAA,EAAW,CAAC7H,MAAOA,GAAMt0B,UACxBL,EAAAA,GAAAA,KAACm8B,GAAc,CAAA97B,UACbC,EAAAA,GAAAA,MAACm8B,EAAAA,GAAM,CAAAp8B,SAAA,EACLL,EAAAA,GAAAA,KAAC08B,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAAS58B,EAAAA,GAAAA,KAAC68B,EAAAA,EAAQ,CAAAx8B,UAACL,EAAAA,GAAAA,KAAC88B,GAAG,SACvC98B,EAAAA,GAAAA,KAAC08B,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAAS58B,EAAAA,GAAAA,KAAC+8B,EAAAA,GAAQ,CAACnzB,GAAG,IAAI8xB,SAAO,aAIvDsB,SAASC,eAAe,QAE5B,KAEAZ,EAAAA,GAAAA,IAAUa,GAAAA,IAAgB,SAAC99C,GACzBm9C,EAAAA,QACEv8B,EAAAA,GAAAA,KAACw1B,EAAAA,EAAS,CAAC/qB,QAASrrB,EAAMqrB,UAC1BuyB,SAASC,eAAe,QAE5B,KAIAt8C,EAAAA,GAAAA,IAAW,CACTw8C,SAAU,CACRC,OAAQ,YACNC,EAAAA,EAAAA,IAAY/rC,GALK,uBAMnB,GAEFoP,SAAAA,GACA48B,0BAA0B,qBC7D5B,IAAIvxC,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,IACX,aAAc,IACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,KACX,aAAc,KACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,KACZ,cAAe,KACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,KACT,aAAc,MACd,gBAAiB,MACjB,WAAY,KACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASwxC,EAAeC,GACvB,IAAIjhC,EAAKkhC,EAAsBD,GAC/B,OAAOE,EAAoBnhC,EAC5B,CACA,SAASkhC,EAAsBD,GAC9B,IAAIE,EAAoBvH,EAAEpqC,EAAKyxC,GAAM,CACpC,IAAIn+C,EAAI,IAAIC,MAAM,uBAAyBk+C,EAAM,KAEjD,MADAn+C,EAAEs+C,KAAO,mBACHt+C,CACP,CACA,OAAO0M,EAAIyxC,EACZ,CACAD,EAAe13C,KAAO,WACrB,OAAOD,OAAOC,KAAKkG,EACpB,EACAwxC,EAAehF,QAAUkF,EACzB94C,EAAOi5C,QAAUL,EACjBA,EAAehhC,GAAK","sources":["webpack://@edx/frontend-app-learner-dashboard/./src/utils/StrictDict.js","webpack://@edx/frontend-app-learner-dashboard/./src/utils/dateFormatter.js","webpack://@edx/frontend-app-learner-dashboard/./src/utils/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/constants/requests.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/app/reducer.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/app/selectors/simpleSelectors.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/app/selectors/appSelectors.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/lms/urls.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/constants/course.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/app/selectors/courseCard.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/constants/app.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/app/selectors/currentList.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/app/selectors/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/requests/reducer.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/requests/selectors.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/lms/fakeData/testUtils.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/store.js","webpack://@edx/frontend-app-learner-dashboard/./src/config/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/i18n/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/hooks/app.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/redux/hooks/requests.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/lms/utils.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/constants.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/lms/constants.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/lms/api.js","webpack://@edx/frontend-app-learner-dashboard/./src/hooks/api.js","webpack://@edx/frontend-app-learner-dashboard/./src/hooks/utils.js","webpack://@edx/frontend-app-learner-dashboard/./src/hooks/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/EnterpriseDashboardModal/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/segment/utils.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/course.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/credit.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/engagement.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/filter.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/enterpriseDashboard.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/entitlements.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/socialShare.js","webpack://@edx/frontend-app-learner-dashboard/./src/tracking/trackers/findCourses.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/EnterpriseDashboardModal/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/EnterpriseDashboardModal/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/SelectSessionModal/constants.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/SelectSessionModal/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/SelectSessionModal/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/SelectSessionModal/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/components/Checkbox.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/components/FilterForm.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/components/SortForm.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/CourseFilterControls.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseFilterControls/ActiveCourseFilters.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/components/Banner.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CourseBanner.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CertificateBanner.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/components/CreditRequestForm/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/components/CreditRequestForm/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/components/CreditContent.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/components/ProviderLink.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/ApprovedContent.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/EligibleContent.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/MustRequestContent.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/PendingContent.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/views/RejectedContent.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/CreditBanner/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/EntitlementBanner.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/RelatedProgramsBanner/ProgramsList.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/RelatedProgramsBanner/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/RelatedProgramsBanner/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardBanners/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/assets/verified-ribbon.png","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardImage.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/EmailSettingsModal/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/EmailSettingsModal/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/EmailSettingsModal/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/components/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/components/ConfirmPane.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/constants.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/components/ReasonPane.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/components/FinishedPane.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/hooks/reasons.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/hooks/index.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/UnenrollConfirmModal/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardMenu/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardMenu/SocialShareMenu.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardMenu/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardMenu/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/ActionButton/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/ActionButton/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/UpgradeButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/SelectSessionButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/BeginCourseButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/ResumeButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/ViewCourseButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardActions/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardDetails/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardDetails/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardDetails/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/components/CourseCardTitle.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseCard/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/assets/empty-course.svg","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseList/NoCoursesView/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseList/NoCoursesView/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseList/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseList/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/CourseList/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/assets/more-courses-sidewidget.svg","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/track.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/LookingForChallengeWidget/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/LookingForChallengeWidget/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/Dashboard/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/LoadingView.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/components/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/components/CourseCard.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/track.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/PaintedDoorExperimentContext.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/constants.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/components/NavbarButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/components/PaintedDoorModal/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/components/PaintedDoorModal/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/components/RecommendationsPanelButton.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPaintedDoorBtn/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/LoadedView.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/testData.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/api.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/RecommendationsPanel/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/ExperimentContext.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/api.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/constants.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/optimizely.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/optimizelyExperiment.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/utils.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/track.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/WidgetContainers/LoadedSidebar/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/WidgetContainers/NoCoursesSidebar/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/Dashboard/LoadingView.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/components/LoadingView.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/components/ProductCard.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/components/ProductCardHeader.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/components/ProductCardContainer.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/components/LoadedView.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/widgets/ProductRecommendations/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/WidgetContainers/WidgetFooter/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/Dashboard/DashboardLayout.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/Dashboard/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/components/ZendeskFab/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/components/ZendeskFab/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/data/constants/credit.js","webpack://@edx/frontend-app-learner-dashboard/./src/data/services/lms/fakeData/courses.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/WidgetContainers/AppWrapper/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/MasqueradeBar/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/MasqueradeBar/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/MasqueradeBar/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/assets/confirm-email.svg","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/ConfirmEmailBanner/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/ConfirmEmailBanner/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/ConfirmEmailBanner/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/WidgetContainers/WidgetNavbar/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/messages.js","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/CollapsedHeader/CollapseMenuBody.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/BrandLogo.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/CollapsedHeader/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/ExpandedHeader/AuthenticatedUserDropdown.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/ExpandedHeader/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/containers/LearnerDashboardHeader/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/App.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/components/NoticesWrapper/api.js","webpack://@edx/frontend-app-learner-dashboard/./src/components/NoticesWrapper/hooks.js","webpack://@edx/frontend-app-learner-dashboard/./src/components/NoticesWrapper/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./src/index.jsx","webpack://@edx/frontend-app-learner-dashboard/./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["/* eslint-disable no-console */\nconst strictGet = (target, name) => {\n  if (name === Symbol.toStringTag) {\n    return target;\n  }\n\n  if (name === '$$typeof') {\n    return typeof target;\n  }\n\n  if (name in target || name === '_reactFragment') {\n    return target[name];\n  }\n\n  console.log(name.toString());\n  console.error({ target, name });\n  const e = Error(`invalid property \"${name.toString()}\"`);\n  console.error(e.stack);\n  return undefined;\n};\n\nconst StrictDict = (dict) => new Proxy(dict, { get: strictGet });\n\nexport default StrictDict;\n","import moment from 'moment';\n\nexport const dateFormatter = (formatDate, date) => formatDate(moment(date).toDate(), {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n});\n\nexport default dateFormatter;\n","export const nullMethod = () => ({});\n\nexport { default as StrictDict } from './StrictDict';\nexport { default as keyStore } from './keyStore';\nexport { default as dateFormatter } from './dateFormatter';\n","import { StrictDict } from 'utils';\n\nexport const RequestStates = StrictDict({\n  inactive: 'inactive',\n  pending: 'pending',\n  completed: 'completed',\n  failed: 'failed',\n});\n\nexport const RequestKeys = StrictDict({\n  initialize: 'initialize',\n  refreshList: 'refreshList',\n  newEntitlementEnrollment: 'newEntitlementEnrollment',\n  leaveEntitlementEnrollment: 'leaveEntitlementEnrollment',\n  switchEntitlementSession: 'switchEntitlementSession',\n  unenrollFromCourse: 'unenrollFromCourse',\n  updateEmailSettings: 'updateEmailSettings',\n  enrollEntitlementSession: 'enrollEntitlementSession',\n  leaveEntitlementSession: 'leaveEntitlementSession',\n  masquerade: 'masquerade',\n  recommendedCourses: 'recommendedCourses',\n});\n\nexport const ErrorCodes = StrictDict({\n  missingParam: 'ERR_MISSING_PARAM',\n});\n\nexport const ErrorStatuses = StrictDict({\n  badRequest: 400,\n  unauthorized: 401,\n  forbidden: 403,\n  notFound: 404,\n  conflict: 409,\n  serverError: 500,\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { StrictDict } from 'utils';\n\nconst initialState = {\n  pageNumber: 1,\n  courseData: {},\n  entitlement: [],\n  emailConfirmation: {},\n  enterpriseDashboard: {},\n  platformSettings: {},\n  suggestedCourses: [],\n  filterState: {},\n  selectSessionModal: {},\n};\n\nexport const cardId = (val) => `card-${val}`;\n\nexport const today = Date.now();\n\n// eslint-disable-next-line no-unused-vars\nconst app = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    loadCourses: (state, { payload: { courses } }) => ({\n      ...state,\n      courseData: courses.reduce(\n        (obj, curr, index) => {\n          const out = { ...curr, cardId: cardId(index) };\n          if (out.enrollment.lastEnrolled === null) {\n            out.enrollment.lastEnrolled = today;\n          }\n          return { ...obj, [cardId(index)]: out };\n        },\n        {},\n      ),\n    }),\n    loadGlobalData: (state, { payload }) => ({\n      ...state,\n      emailConfirmation: payload.emailConfirmation,\n      enterpriseDashboard: payload.enterpriseDashboard,\n      platformSettings: payload.platformSettings,\n      suggestedCourses: payload.suggestedCourses,\n      socialShareSettings: payload.socialShareSettings,\n    }),\n    updateSelectSessionModal: (state, { payload }) => ({\n      ...state,\n      selectSessionModal: { cardId: payload },\n    }),\n    setPageNumber: (state, { payload }) => ({ ...state, pageNumber: payload }),\n  },\n});\n\nconst actions = StrictDict(app.actions);\n\nconst { reducer } = app;\n\nexport {\n  actions,\n  initialState,\n  reducer,\n};\n","import { createSelector } from 'reselect';\nimport { StrictDict } from 'utils';\n\nimport * as module from './simpleSelectors';\n\nexport const appSelector = (state) => state.app;\nconst mkSimpleSelector = (cb) => createSelector([module.appSelector], cb);\n\n// top-level app data selectors\nexport const simpleSelectors = StrictDict({\n  courseData: mkSimpleSelector(app => app.courseData),\n  platformSettings: mkSimpleSelector(app => app.platformSettings),\n  suggestedCourses: mkSimpleSelector(app => app.suggestedCourses),\n  emailConfirmation: mkSimpleSelector(app => app.emailConfirmation),\n  enterpriseDashboard: mkSimpleSelector(app => app.enterpriseDashboard || {}),\n  selectSessionModal: mkSimpleSelector(app => app.selectSessionModal),\n  pageNumber: mkSimpleSelector(app => app.pageNumber),\n  socialShareSettings: mkSimpleSelector(app => app.socialShareSettings),\n});\n\nexport const cardSimpleSelectors = StrictDict({\n  certificate: ({ certificate }) => certificate,\n  course: ({ course }) => course,\n  courseProvider: ({ courseProvider }) => courseProvider,\n  courseRun: ({ courseRun }) => courseRun,\n  credit: ({ credit }) => credit,\n  enrollment: ({ enrollment }) => enrollment,\n  entitlement: ({ entitlement }) => entitlement,\n  gradeData: ({ gradeData }) => gradeData,\n  relatedPrograms: ({ programs: { relatedPrograms } }) => relatedPrograms,\n});\n\nexport const mkCardSelector = (simpleSelector, selector) => (state, cardId) => (\n  selector(simpleSelector(module.simpleSelectors.courseData(state)[cardId]))\n);\n\nexport default simpleSelectors;\n","import { createSelector } from 'reselect';\n\nimport { StrictDict } from 'utils';\n\nimport simpleSelectors from './simpleSelectors';\nimport * as module from './appSelectors';\n\nexport const numCourses = createSelector(\n  [simpleSelectors.courseData],\n  (courseData) => Object.keys(courseData).length,\n);\nexport const hasCourses = createSelector([module.numCourses], (num) => num > 0);\nexport const hasAvailableDashboards = createSelector(\n  [simpleSelectors.enterpriseDashboard],\n  (data) => data !== null && data.isLearnerPortalEnabled === true,\n);\nexport const showSelectSessionModal = createSelector(\n  [simpleSelectors.selectSessionModal],\n  (data) => data.cardId != null,\n);\n\nexport default StrictDict({\n  numCourses,\n  hasCourses,\n  hasAvailableDashboards,\n  showSelectSessionModal,\n});\n","import { StrictDict } from 'utils';\n\nimport { getConfig } from '@edx/frontend-platform';\n\nexport const getEcommerceUrl = () => getConfig().ECOMMERCE_BASE_URL;\n\nconst getBaseUrl = () => getConfig().LMS_BASE_URL;\n\nexport const getApiUrl = () => (`${getConfig().LMS_BASE_URL}/api`);\n\nconst getInitApiUrl = () => (`${getApiUrl()}/learner_home/init`);\n\nconst event = `${getBaseUrl()}/event`;\nconst courseUnenroll = `${getBaseUrl()}/change_enrollment`;\nconst updateEmailSettings = `${getApiUrl()}/change_email_settings`;\nconst entitlementEnrollment = (uuid) => `${getApiUrl()}/entitlements/v1/entitlements/${uuid}/enrollments`;\n\n// if url is null or absolute, return it as is\nexport const updateUrl = (base, url) => ((url == null || url.startsWith('http://') || url.startsWith('https://')) ? url : `${base}${url}`);\n\nexport const baseAppUrl = (url) => updateUrl(getBaseUrl(), url);\nexport const learningMfeUrl = (url) => updateUrl(getConfig().LEARNING_BASE_URL, url);\n\n// static view url\nconst programsUrl = baseAppUrl('/dashboard/programs');\n\nexport const creditPurchaseUrl = (courseId) => `${getEcommerceUrl()}/credit/checkout/${courseId}/`;\nexport const creditRequestUrl = (providerId) => `${getApiUrl()}/credit/v1/providers/${providerId}/request/`;\n\nexport default StrictDict({\n  getApiUrl,\n  baseAppUrl,\n  courseUnenroll,\n  creditPurchaseUrl,\n  creditRequestUrl,\n  entitlementEnrollment,\n  event,\n  getInitApiUrl,\n  learningMfeUrl,\n  programsUrl,\n  updateEmailSettings,\n});\n","// Constants related to courses\nexport const COURSE_MODES = {\n  VERIFIED: 'verified',\n  PROFESSIONAL: 'professional',\n  NO_ID_PROFESSIONAL: 'no-id-professional',\n  AUDIT: 'audit',\n  HONOR: 'honor',\n  EXECUTIVE_EDUCATION: 'executive-education',\n  PAID_EXECUTIVE_EDUCATION: 'paid-executive-education',\n  UNPAID_EXECUTIVE_EDUCATION: 'unpaid-executive-education',\n};\n\nexport const EXECUTIVE_EDUCATION_COURSE_MODES = [\n  COURSE_MODES.EXECUTIVE_EDUCATION,\n  COURSE_MODES.PAID_EXECUTIVE_EDUCATION,\n  COURSE_MODES.UNPAID_EXECUTIVE_EDUCATION,\n];\n","import { StrictDict } from 'utils';\nimport { baseAppUrl } from 'data/services/lms/urls';\nimport { EXECUTIVE_EDUCATION_COURSE_MODES } from 'data/constants/course';\n\nimport * as module from './courseCard';\nimport * as simpleSelectors from './simpleSelectors';\n\nconst { cardSimpleSelectors, mkCardSelector } = simpleSelectors;\n\nconst today = new Date();\nconst dateSixMonthsFromNow = new Date();\ndateSixMonthsFromNow.setDate(dateSixMonthsFromNow.getDate() + 180);\n\nexport const loadDateVal = (date) => (date ? new Date(date) : null);\n\nexport const courseCard = StrictDict({\n  certificate: mkCardSelector(\n    cardSimpleSelectors.certificate,\n    (certificate) => (certificate === null ? {} : ({\n      availableDate: new Date(certificate.availableDate),\n      certPreviewUrl: baseAppUrl(certificate.certPreviewUrl),\n      isDownloadable: certificate.isDownloadable,\n      isEarnedButUnavailable: certificate.isEarned && new Date(certificate.availableDate) > new Date(),\n      isRestricted: certificate.isRestricted,\n      isEarned: certificate.isEarned,\n    })),\n  ),\n  course: mkCardSelector(\n    cardSimpleSelectors.course,\n    (course) => ({\n      bannerImgSrc: baseAppUrl(course.bannerImgSrc),\n      courseNumber: course.courseNumber,\n      courseName: course.courseName,\n      socialShareUrl: course.socialShareUrl,\n    }),\n  ),\n  courseProvider: mkCardSelector(\n    cardSimpleSelectors.courseProvider,\n    (courseProvider) => ({ name: courseProvider?.name }),\n  ),\n  courseRun: mkCardSelector(\n    cardSimpleSelectors.courseRun,\n    (courseRun) => (courseRun === null ? {} : {\n      endDate: module.loadDateVal(courseRun.endDate),\n      startDate: module.loadDateVal(courseRun.startDate),\n\n      courseId: courseRun.courseId,\n      isArchived: courseRun.isArchived,\n      isStarted: courseRun.isStarted,\n\n      minPassingGrade: Math.floor(courseRun.minPassingGrade * 100),\n\n      homeUrl: courseRun.homeUrl,\n      marketingUrl: courseRun.marketingUrl,\n      upgradeUrl: courseRun.upgradeUrl,\n\n      progressUrl: baseAppUrl(courseRun.progressUrl),\n      resumeUrl: baseAppUrl(courseRun.resumeUrl), // resume will route this to learning mfe.\n      unenrollUrl: baseAppUrl(courseRun.unenrollUrl),\n    }),\n  ),\n  credit: mkCardSelector(\n    cardSimpleSelectors.credit,\n    (credit) => {\n      if (!credit || Object.keys(credit).length === 0) {\n        return { isEligible: false };\n      }\n      return {\n        isEligible: true,\n        providerStatusUrl: credit.providerStatusUrl,\n        providerName: credit.providerName,\n        providerId: credit.providerId,\n        error: credit.error,\n        purchased: credit.purchased,\n        requestStatus: credit.requestStatus,\n      };\n    },\n  ),\n  enrollment: mkCardSelector(\n    cardSimpleSelectors.enrollment,\n    (enrollment) => {\n      if (enrollment == null) {\n        return { isEnrolled: false };\n      }\n      const { isStaff, hasUnmetPrereqs, isTooEarly } = enrollment.coursewareAccess;\n      return {\n        coursewareAccess: enrollment.coursewareAccess,\n        hasAccess: isStaff || !(hasUnmetPrereqs || isTooEarly),\n        isEnrolled: enrollment.isEnrolled,\n        lastEnrolled: enrollment.lastEnrolled,\n        hasStarted: enrollment.hasStarted,\n\n        accessExpirationDate: module.loadDateVal(enrollment.accessExpirationDate),\n        canUpgrade: enrollment.canUpgrade,\n        isAudit: enrollment.isAudit,\n        isAuditAccessExpired: enrollment.isAuditAccessExpired,\n        isVerified: enrollment.isVerified,\n\n        isEmailEnabled: enrollment.isEmailEnabled,\n        hasOptedOutOfEmail: enrollment.hasOptedOutOfEmail,\n        mode: enrollment.mode,\n        isExecEd2UCourse: EXECUTIVE_EDUCATION_COURSE_MODES.includes(enrollment.mode),\n      };\n    },\n  ),\n  entitlement: mkCardSelector(\n    cardSimpleSelectors.entitlement,\n    (entitlement) => {\n      if (!entitlement || Object.keys(entitlement).length === 0) {\n        return { isEntitlement: false };\n      }\n      const deadline = new Date(entitlement.changeDeadline);\n      const deadlinePassed = deadline < today;\n      const showExpirationWarning = (\n        !entitlement.isFulfilled\n        && !deadlinePassed\n        && deadline <= dateSixMonthsFromNow\n      );\n      return {\n        isEntitlement: true,\n\n        availableSessions: entitlement.availableSessions,\n        changeDeadline: deadline,\n        isExpired: entitlement.isExpired,\n        isFulfilled: entitlement.isFulfilled,\n        uuid: entitlement.uuid,\n\n        hasSessions: entitlement.availableSessions?.length > 0,\n        canChange: !deadlinePassed,\n        showExpirationWarning,\n      };\n    },\n  ),\n  gradeData: mkCardSelector(\n    cardSimpleSelectors.gradeData,\n    (gradeData) => ({ isPassing: gradeData.isPassing }),\n  ),\n  relatedPrograms: mkCardSelector(\n    cardSimpleSelectors.relatedPrograms,\n    (relatedPrograms) => ({\n      list: relatedPrograms.map(program => ({\n        bannerImgSrc: program.bannerImgSrc,\n        logoImgSrc: program.logoImgSrc,\n        numberOfCourses: program.numberOfCourses,\n        programType: program.programType,\n        programUrl: program.programUrl,\n        provider: program.provider,\n        title: program.title,\n      })),\n      length: relatedPrograms.length,\n    }),\n  ),\n});\n\nexport default courseCard;\n","import { getConfig } from '@edx/frontend-platform';\nimport { StrictDict } from 'utils';\n\nexport const routePath = `${getConfig().PUBLIC_PATH}:courseId`;\nexport const locationId = window.location.pathname.slice(1);\n\nexport const SortKeys = StrictDict({\n  enrolled: 'enrolled',\n  title: 'title',\n});\n\nexport const FilterKeys = StrictDict({\n  inProgress: 'inProgress',\n  notStarted: 'notStarted',\n  done: 'done',\n  notEnrolled: 'notEnrolled',\n  upgraded: 'upgraded',\n});\n\nexport const ListPageSize = 25;\n","import { StrictDict } from 'utils';\nimport { FilterKeys, SortKeys } from 'data/constants/app';\n\nimport simpleSelectors from './simpleSelectors';\nimport * as module from './currentList';\n\nexport const sortFn = (transform, { reverse }) => (v1, v2) => {\n  const [a, b] = [v1, v2].map(transform);\n  if (a === b) { return 0; }\n  return ((a > b) ? 1 : -1) * (reverse ? -1 : 1);\n};\n\nexport const courseFilters = StrictDict({\n  [FilterKeys.notEnrolled]: (course) => !course.enrollment.isEnrolled,\n  [FilterKeys.done]: (course) => course.courseRun !== null && course.courseRun.isArchived,\n  [FilterKeys.upgraded]: (course) => course.enrollment.isVerified,\n  [FilterKeys.inProgress]: (course) => course.enrollment.hasStarted,\n  [FilterKeys.notStarted]: (course) => !course.enrollment.hasStarted,\n});\n\nexport const transforms = StrictDict({\n  [SortKeys.enrolled]: ({ enrollment }) => new Date(enrollment.lastEnrolled),\n  [SortKeys.title]: ({ course }) => course.courseName.toLowerCase(),\n});\n\nexport const courseFilterFn = filters => (filters.length\n  ? course => filters.reduce((match, filter) => match && courseFilters[filter](course), true)\n  : () => true);\n\nexport const currentList = (allCourses, {\n  sortBy,\n  filters,\n}) => allCourses\n  .filter(module.courseFilterFn(filters))\n  .sort(module.sortFn(transforms[sortBy], { reverse: sortBy === SortKeys.enrolled }));\n\nexport const visibleList = (state, {\n  sortBy,\n  filters,\n  pageSize,\n}) => {\n  const courses = Object.values(simpleSelectors.courseData(state));\n  const list = module.currentList(courses, { sortBy, filters });\n  const pageNumber = simpleSelectors.pageNumber(state);\n\n  if (pageSize === 0) {\n    return {\n      visible: list,\n      numPages: 1,\n    };\n  }\n  return {\n    visible: list.slice((pageNumber - 1) * pageSize, pageNumber * pageSize),\n    numPages: Math.ceil(list.length / pageSize),\n  };\n};\n\nexport default visibleList;\n","import { StrictDict } from 'utils';\n\nimport simpleSelectors from './simpleSelectors';\nimport appSelectors from './appSelectors';\nimport courseCard from './courseCard';\nimport currentList from './currentList';\n\nexport default StrictDict({\n  ...simpleSelectors,\n  ...appSelectors,\n  courseCard,\n  currentList,\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { StrictDict } from 'utils';\n\nimport { RequestStates, RequestKeys } from 'data/constants/requests';\n\nconst initialState = {\n  [RequestKeys.initialize]: { status: RequestStates.inactive },\n  [RequestKeys.refreshList]: { status: RequestStates.inactive },\n  [RequestKeys.enrollEntitlementSession]: { status: RequestStates.inactive },\n  [RequestKeys.leaveEntitlementSession]: { status: RequestStates.inactive },\n  [RequestKeys.masquerade]: { status: RequestStates.inactive },\n};\n\n// eslint-disable-next-line no-unused-vars\nconst requests = createSlice({\n  name: 'requests',\n  initialState,\n  reducers: {\n    startRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {\n        status: RequestStates.pending,\n      },\n    }),\n    completeRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {\n        status: RequestStates.completed,\n        response: payload.response,\n      },\n    }),\n    failRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {\n        status: RequestStates.failed,\n        error: payload.error,\n      },\n    }),\n    clearRequest: (state, { payload }) => ({\n      ...state,\n      [payload.requestKey]: {},\n    }),\n  },\n});\n\nconst actions = StrictDict(requests.actions);\nconst { reducer } = requests;\n\nexport {\n  actions,\n  reducer,\n  initialState,\n};\n","import { StrictDict } from 'utils';\nimport { RequestStates, RequestKeys } from 'data/constants/requests';\n// import * as module from './selectors';\n\nexport const requestStatus = (state, { requestKey }) => state.requests[requestKey];\n\nconst statusSelector = (fn) => (requestKey) => (state) => fn(state.requests[requestKey]);\n\nexport const isInactive = ({ status }) => status === RequestStates.inactive;\nexport const isPending = ({ status }) => status === RequestStates.pending;\nexport const isCompleted = ({ status }) => status === RequestStates.completed;\nexport const isFailed = ({ status }) => status === RequestStates.failed;\nexport const error = (request) => request.error;\nexport const errorStatus = (request) => request.error?.response?.status;\nexport const errorCode = (request) => request.error?.response?.data;\n\nexport const data = (request) => request.data;\n\nexport const masquerade = (state) => {\n  const request = requestStatus(state, { requestKey: RequestKeys.masquerade });\n  return {\n    isMasquerading: isCompleted(request),\n    isMasqueradingFailed: isFailed(request),\n    isMasqueradingPending: isPending(request),\n    masqueradeErrorStatus: errorStatus(request),\n  };\n};\n\nexport default StrictDict({\n  requestStatus,\n  isInactive: statusSelector(isInactive),\n  isPending: statusSelector(isPending),\n  isCompleted: statusSelector(isCompleted),\n  isFailed: statusSelector(isFailed),\n  error: statusSelector(error),\n  errorCode: statusSelector(errorCode),\n  errorStatus: statusSelector(errorStatus),\n  data: statusSelector(data),\n  masquerade,\n});\n","import { combineReducers } from 'redux';\n\nimport { StrictDict } from 'utils';\n\nimport * as app from './app';\nimport * as requests from './requests';\n\nconst modules = {\n  app,\n  requests,\n};\n\nconst moduleProps = (propName) => Object.keys(modules).reduce(\n  (obj, moduleKey) => {\n    const value = modules[moduleKey][propName];\n    return value ? { ...obj, [moduleKey]: value } : obj;\n  },\n  {},\n);\n\nconst rootReducer = combineReducers(moduleProps('reducer'));\n\nconst actions = StrictDict(moduleProps('actions'));\n\nconst selectors = StrictDict(moduleProps('selectors'));\n\nexport { actions, selectors };\n\nexport default rootReducer;\n","// import { StrictDict } from 'utils';\nimport {\n  ErrorStatuses,\n  // RequestKeys,\n} from 'data/constants/requests';\nimport { actions } from 'data/redux';\n\nexport const errorData = (status, data = '') => ({\n  response: {\n    status,\n    data,\n  },\n});\n\nexport const networkErrorData = errorData(ErrorStatuses.badRequest);\n\nexport const genTestUtils = ({\n  dispatch,\n}) => {\n  /*\n  const mockStart = (requestKey) => () => {\n    dispatch(actions.requests.startRequest(requestKey));\n  };\n  */\n\n  const mockError = (requestKey, status, data) => () => {\n    dispatch(actions.requests.failRequest({\n      requestKey,\n      error: errorData(status, data),\n    }));\n  };\n  const mockNetworkError = (requestKey) => (\n    mockError(requestKey, ErrorStatuses.badRequest)\n  );\n  return {\n    mockNetworkError,\n  };\n};\n\nexport default genTestUtils;\n","import * as redux from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport { createLogger } from 'redux-logger';\n\nimport apiTestUtils from 'data/services/lms/fakeData/testUtils';\n\nimport reducer, { actions, selectors } from './redux';\n\nexport const createStore = () => {\n  const loggerMiddleware = createLogger();\n\n  const middleware = [thunkMiddleware, loggerMiddleware];\n\n  const store = redux.createStore(\n    reducer,\n    composeWithDevTools(redux.applyMiddleware(...middleware)),\n  );\n\n  /**\n   * Dev tools for redux work\n   */\n  if (process.env.NODE_ENV === 'development') {\n    window.store = store;\n    window.actions = actions;\n    window.selectors = selectors;\n    window.apiTestUtils = apiTestUtils(store);\n  }\n\n  return store;\n};\n\nconst store = createStore();\n\nexport default store;\n","const configuration = {\n  // BASE_URL: process.env.BASE_URL,\n  LMS_BASE_URL: process.env.LMS_BASE_URL,\n  ECOMMERCE_BASE_URL: process.env.ECOMMERCE_BASE_URL,\n  // LOGIN_URL: process.env.LOGIN_URL,\n  // LOGOUT_URL: process.env.LOGOUT_URL,\n  // CSRF_TOKEN_API_PATH: process.env.CSRF_TOKEN_API_PATH,\n  // REFRESH_ACCESS_TOKEN_ENDPOINT: process.env.REFRESH_ACCESS_TOKEN_ENDPOINT,\n  // DATA_API_BASE_URL: process.env.DATA_API_BASE_URL,\n  // SECURE_COOKIES: process.env.NODE_ENV !== 'development',\n  SEGMENT_KEY: process.env.SEGMENT_KEY,\n  // ACCESS_TOKEN_COOKIE_NAME: process.env.ACCESS_TOKEN_COOKIE_NAME,\n  LEARNING_BASE_URL: process.env.LEARNING_BASE_URL,\n  SESSION_COOKIE_DOMAIN: process.env.SESSION_COOKIE_DOMAIN || '',\n  ZENDESK_KEY: process.env.ZENDESK_KEY,\n  SUPPORT_URL: process.env.SUPPORT_URL || null,\n  ENABLE_NOTICES: process.env.ENABLE_NOTICES || null,\n  CAREER_LINK_URL: process.env.CAREER_LINK_URL || null,\n  LOGO_URL: process.env.LOGO_URL,\n  ENABLE_EDX_PERSONAL_DASHBOARD: process.env.ENABLE_EDX_PERSONAL_DASHBOARD === 'true',\n};\n\nconst features = {};\n\nexport { configuration, features };\n","import { messages as footerMessages } from '@edx/frontend-component-footer';\nimport { messages as paragonMessages } from '@edx/paragon';\n\nimport arMessages from './messages/ar.json';\n// no need to import en messages-- they are in the defaultMessage field\nimport es419Messages from './messages/es_419.json';\nimport frMessages from './messages/fr.json';\nimport frcaMessages from './messages/fr_CA.json';\nimport ptbrMessages from './messages/pt_BR.json';\nimport zhcnMessages from './messages/zh_CN.json';\nimport jajpMessages from './messages/ja-jp.json';\n\nconst appMessages = {\n  ar: arMessages,\n  'es-419': es419Messages,\n  fr: frMessages,\n  'fr-ca': frcaMessages,\n  'pt-br': ptbrMessages,\n  'zh-cn': zhcnMessages,\n  'ja-jp': jajpMessages,\n};\n\nexport default [\n  footerMessages,\n  appMessages,\n  paragonMessages,\n];\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as redux from 'data/redux';\nimport * as module from './app';\n\nconst selectors = redux.selectors.app;\nconst actions = redux.actions.app;\n\n/** Simple Selectors **/\nexport const usePageNumber = () => useSelector(selectors.pageNumber);\nexport const useEmailConfirmationData = () => useSelector(selectors.emailConfirmation);\nexport const useEnterpriseDashboardData = () => useSelector(selectors.enterpriseDashboard);\nexport const usePlatformSettingsData = () => useSelector(selectors.platformSettings);\nexport const useSelectSessionModalData = () => useSelector(selectors.selectSessionModal);\nexport const useSocialShareSettings = () => useSelector(selectors.socialShareSettings);\n\n/** global-level meta-selectors **/\nexport const useHasCourses = () => useSelector(selectors.hasCourses);\nexport const useHasAvailableDashboards = () => useSelector(selectors.hasAvailableDashboards);\nexport const useCurrentCourseList = (opts) => useSelector(\n  state => selectors.currentList(state, opts),\n);\nexport const useShowSelectSessionModal = () => useSelector(selectors.showSelectSessionModal);\n\n// eslint-disable-next-line\nexport const useCourseCardData = (selector) => (cardId) => useSelector(\n  (state) => selector(state, cardId),\n);\n/** Course Card selectors **/\nconst { courseCard } = selectors;\nexport const useCardCertificateData = useCourseCardData(courseCard.certificate);\nexport const useCardCourseData = useCourseCardData(courseCard.course);\nexport const useCardCourseRunData = useCourseCardData(courseCard.courseRun);\nexport const useCardCreditData = useCourseCardData(courseCard.credit);\nexport const useCardEnrollmentData = useCourseCardData(courseCard.enrollment);\nexport const useCardEntitlementData = useCourseCardData(courseCard.entitlement);\nexport const useCardGradeData = useCourseCardData(courseCard.gradeData);\nexport const useCardProviderData = useCourseCardData(courseCard.courseProvider);\nexport const useCardRelatedProgramsData = useCourseCardData(courseCard.relatedPrograms);\n\nexport const useCardSocialSettingsData = (cardId) => {\n  const socialShareSettings = module.useSocialShareSettings();\n  const { socialShareUrl } = module.useCardCourseData(cardId);\n  const defaultSettings = { isEnabled: false, shareUrl: '' };\n\n  if (!socialShareSettings) {\n    return { facebook: defaultSettings, twitter: defaultSettings };\n  }\n  const { facebook, twitter } = socialShareSettings;\n  const loadSettings = (target) => ({\n    isEnabled: target.isEnabled,\n    shareUrl: `${socialShareUrl}?${target.utmParams}`,\n  });\n  return { facebook: loadSettings(facebook), twitter: loadSettings(twitter) };\n};\n\nexport const useCardExecEdTrackingParam = (cardId) => {\n  const { isExecEd2UCourse } = module.useCardEnrollmentData(cardId);\n  const { authOrgId } = module.useEnterpriseDashboardData(cardId);\n  return isExecEd2UCourse ? `?org_id=${authOrgId}` : '';\n};\n\n/** Events **/\nexport const useUpdateSelectSessionModalCallback = (cardId) => {\n  const dispatch = useDispatch();\n  return () => dispatch(actions.updateSelectSessionModal(cardId));\n};\n\nexport const useTrackCourseEvent = (tracker, cardId, ...args) => {\n  const { courseId } = module.useCardCourseRunData(cardId);\n  return (e) => tracker(courseId, ...args)(e);\n};\n\nexport const useSetPageNumber = () => {\n  const dispatch = useDispatch();\n  return (value) => dispatch(actions.setPageNumber(value));\n};\n\nexport const useLoadData = () => {\n  const dispatch = useDispatch();\n  return ({ courses, ...globalData }) => {\n    dispatch(actions.setPageNumber(1));\n    dispatch(actions.loadGlobalData(globalData));\n    dispatch(actions.loadCourses({ courses }));\n  };\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport * as redux from 'data/redux';\nimport * as module from './requests';\n\nconst selectors = redux.selectors.requests;\nconst actions = redux.actions.requests;\n\nexport const useMasqueradeData = () => useSelector(selectors.masquerade);\n\nexport const statusSelector = selector => (requestName) => useSelector(selector(requestName));\nexport const useRequestIsPending = module.statusSelector(selectors.isPending);\nexport const useRequestIsFailed = module.statusSelector(selectors.isFailed);\nexport const useRequestIsCompleted = module.statusSelector(selectors.isCompleted);\nexport const useRequestIsInactive = module.statusSelector(selectors.isInactive);\nexport const useRequestError = module.statusSelector(selectors.error);\nexport const useRequestErrorCode = module.statusSelector(selectors.errorCode);\nexport const useRequestErrorStatus = module.statusSelector(selectors.errorStatus);\nexport const useRequestData = module.statusSelector(selectors.data);\n\nexport const useMakeNetworkRequest = () => {\n  const dispatch = useDispatch();\n  return ({\n    requestKey,\n    promise,\n    onSuccess,\n    onFailure,\n  }) => {\n    dispatch(actions.startRequest({ requestKey }));\n    return promise.then((response) => {\n      if (onSuccess) { onSuccess(response); }\n      dispatch(actions.completeRequest({ requestKey, response }));\n    }).catch((error) => {\n      if (onFailure) { onFailure(error); }\n      dispatch(actions.failRequest({ requestKey, error }));\n    });\n  };\n};\n\nexport const useClearRequest = () => {\n  const dispatch = useDispatch();\n  return (requestKey) => {\n    dispatch(actions.clearRequest({ requestKey }));\n  };\n};\n","import queryString from 'query-string';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\n\n/**\n * get(url)\n * simple wrapper providing an authenticated Http client get action\n * @param {string} url - target url\n */\nexport const get = (...args) => getAuthenticatedHttpClient().get(...args);\n/**\n * post(url, data)\n * simple wrapper providing an authenticated Http client post action\n * queryString.stringify is used to convert the object to query string with = and &\n * @param {string} url - target url\n * @param {object|string} body - post payload\n */\nexport const post = (url, body) => getAuthenticatedHttpClient().post(url, queryString.stringify(body));\n\nexport const client = getAuthenticatedHttpClient;\n\n/**\n * stringifyUrl(url, query)\n * simple wrapper around queryString.stringifyUrl that sets skip behavior\n * @param {string} url - base url string\n * @param {object} query - query parameters\n */\nexport const stringifyUrl = (url, query) => queryString.stringifyUrl(\n  { url, query },\n  { skipNull: true, skipEmptyString: true },\n);\n","import { StrictDict } from 'utils';\n\nexport const categories = StrictDict({\n  dashboard: 'dashboard',\n  upgrade: 'upgrade',\n  userEngagement: 'user-engagement',\n  searchButton: 'search_button',\n  credit: 'credit',\n  filter: 'filter',\n});\n\nexport const events = StrictDict({\n  enterCourseClicked: 'enterCourseClicked',\n  courseImageClicked: 'courseImageClicked',\n  courseTitleClicked: 'courseTitleClicked',\n  courseOptionsDropdownClicked: 'courseOptionsDropdownClicked',\n  upgradeButtonClicked: 'upgradeButtonClicked',\n  upgradeButtonClickedEnrollment: 'upgradeButtonClickedEnrollment',\n  upgradeButtonClickedUpsell: 'upgradeButtonClickedUpsell',\n  shareClicked: 'shareClicked',\n  userSettingsChanged: 'userSettingsChanged',\n  newSession: 'newSession',\n  switchSession: 'switchSession',\n  leaveSession: 'leaveSession',\n  unenrollReason: 'unenrollReason',\n  entitlementUnenrollReason: 'entitlementUnenrollReason',\n  enterpriseDashboardModalOpened: 'enterpriseDashboardModalOpened',\n  enterpriseDashboardModalCTAClicked: 'enterpriseDashboardModalCTAClicked',\n  enterpriseDashboardModalClosed: 'enterpriseDashboardModalClosed',\n});\n\nconst learnerPortal = 'edx.ui.enterprise.lms.dashboard.learner_portal_modal';\n\nexport const eventNames = StrictDict({\n  enterCourseClicked: 'edx.bi.dashboard.enter_course.clicked',\n  courseImageClicked: 'edx.bi.dashboard.course_image.clicked',\n  courseTitleClicked: 'edx.bi.dashboard.course_title.clicked',\n  courseOptionsDropdownClicked: 'edx.bi.dashboard.course_options_dropdown.clicked',\n  upgradeButtonClicked: 'edx.bi.dashboard.upgrade_button.clicked',\n  upgradeButtonClickedEnrollment: 'edx.course.enrollment.upgrade.clicked',\n  upgradeButtonClickedUpsell: 'edx.bi.ecommerce.upsell_links_clicked',\n  shareClicked: 'edx.course.share_clicked',\n  userSettingsChanged: 'edx.user.settings.changed',\n  newSession: 'course-dashboard.new-session',\n  switchSession: 'course-dashboard.switch-session',\n  leaveSession: 'course-dashboard.leave-session',\n  unenrollReason: 'unenrollment_reason.selected',\n  entitlementUnenrollReason: 'entitlement_unenrollment_reason.selected',\n  enterpriseDashboardModalOpened: `${learnerPortal}.opened`,\n  enterpriseDashboardModalCTAClicked: `${learnerPortal}.dashboard_cta.clicked`,\n  enterpriseDashboardModalClosed: `${learnerPortal}.closed`,\n  findCoursesClicked: 'edx.bi.dashboard.find_courses_button.clicked',\n  purchaseCredit: 'edx.bi.credit.clicked_purchase_credit',\n  filterClicked: 'course-dashboard.filter.clicked',\n  filterOptionSelected: 'course-dashboard.filter_option.selected',\n});\n\nexport const linkNames = StrictDict({\n  learnerHomeNavExplore: 'learner_home_nav_explore',\n  learnerHomeNavDropdownExplore: 'learner_home_nav_dropdown_explore',\n});\n\nexport const appName = 'learner-home';\n\nexport default eventNames;\n","import { StrictDict } from 'utils';\n\nexport const apiKeys = StrictDict({\n  receiveEmails: 'receive_emails',\n  enrollmentAction: 'enrollment_action',\n  courseRunId: 'course_run_id',\n  courseId: 'course_id',\n  user: 'user',\n  isRefund: 'is_refund',\n});\n\nexport const apiValues = StrictDict({\n  on: 'on',\n  unenroll: 'unenroll',\n});\n\nexport const unenrollmentAction = { [apiKeys.enrollmentAction]: apiValues.unenroll };\nexport const enableEmailsAction = { [apiKeys.receiveEmails]: apiValues.on };\n","import eventNames from 'tracking/constants';\nimport {\n  client,\n  get,\n  post,\n  stringifyUrl,\n} from './utils';\nimport {\n  apiKeys,\n  unenrollmentAction,\n  enableEmailsAction,\n} from './constants';\nimport urls from './urls';\nimport * as module from './api';\n\n/*********************************************************************************\n * GET Actions\n *********************************************************************************/\nexport const initializeList = ({ user } = {}) => get(\n  stringifyUrl(urls.getInitApiUrl(), { [apiKeys.user]: user }),\n);\n\nexport const updateEntitlementEnrollment = ({ uuid, courseId }) => post(\n  urls.entitlementEnrollment(uuid),\n  { [apiKeys.courseRunId]: courseId },\n);\n\nexport const deleteEntitlementEnrollment = ({ uuid, isRefundable }) => client()\n  .delete(\n    stringifyUrl(\n      urls.entitlementEnrollment(uuid),\n      { [apiKeys.isRefund]: isRefundable },\n    ),\n  );\n\nexport const updateEmailSettings = ({ courseId, enable }) => post(\n  urls.updateEmailSettings,\n  { [apiKeys.courseId]: courseId, ...(enable && enableEmailsAction) },\n);\n\nexport const unenrollFromCourse = ({ courseId }) => post(\n  urls.courseUnenroll,\n  { [apiKeys.courseId]: courseId, ...unenrollmentAction },\n);\n\nexport const logEvent = ({ eventName, data, courseId }) => post(urls.event, {\n  courserun_key: courseId,\n  event_type: eventName,\n  page: window.location.href,\n  event: JSON.stringify(data),\n});\n\nexport const logUpgrade = ({ courseId }) => module.logEvent({\n  eventName: eventNames.upgradeButtonClickedEnrollment,\n  courseId,\n  data: { location: 'learner-dashboard' },\n});\n\nexport const logShare = ({ courseId, site }) => module.logEvent({\n  eventName: eventNames.shareClicked,\n  courseId,\n  data: {\n    course_id: courseId,\n    social_media_site: site,\n    location: 'dashboard',\n  },\n});\n\nexport const createCreditRequest = ({ providerId, courseId, username }) => post(\n  urls.creditRequestUrl(providerId),\n  { course_key: courseId, username },\n);\n\nexport default {\n  initializeList,\n  unenrollFromCourse,\n  updateEmailSettings,\n  updateEntitlementEnrollment,\n  deleteEntitlementEnrollment,\n  logEvent,\n  logUpgrade,\n  logShare,\n  createCreditRequest,\n};\n","import React from 'react';\n\nimport { AppContext } from '@edx/frontend-platform/react';\n\nimport { RequestKeys } from 'data/constants/requests';\nimport { post } from 'data/services/lms/utils';\nimport api from 'data/services/lms/api';\n\nimport * as reduxHooks from 'data/redux/hooks';\nimport * as module from './api';\n\nconst { useMakeNetworkRequest } = reduxHooks;\n\nexport const useNetworkRequest = (action, args) => {\n  const makeNetworkRequest = useMakeNetworkRequest();\n  return (...actionsArgs) => makeNetworkRequest({\n    promise: action(...actionsArgs),\n    ...args,\n  });\n};\n\n/**\n * initialize the app, loading ora and course metadata from the api, and loading the initial\n * submission list data.\n */\nexport const useInitializeApp = () => {\n  const loadData = reduxHooks.useLoadData();\n  return module.useNetworkRequest(api.initializeList, {\n    requestKey: RequestKeys.initialize,\n    onSuccess: ({ data }) => loadData(data),\n  });\n};\n\nexport const useNewEntitlementEnrollment = (cardId) => {\n  const { uuid } = reduxHooks.useCardEntitlementData(cardId);\n  const onSuccess = module.useInitializeApp();\n  return module.useNetworkRequest(\n    (selection) => api.updateEntitlementEnrollment({ uuid, courseId: selection }),\n    { onSuccess, requestKey: RequestKeys.newEntitlementEnrollment },\n  );\n};\n\nexport const useSwitchEntitlementEnrollment = (cardId) => {\n  const { uuid } = reduxHooks.useCardEntitlementData(cardId);\n  const onSuccess = module.useInitializeApp();\n  const action = (selection) => api.updateEntitlementEnrollment({ uuid, courseId: selection });\n  return module.useNetworkRequest(\n    action,\n    { onSuccess, requestKey: RequestKeys.switchEntitlementSession },\n  );\n};\n\nexport const useLeaveEntitlementSession = (cardId) => {\n  const { uuid, isRefundable } = reduxHooks.useCardEntitlementData(cardId);\n  const onSuccess = module.useInitializeApp();\n  return module.useNetworkRequest(\n    () => api.deleteEntitlementEnrollment({ uuid, isRefundable }),\n    { onSuccess, requestKey: RequestKeys.leaveEntitlementSession },\n  );\n};\n\nexport const useUnenrollFromCourse = (cardId) => {\n  const { courseId } = reduxHooks.useCardCourseRunData(cardId);\n  return module.useNetworkRequest(\n    () => api.unenrollFromCourse({ courseId }),\n    { requestKey: RequestKeys.unenrollFromCourse },\n  );\n};\n\nexport const useMasqueradeAs = () => {\n  const loadData = reduxHooks.useLoadData();\n  return module.useNetworkRequest(\n    (user) => api.initializeList({ user }),\n    { onSuccess: ({ data }) => loadData(data), requestKey: RequestKeys.masquerade },\n  );\n};\n\nexport const useClearMasquerade = () => {\n  const clearRequest = reduxHooks.useClearRequest();\n  const initializeApp = module.useInitializeApp();\n  return () => {\n    clearRequest(RequestKeys.masquerade);\n    initializeApp();\n  };\n};\n\nexport const useUpdateEmailSettings = (cardId) => {\n  const { courseId } = reduxHooks.useCardCourseRunData(cardId);\n  return module.useNetworkRequest(\n    (enable) => api.updateEmailSettings({ courseId, enable }),\n    { requestKey: RequestKeys.updateEmailSettings },\n  );\n};\n\nexport const useSendConfirmEmail = () => {\n  const { sendEmailUrl } = reduxHooks.useEmailConfirmationData();\n  return () => post(sendEmailUrl);\n};\n\nexport const useCreateCreditRequest = (cardId) => {\n  const { providerId } = reduxHooks.useCardCreditData(cardId);\n  const { authenticatedUser: { username } } = React.useContext(AppContext);\n  const { courseId } = reduxHooks.useCardCourseRunData(cardId);\n  return () => api.createCreditRequest({ providerId, courseId, username });\n};\n","import React from 'react';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport dateFormatter from 'utils/dateFormatter';\n\nexport const useValueCallback = (cb, prereqs = []) => (\n  React.useCallback(e => cb(e.target.value), prereqs) // eslint-disable-line\n);\n\nexport const useFormatDate = () => {\n  const { formatDate } = useIntl();\n  return (date) => dateFormatter(formatDate, date);\n};\n\nexport default {\n  useFormatDate,\n  useValueCallback,\n};\n","import * as redux from 'data/redux/hooks';\nimport * as api from './api';\nimport * as utils from './utils';\n\nexport const reduxHooks = redux;\nexport const apiHooks = api;\nexport const utilHooks = utils;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  enterpriseDialogHeader: {\n    id: 'leanerDashboard.enterpriseDialogHeader',\n    defaultMessage: 'You have access to the {label} dashboard',\n    description: 'title for enterpise dashboard dialog',\n  },\n  enterpriseDialogBody: {\n    id: 'leanerDashboard.enterpriseDialogBody',\n    defaultMessage: 'To access the courses available to you through {label}, visit the {label} dashboard now.',\n    description: 'Body text for enterpise dashboard dialog',\n  },\n  enterpriseDialogDismissButton: {\n    id: 'leanerDashboard.enterpriseDialogDismissButton',\n    defaultMessage: 'Dismiss',\n    description: 'Dismiss button to cancel visiting dashboard',\n  },\n  enterpriseDialogConfirmButton: {\n    id: 'leanerDashboard.enterpriseDialogConfirmButton',\n    defaultMessage: 'Go to dashboard',\n    description: 'Confirm button to go to the dashboard url',\n  },\n});\n\nexport default messages;\n","/* eslint-disable import/prefer-default-export */\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { appName } from 'tracking/constants';\n\nexport const LINK_TIMEOUT = 300;\n\nexport const createEventTracker = (name, options = {}) => () => sendTrackEvent(\n  name,\n  { ...options, app_name: appName },\n);\n\nexport const createLinkTracker = (tracker, href) => (e) => {\n  e.preventDefault();\n  tracker();\n  return setTimeout(() => { global.location.href = href; }, LINK_TIMEOUT);\n};\n","import api from 'data/services/lms/api';\nimport { createEventTracker, createLinkTracker } from 'data/services/segment/utils';\nimport { categories, eventNames } from '../constants';\nimport * as module from './course';\n\nexport const upsellOptions = {\n  linkName: 'course_dashboard_green',\n  linkType: 'button',\n  pageName: 'course_dashboard',\n  linkCategory: 'green_update',\n};\n\n// Utils/Helpers\n/**\n * Generate a segement event tracker for a given course event.\n * @param {string} eventName - segment event name\n * @param {string} courseId - course run identifier\n * @param {[object]} options - optional event data\n */\nexport const courseEventTracker = (eventName, courseId, options = {}) => createEventTracker(\n  eventName,\n  { category: categories.dashboard, label: courseId, ...options },\n);\n/**\n * Generate a hook to allow components to provide a courseId and link href and provide\n * a link tracker with defined event name and options, over a set of default optiosn.\n * @param {string} eventName - event name for the click event\n * @return {callback} - component hook returning a link tracking event callback\n */\nexport const courseLinkTracker = (eventName) => (courseId, href) => (\n  createLinkTracker(module.courseEventTracker(eventName, courseId), href)\n);\n\n// Upgrade Events\n/**\n * There are currently multiple tracked api events for the upgrade event, with different targets.\n * Goal here is to split out the tracked events for easier testing.\n */\nexport const upgradeButtonClicked = (courseId) => createEventTracker(\n  eventNames.upgradeButtonClicked,\n  { category: categories.upgrade, label: courseId },\n);\nexport const upgradeButtonClickedUpsell = (courseId) => createEventTracker(\n  eventNames.upgradeButtonClickedUpsell,\n  { ...upsellOptions, courseId },\n);\n\n// Non-Link events\nexport const courseOptionsDropdownClicked = (courseId) => (\n  module.courseEventTracker(eventNames.courseOptionsDropdownClicked, courseId)\n);\n\n// Link events (track and then change page location)\nexport const courseImageClicked = (...args) => (\n  module.courseLinkTracker(eventNames.courseImageClicked)(...args));\nexport const courseTitleClicked = (...args) => (\n  module.courseLinkTracker(eventNames.courseTitleClicked)(...args));\nexport const enterCourseClicked = (...args) => (\n  module.courseLinkTracker(eventNames.enterCourseClicked)(...args));\nexport const upgradeClicked = (courseId, href) => createLinkTracker(\n  () => {\n    module.upgradeButtonClicked(courseId)();\n    module.upgradeButtonClickedUpsell(courseId)();\n    api.logUpgrade({ courseId });\n  },\n  href,\n);\n\nexport default {\n  courseImageClicked,\n  courseOptionsDropdownClicked,\n  courseTitleClicked,\n  enterCourseClicked,\n  upgradeClicked,\n};\n","import { createEventTracker, createLinkTracker } from 'data/services/segment/utils';\nimport { creditPurchaseUrl } from 'data/services/lms/urls';\nimport { categories, eventNames } from '../constants';\n\n/**\n * Create event tracker for purchase credit event\n * @param {string} fromCourseRun - course run identifier for leaving course\n * @return {callback} - callback that triggers the event tracker\n */\nexport const purchase = (courseId) => createLinkTracker(\n  createEventTracker(eventNames.purchaseCredit, {\n    label: courseId,\n    category: categories.credit,\n  }),\n  creditPurchaseUrl(courseId),\n);\n\nexport default {\n  purchase,\n};\n","import { createEventTracker } from 'data/services/segment/utils';\nimport { categories, eventNames } from '../constants';\n\nexport const engagementOptions = {\n  category: categories.userEngagement,\n  displayName: 'v1',\n};\n\n/**\n * Creates callback which sends segment event for unenroll with reason event\n * @param {string} courseId - course run identifier\n * @param {string} reason - unenroll reason\n * @param {bool} isEntitlement - is the course an entitlement course?\n * @return {callback} - callback that will send the appropriate segment message.\n */\nexport const unenrollReason = (courseId, reason, isEntitlement) => createEventTracker(\n  isEntitlement ? eventNames.entitlementUnenrollReason : eventNames.unenrollReason,\n  { reason, course_id: courseId, ...engagementOptions },\n);\n\nexport default {\n  unenrollReason,\n};\n","import { createEventTracker } from 'data/services/segment/utils';\nimport { categories, eventNames } from '../constants';\n\nexport const filterClicked = () => createEventTracker(\n  eventNames.filterClicked,\n  { category: categories.filter },\n)();\n\nexport const filterOptionSelected = (filters = []) => createEventTracker(\n  eventNames.filterOptionSelected,\n  {\n    category: categories.filter,\n    // make sure to clone before sorting\n    filters: [...filters].sort(),\n  },\n)();\n\nexport default {\n  filterClicked,\n  filterOptionSelected,\n};\n","import course from './trackers/course';\nimport credit from './trackers/credit';\nimport engagement from './trackers/engagement';\nimport enterpriseDashboard from './trackers/enterpriseDashboard';\nimport entitlements from './trackers/entitlements';\nimport socialShare from './trackers/socialShare';\nimport findCourses from './trackers/findCourses';\nimport filter from './trackers/filter';\n\nexport default {\n  course,\n  credit,\n  engagement,\n  enterpriseDashboard,\n  entitlements,\n  socialShare,\n  findCourses,\n  filter,\n};\n","import { createEventTracker, createLinkTracker } from 'data/services/segment/utils';\nimport { eventNames } from '../constants';\n\n/** Enterprise Dashboard events**/\n/**\n * Creates tracking callback for Enterprise Dashboard Modal open event\n * @param {string} enterpriseUUID - enterprise identifier\n * @return {func} - Callback that tracks the event when fired.\n */\nexport const modalOpened = (enterpriseUUID) => () => createEventTracker(\n  eventNames.enterpriseDashboardModalOpened,\n  { enterpriseUUID },\n);\n\n/**\n * Creates tracking callback for Enterprise Dashboard Modal Call-to-action click-event\n * @param {string} enterpriseUUID - enterprise identifier\n * @param {string} href - destination url\n * @return {func} - Callback that tracks the event when fired and then loads the passed href.\n */\nexport const modalCTAClicked = (enterpriseUUID, href) => createLinkTracker(\n  createEventTracker(\n    eventNames.enterpriseDashboardModalCTAClicked,\n    { enterpriseUUID },\n  ),\n  href,\n);\n\n/**\n * Creates tracking callback for Enterprise Dashboard Modal close event\n * @param {string} enterpriseUUID - enterprise identifier\n * @param {string} source - close event soruce (\"Cancel button\" vs \"Escape\")\n * @return {func} - Callback that tracks the event when fired.\n */\nexport const modalClosed = (enterpriseUUID, source) => createEventTracker(\n  eventNames.enterpriseDashboardModalClosed,\n  { enterpriseUUID, source },\n);\n\nexport default {\n  modalOpened,\n  modalCTAClicked,\n  modalClosed,\n};\n","import { createEventTracker } from 'data/services/segment/utils';\nimport { eventNames } from '../constants';\n\n/**\n * Create event tracker for leave entitlement session event\n * @param {string} fromCourseRun - course run identifier for leaving course\n * @return {callback} - callback that triggers the event tracker\n */\nexport const leaveSession = (fromCourseRun) => (\n  createEventTracker(eventNames.leaveSession, { fromCourseRun, toCourseRun: null })\n);\n/**\n * Create event tracker for new entitlement session event\n * @param {string} toCourseRun - course run identifier for new course\n * @return {callback} - callback that triggers the event tracker\n */\nexport const newSession = (toCourseRun) => (\n  createEventTracker(eventNames.newSession, { fromCourseRun: null, toCourseRun })\n);\n/**\n * Create event tracker for switch entitlement session event\n * @param {string} fromCourseRun - course run identifier for leaving course\n * @param {string} toCourseRun - course run identifier for new course\n * @return {callback} - callback that triggers the event tracker\n */\nexport const switchSession = (fromCourseRun, toCourseRun) => (\n  createEventTracker(eventNames.switchSession, { fromCourseRun, toCourseRun })\n);\n\nexport default {\n  leaveSession,\n  newSession,\n  switchSession,\n};\n","import api from 'data/services/lms/api';\n\n/**\n * Track Social Share event click.\n * @param {string} courseId - course run identifier\n * @param {string} site - sharing destination ('facebook', 'twitter')\n * @return {func} - Callback that tracks the event when fired.\n */\nexport const shareClicked = (courseId, site) => () => api.logShare({ courseId, site });\n\nexport default shareClicked;\n","import { createLinkTracker, createEventTracker } from 'data/services/segment/utils';\nimport { categories, eventNames } from '../constants';\n\nexport const findCoursesClicked = (href, args = {}) => createLinkTracker(\n  createEventTracker(eventNames.findCoursesClicked, {\n    pageName: 'learner_home',\n    linkType: 'button',\n    linkCategory: categories.searchButton,\n    ...args,\n  }),\n  href,\n);\n\nexport default {\n  findCoursesClicked,\n};\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  showModal: (val) => React.useState(val), // eslint-disable-line\n});\n\nconst { modalOpened, modalClosed, modalCTAClicked } = track.enterpriseDashboard;\n\nexport const useEnterpriseDashboardHook = () => {\n  const [showModal, setShowModal] = module.state.showModal(true);\n  const dashboard = reduxHooks.useEnterpriseDashboardData();\n\n  const trackOpened = modalOpened(dashboard.enterpriseUUID);\n  const trackClose = modalClosed(dashboard.enterpriseUUID, 'Cancel button');\n  const trackEscape = modalClosed(dashboard.enterpriseUUID, 'Escape');\n\n  const handleCTAClick = modalCTAClicked(dashboard.enterpriseUUID, dashboard.url);\n  const handleClose = () => {\n    trackClose();\n    setShowModal(false);\n  };\n  const handleEscape = () => {\n    trackEscape();\n    setShowModal(false);\n  };\n\n  React.useEffect(() => {\n    if (dashboard && dashboard.label) {\n      trackOpened();\n    }\n  }, []); // eslint-disable-line\n\n  return {\n    showModal,\n    handleCTAClick,\n    handleClose,\n    handleEscape,\n    dashboard,\n  };\n};\n\nexport default useEnterpriseDashboardHook;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  ModalDialog, ActionRow, Button,\n} from '@edx/paragon';\n\nimport messages from './messages';\nimport useEnterpriseDashboardHook from './hooks';\n\nexport const EnterpriseDashboardModal = () => {\n  const { formatMessage } = useIntl();\n  const {\n    showModal,\n    handleClose,\n    handleCTAClick,\n    handleEscape,\n    dashboard,\n  } = useEnterpriseDashboardHook();\n  if (!dashboard || !dashboard.label) {\n    return null;\n  }\n  return (\n    <ModalDialog\n      isOpen={showModal}\n      onClose={handleEscape}\n      hasCloseButton={false}\n      title=\"\"\n    >\n      <div\n        className=\"bg-white p-3 rounded shadow\"\n        style={{ textAlign: 'start' }}\n      >\n        <h4>\n          {formatMessage(messages.enterpriseDialogHeader, {\n            label: dashboard.label,\n          })}\n        </h4>\n        <p>\n          {formatMessage(messages.enterpriseDialogBody, {\n            label: dashboard.label,\n          })}\n        </p>\n        <ActionRow>\n          <Button variant=\"tertiary\" onClick={handleClose}>\n            {formatMessage(messages.enterpriseDialogDismissButton)}\n          </Button>\n          <Button type=\"a\" href={dashboard.url} onClick={handleCTAClick}>\n            {formatMessage(messages.enterpriseDialogConfirmButton)}\n          </Button>\n        </ActionRow>\n      </div>\n    </ModalDialog>\n  );\n};\n\nEnterpriseDashboardModal.propTypes = {};\n\nexport default EnterpriseDashboardModal;\n","/* eslint-disable import/prefer-default-export */\nexport const LEAVE_OPTION = 'leave';\n","/* eslint-disable quotes */\nimport { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  changeOrLeaveHeader: {\n    id: 'learner-dash.selectSession.changeOrLeaveHeader',\n    description: 'Header for session that allow leave option',\n    defaultMessage: 'Change or leave session?',\n  },\n  selectSessionHeader: {\n    id: 'learner-dash.selectSession.selectSessionHeader',\n    description: 'Header for unfulfilled entitlement',\n    defaultMessage: 'Select a session',\n  },\n  changeOrLeaveHint: {\n    id: 'learner-dash.selectSession.changeOrLeaveHint',\n    description: 'Hint for session that allow leave option',\n    defaultMessage: 'When you change to a different session any course progress or grades from your current session will be lost.',\n  },\n  selectSessionHint: {\n    id: 'learner-dash.selectSession.selectSessionHint',\n    description: 'Hint for session that does not allow leave option',\n    defaultMessage: 'Remember, if you change your mind you have 2 weeks to unenroll and select a different session.',\n  },\n  leaveSessionOption: {\n    id: 'learner-dash.selectSession.leaveSessionOption',\n    description: 'Radio option for leave session',\n    defaultMessage: 'Leave session',\n  },\n  nevermind: {\n    id: 'learner-dash.selectSession.nevermind',\n    description: 'Cancel action for select session modal',\n    defaultMessage: 'Never mind',\n  },\n  confirmSession: {\n    id: 'learner-dash.selectSession.confirmSession',\n    description: 'Confirm action for select session modal',\n    defaultMessage: 'Confirm Session',\n  },\n});\n\nexport default messages;\n","import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { StrictDict } from 'utils';\n\nimport track from 'tracking';\n\nimport { reduxHooks, apiHooks } from 'hooks';\n\nimport { LEAVE_OPTION } from './constants';\nimport messages from './messages';\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  selectedSession: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useSelectSessionModalData = () => {\n  const { formatMessage } = useIntl();\n\n  const selectedCardId = reduxHooks.useSelectSessionModalData().cardId;\n  const {\n    availableSessions,\n    isFulfilled,\n  } = reduxHooks.useCardEntitlementData(selectedCardId);\n  const { title: courseTitle } = reduxHooks.useCardCourseData(selectedCardId);\n  const { courseId } = reduxHooks.useCardCourseRunData(selectedCardId) || {};\n  const { isEnrolled } = reduxHooks.useCardEnrollmentData(selectedCardId);\n  const leaveEntitlementSession = apiHooks.useLeaveEntitlementSession(selectedCardId);\n  const switchEntitlementEnrollment = apiHooks.useSwitchEntitlementEnrollment(selectedCardId);\n  const newEntitlementEnrollment = apiHooks.useNewEntitlementEnrollment(selectedCardId);\n\n  const [selectedSession, setSelectedSession] = module.state.selectedSession(courseId || null);\n\n  let header;\n  let hint;\n  if (isFulfilled) {\n    header = formatMessage(messages.changeOrLeaveHeader);\n    hint = formatMessage(messages.changeOrLeaveHint);\n  } else {\n    header = formatMessage(messages.selectSessionHeader, { courseTitle });\n    hint = formatMessage(messages.selectSessionHint);\n  }\n  const closeSessionModal = reduxHooks.useUpdateSelectSessionModalCallback(null);\n\n  const trackNewSession = track.entitlements.newSession(selectedSession);\n  const trackSwitchSession = track.entitlements.switchSession(selectedCardId, selectedSession);\n  const trackLeaveSession = track.entitlements.leaveSession(selectedCardId);\n\n  const handleSelection = ({ target: { value } }) => setSelectedSession(value);\n  const handleSubmit = () => {\n    if (selectedSession === LEAVE_OPTION) {\n      trackLeaveSession();\n      leaveEntitlementSession();\n    } else if (isEnrolled) {\n      trackSwitchSession();\n      switchEntitlementEnrollment(selectedSession);\n    } else {\n      trackNewSession();\n      newEntitlementEnrollment(selectedSession);\n    }\n    closeSessionModal();\n  };\n\n  return {\n    showModal: selectedCardId != null,\n    closeSessionModal,\n    showLeaveOption: isFulfilled,\n    availableSessions,\n    hint,\n    header,\n    selectedSession,\n    handleSelection,\n    handleSubmit,\n  };\n};\n\nexport default useSelectSessionModalData;\n","import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  Button,\n  Form,\n  ModalDialog,\n} from '@edx/paragon';\n\nimport { utilHooks } from 'hooks';\nimport { nullMethod, dateFormatter } from 'utils';\n\nimport useSelectSessionModalData from './hooks';\nimport { LEAVE_OPTION } from './constants';\nimport messages from './messages';\n\nexport const SelectSessionModal = () => {\n  const {\n    availableSessions,\n    showModal,\n    closeSessionModal,\n    showLeaveOption,\n    handleSelection,\n    handleSubmit,\n    header,\n    hint,\n    selectedSession,\n  } = useSelectSessionModalData();\n\n  const formatDate = utilHooks.useFormatDate();\n  const { formatMessage } = useIntl();\n\n  return (\n    <ModalDialog\n      isOpen={showModal}\n      onClose={nullMethod}\n      hasCloseButton={false}\n      isFullscreenOnMobile\n      size=\"md\"\n      className=\"p-4 px-4.5\"\n      title={header}\n    >\n      <h3>{header}</h3>\n      <Form.Group className=\"pt-3\">\n        <Form.Label>{hint}</Form.Label>\n        <Form.RadioSet\n          name=\"sessions\"\n          className=\"pt-3 pb-4\"\n          onChange={handleSelection}\n          value={selectedSession}\n        >\n          {availableSessions?.map((session) => (\n            <Form.Radio key={session.courseId} value={session.courseId}>\n              {dateFormatter(formatDate, session.startDate)} - {dateFormatter(formatDate, session.endDate)}\n            </Form.Radio>\n          ))}\n          {showLeaveOption && (\n            <Form.Radio value={LEAVE_OPTION}>\n              {formatMessage(messages.leaveSessionOption)}\n            </Form.Radio>\n          )}\n        </Form.RadioSet>\n      </Form.Group>\n      <ActionRow>\n        <Button variant=\"tertiary\" onClick={closeSessionModal}>\n          {formatMessage(messages.nevermind)}\n        </Button>\n        <Button onClick={handleSubmit}>{formatMessage(messages.confirmSession)}</Button>\n      </ActionRow>\n    </ModalDialog>\n  );\n};\n\nexport default SelectSessionModal;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  inProgress: {\n    id: 'learner-dash.courseListFilters.inProgress',\n    description: 'in-progress filter checkbox label for course list filters',\n    defaultMessage: 'In-Progress',\n  },\n  notStarted: {\n    id: 'learner-dash.courseListFilters.notStarted',\n    description: 'Not-Started filter checkbox label for course list filters',\n    defaultMessage: 'Not Started',\n  },\n  done: {\n    id: 'learner-dash.courseListFilters.done',\n    description: 'done filter checkbox label for course list filters',\n    defaultMessage: 'Done',\n  },\n  notEnrolled: {\n    id: 'learner-dash.courseListFilters.notEnrolled',\n    description: 'not-enrolled filter checkbox label for course list filters',\n    defaultMessage: 'Not Enrolled',\n  },\n  upgraded: {\n    id: 'learner-dash.courseListFilters.upgraded',\n    description: 'upgraded filter checkbox label for course list filters',\n    defaultMessage: 'Upgraded',\n  },\n  clearAll: {\n    id: 'learner-dash.courseListFilters.clearAll',\n    description: 'clear all filters button text',\n    defaultMessage: 'Clear all',\n  },\n  sort: {\n    id: 'learner-dash.courseListFilters.sort',\n    description: 'Sort radio form heading',\n    defaultMessage: 'Sort',\n  },\n  sortLastEnrolled: {\n    id: 'learner-dash.courseListFilters.sortLastEnrolled',\n    description: 'Last enrolled sort option text',\n    defaultMessage: 'Last enrolled',\n  },\n  sortTitle: {\n    id: 'learner-dash.courseListFilters.sortTitle',\n    description: 'Title sort option text',\n    defaultMessage: 'Title (A-Z)',\n  },\n  refine: {\n    id: 'learner-dash.courseListFilters.refine',\n    description: 'Filter button container text',\n    defaultMessage: 'Refine',\n  },\n  CourseStatus: {\n    id: 'learner-dash.courseListFilters.CourseStatus',\n    description: 'Course Status',\n    defaultMessage: 'Course Status',\n  }\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { Form } from '@edx/paragon';\n\nimport messages from '../messages';\n\nexport const Checkbox = ({ filterKey }) => {\n  const { formatMessage } = useIntl();\n  return (\n    <Form.Checkbox className=\"py-2\" value={filterKey}>\n      {formatMessage(messages[filterKey])}\n    </Form.Checkbox>\n  );\n};\nCheckbox.propTypes = {\n  filterKey: PropTypes.string.isRequired,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport messages from './../messages';\nimport PropTypes from 'prop-types';\n\nimport { FilterKeys } from 'data/constants/app';\nimport { Form } from '@edx/paragon';\nimport Checkbox from './Checkbox';\n\nexport const filterOrder = [\n  FilterKeys.inProgress,\n  FilterKeys.notStarted,\n  FilterKeys.done,\n  FilterKeys.notEnrolled,\n  FilterKeys.upgraded,\n];\n\nconst FilterForm = ({\n  filters,\n  handleFilterChange,\n}) => {\n  const { formatMessage } = useIntl(); // Move the hook inside the component\n\n  return (\n    <Form.Group>\n      <div className=\"filter-form-heading mb-1\">{formatMessage(messages.CourseStatus)}</div>\n      <Form.CheckboxSet\n        name=\"course-status-filters\"\n        onChange={handleFilterChange}\n        value={filters}\n      >\n        {filterOrder.map(filterKey => (\n          <Checkbox filterKey={filterKey} key={filterKey} />\n        ))}\n      </Form.CheckboxSet>\n    </Form.Group>\n  );\n};\n\nFilterForm.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { SortKeys } from 'data/constants/app';\n\nimport { Form } from '@edx/paragon';\n\nimport messages from '../messages';\n\nexport const SortForm = ({\n  handleSortChange,\n  sortBy,\n}) => {\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <div className=\"filter-form-heading mb-1\">{formatMessage(messages.sort)}</div>\n      <Form.RadioSet\n        name=\"sort\"\n        onChange={handleSortChange}\n        value={sortBy}\n      >\n        <Form.Radio className=\"py-2\" value={SortKeys.enrolled}>\n          {formatMessage(messages.sortLastEnrolled)}\n        </Form.Radio>\n        <Form.Radio className=\"py-2\" value={SortKeys.title}>\n          {formatMessage(messages.sortTitle)}\n        </Form.Radio>\n      </Form.RadioSet>\n    </>\n  );\n};\nSortForm.propTypes = {\n  handleSortChange: PropTypes.func.isRequired,\n  sortBy: PropTypes.string.isRequired,\n};\n\nexport default SortForm;\n","import React from 'react';\nimport { useToggle } from '@edx/paragon';\n\nimport { StrictDict } from 'utils';\nimport track from 'tracking';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  target: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useCourseFilterControlsData = ({\n  filters,\n  setFilters,\n  setSortBy,\n}) => {\n  const [isOpen, toggleOpen, toggleClose] = useToggle(false);\n  const [target, setTarget] = module.state.target(null);\n  const handleFilterChange = ({ target: { checked, value } }) => {\n    const update = checked ? setFilters.add : setFilters.remove;\n    update(value);\n  };\n  const handleSortChange = ({ target: { value } }) => {\n    setSortBy(value);\n  };\n\n  const open = () => {\n    track.filter.filterClicked();\n    toggleOpen();\n  };\n\n  const close = () => {\n    track.filter.filterOptionSelected(filters);\n    toggleClose();\n  };\n\n  return {\n    isOpen,\n    open,\n    close,\n    target,\n    setTarget,\n    handleFilterChange,\n    handleSortChange,\n  };\n};\n\nexport default useCourseFilterControlsData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport {\n  Button,\n  Form,\n  Icon,\n  ModalPopup,\n  Sheet,\n  breakpoints,\n  useWindowSize,\n  ModalCloseButton,\n} from '@edx/paragon';\nimport { Close, Tune } from '@edx/paragon/icons';\n\nimport { reduxHooks } from 'hooks';\n\nimport FilterForm from './components/FilterForm';\nimport SortForm from './components/SortForm';\nimport useCourseFilterControlsData from './hooks';\nimport messages from './messages';\n\nimport './index.scss';\n\nexport const CourseFilterControls = ({\n  sortBy,\n  setSortBy,\n  filters,\n  setFilters,\n}) => {\n  const { formatMessage } = useIntl();\n  const hasCourses = reduxHooks.useHasCourses();\n  const {\n    isOpen,\n    open,\n    close,\n    target,\n    setTarget,\n    handleFilterChange,\n    handleSortChange,\n  } = useCourseFilterControlsData({\n    filters,\n    setFilters,\n    setSortBy,\n  });\n  const { width } = useWindowSize();\n  const isMobile = width < breakpoints.small.minWidth;\n\n  return (\n    <div id=\"course-filter-controls\">\n      <Button\n        ref={setTarget}\n        variant=\"outline-primary\"\n        iconBefore={Tune}\n        onClick={open}\n        disabled={!hasCourses}\n      >\n        {formatMessage(messages.refine)}\n      </Button>\n      <Form>\n        {isMobile\n          ? (\n            <Sheet\n              className=\"w-75\"\n              position=\"left\"\n              show={isOpen}\n              onClose={close}\n            >\n              <div className=\"p-1 mr-3\">\n                <b>{formatMessage(messages.refine)}</b>\n              </div>\n              <hr />\n              <div className=\"filter-form-row\">\n                <FilterForm {...{ filters, handleFilterChange }} />\n              </div>\n              <div className=\"filter-form-row text-left m-1\">\n                <SortForm {...{ sortBy, handleSortChange }} />\n              </div>\n              <div className=\"pgn__modal-close-container\">\n                <ModalCloseButton variant=\"tertiary\" onClick={close}>\n                  <Icon src={Close} />\n                </ModalCloseButton>\n              </div>\n            </Sheet>\n          ) : (\n            <ModalPopup\n              positionRef={target}\n              isOpen={isOpen}\n              onClose={close}\n              placement=\"bottom-end\"\n            >\n              <div\n                id=\"course-filter-controls-card\"\n                className=\"bg-white p-3 rounded shadow d-flex flex-row\"\n              >\n                <div className=\"filter-form-col\">\n                  <FilterForm {...{ filters, handleFilterChange }} />\n                </div>\n                <hr className=\"h-100 bg-primary-200 mx-3 my-0\" />\n                <div className=\"filter-form-col text-left m-1\">\n                  <SortForm {...{ sortBy, handleSortChange }} />\n                </div>\n              </div>\n            </ModalPopup>\n          )}\n      </Form>\n    </div>\n  );\n};\nCourseFilterControls.propTypes = {\n  sortBy: PropTypes.string.isRequired,\n  setSortBy: PropTypes.func.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setFilters: PropTypes.shape({\n    add: PropTypes.func.isRequired,\n    remove: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default CourseFilterControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { Button, Chip } from '@edx/paragon';\nimport { CloseSmall } from '@edx/paragon/icons';\n\nimport messages from './messages';\nimport './index.scss';\n\nexport const ActiveCourseFilters = ({\n  filters,\n  setFilters,\n  handleRemoveFilter,\n}) => {\n  const { formatMessage } = useIntl();\n  return (\n    <div id=\"course-list-active-filters\">\n      {filters.map(filter => (\n        <Chip\n          key={filter}\n          iconAfter={CloseSmall}\n          onClick={handleRemoveFilter(filter)}\n        >\n          {formatMessage(messages[filter])}\n        </Chip>\n      ))}\n      <Button variant=\"link\" onClick={setFilters.clear}>\n        {formatMessage(messages.clearAll)}\n      </Button>\n    </div>\n  );\n};\nActiveCourseFilters.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setFilters: PropTypes.shape({\n    remove: PropTypes.func,\n    clear: PropTypes.func,\n  }).isRequired,\n  handleRemoveFilter: PropTypes.func.isRequired,\n};\n\nexport default ActiveCourseFilters;\n","import { useIntl } from '@edx/frontend-platform/i18n';\nimport { useWindowSize, breakpoints } from '@edx/paragon';\nimport { reduxHooks } from 'hooks';\n\nexport const useIsCollapsed = () => {\n  const { width } = useWindowSize();\n  return width < breakpoints.small.maxWidth;\n};\n\nexport const useCardData = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { title, bannerImgSrc } = reduxHooks.useCardCourseData(cardId);\n  const { isEnrolled } = reduxHooks.useCardEnrollmentData(cardId);\n\n  return {\n    isEnrolled,\n    title,\n    bannerImgSrc,\n    formatMessage,\n  };\n};\n\nexport default useCardData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nexport const Banner = ({\n  children, variant, icon, className,\n}) => (\n  <Alert variant={variant} className={className} icon={icon}>\n    {children}\n  </Alert>\n);\nBanner.defaultProps = {\n  icon: Info,\n  variant: 'info',\n  className: 'mb-0',\n};\nBanner.propTypes = {\n  variant: PropTypes.string,\n  icon: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Banner;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  auditAccessExpired: {\n    id: 'learner-dash.courseCard.banners.auditAccessExpired',\n    description: 'Audit access expiration banner message',\n    defaultMessage: 'Your audit access to this course has expired.',\n  },\n  upgradeToAccess: {\n    id: 'learner-dash.courseCard.banners.upgradeToAccess',\n    description: 'Upgrade prompt for audit-expired learners that can still upgrade',\n    defaultMessage: 'Upgrade now to access your course again.',\n  },\n  findAnotherCourse: {\n    id: 'learner-dash.courseCard.banners.findAnotherCourse',\n    description: 'Action prompt taking learners to course exploration',\n    defaultMessage: 'Find another course',\n  },\n  upgradeDeadlinePassed: {\n    id: 'learner-dash.courseCard.banners.upgradeDeadlinePassed',\n    description: 'Audit upgrade deadline passed banner message',\n    defaultMessage: 'Your upgrade deadline for this course has passed.  To upgrade, enroll in a session that is farther in the future.',\n  },\n  exploreCourseDetails: {\n    id: 'learner-dash.courseCard.banners.exploreCourseDetails',\n    description: 'Action prompt taking learners to course details page',\n    defaultMessage: 'Explore course details.',\n  },\n  certRestricted: {\n    id: 'learner-dash.courseCard.banners.certificateRestricted',\n    description: 'Restricted certificate warning message',\n    defaultMessage: 'Your Certificate of Achievement is being held pending confirmation that the issuance of your Certificate is in compliance with strict U.S. embargoes on Iran, Cuba, Syria, and Sudan.  If you think our system has mistakenly identified you as being connected with one of those countries, please let us know by contacting {supportEmail}.',\n  },\n  certRestrictedNoEmail: {\n    id: 'learner-dash.courseCard.banners.certificateRestrictedNoEmail',\n    description: 'Restricted certificate warning message',\n    defaultMessage: 'Your Certificate of Achievement is being held pending confirmation that the issuance of your Certificate is in compliance with strict U.S. embargoes on Iran, Cuba, Syria, and Sudan.  If you think our system has mistakenly identified you as being connected with one of those countries, please let us know.',\n  },\n  certRefundContactBilling: {\n    id: 'learner-dash.courseCard.banners.certificateRefundContactBilling',\n    description: 'Message to learners to contact billing for certificate refunds',\n    defaultMessage: 'If you would like a refund on your Certificate of Achievement, please contact our billing address {billingEmail}',\n  },\n  certRefundContactBillingNoEmail: {\n    id: 'learner-dash.courseCard.banners.certificateRefundContactBillingNoEmail',\n    description: 'Message to learners to contact billing for certificate refunds',\n    defaultMessage: 'If you would like a refund on your Certificate of Achievement, please contact us.',\n  },\n  passingGrade: {\n    id: 'learner-dash.courseCard.banners.passingGrade',\n    description: 'Message to learners with minimum passing grade for the course',\n    defaultMessage: 'Grade required to pass the course: {minPassingGrade}\\u200f%',\n  },\n  notEligibleForCert: {\n    id: 'learner-dash.courseCard.banners.notEligibleForCert',\n    description: 'Certificate inelligibility message',\n    defaultMessage: 'You are not eligible for a certificate.',\n  },\n  viewGrades: {\n    id: 'learner-dash.courseCard.banners.viewGrades',\n    description: 'Gradses link text',\n    defaultMessage: 'View grades.',\n  },\n  certReady: {\n    id: 'learner-dash.courseCard.banners.certReady',\n    description: 'Certificate ready message',\n    defaultMessage: 'Congratulations.  Your certificate is ready.',\n  },\n  viewCertificate: {\n    id: 'learner-dash.courseCard.banners.viewCertificate',\n    description: 'Certificate link text',\n    defaultMessage: 'View Certificate.',\n  },\n  certMinGrade: {\n    id: 'learner-dash.courseCard.banners.certMinGrade',\n    description: 'Passing grade requirement message',\n    defaultMessage: 'Grade required for a certificate: {minPassingGrade}\\u200f%',\n  },\n  downloadCertificate: {\n    id: 'learner-dash.courseCard.banners.downloadCertificate',\n    description: 'Certificate download link text',\n    defaultMessage: 'Download Certificate.',\n  },\n  gradeAndCertReadyAfter: {\n    id: 'learner-dash.courseCard.banners.gradseAndCertReadyAfter',\n    description: 'Grade and certificate availability date message',\n    defaultMessage: 'Your grade and certificate will be ready after {availableDate}.',\n  },\n  entitlementUnavailable: {\n    id: 'learner-dash.courseCard.banners.entitlementUnavailable',\n    description: 'Entitlement course message when no sessions are available',\n    defaultMessage: 'There are no sessions available at the moment.  The course team will create new sessions soon.  If no sessions appear, please contact {emailLink} for information.',\n  },\n  entitlementExpiringSoon: {\n    id: 'learner-dash.courseCard.banners.entitlementExpiringSoon',\n    description: 'Entitlement course message when the entitlement is expiring soon.',\n    defaultMessage: 'You must {selectSessionButton} by {changeDeadline} to access the course.',\n  },\n  entitlementExpired: {\n    id: 'learner-dash.courseCard.banners.entitlementExpired',\n    description: 'Entitlement course message when the entitlement is expired.',\n    defaultMessage: 'You can no longer change sessions.',\n  },\n  selectSession: {\n    id: 'learner-dash.courseCard.banners.selectSession',\n    description: 'Entitlement session selection link text',\n    defaultMessage: 'select a session',\n  },\n  prerequisitesNotMet: {\n    id: 'learner-dash.courseCard.banners.prerequisitesNotMet',\n    description: 'Message to learners with unmet prerequisites',\n    defaultMessage: 'You can\\'t access this course just yet because you have not met the pre-requisites.',\n  },\n  courseHasNotStarted: {\n    id: 'learner-dash.courseCard.banners.courseHasNotStarted',\n    description: 'Course has not started message',\n    defaultMessage: 'You can\\'t access this course just yet because the course hasn\\'t started yet. The course will start on {startDate}.',\n  },\n});\n\nexport default messages;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { utilHooks, reduxHooks } from 'hooks';\nimport Banner from 'components/Banner';\nimport messages from './messages';\n\nexport const CourseBanner = ({ cardId }) => {\n  const {\n    isVerified,\n    isAuditAccessExpired,\n    canUpgrade,\n    coursewareAccess = {},\n  } = reduxHooks.useCardEnrollmentData(cardId);\n  const courseRun = reduxHooks.useCardCourseRunData(cardId);\n  const { formatMessage } = useIntl();\n  const formatDate = utilHooks.useFormatDate();\n\n  const { hasUnmetPrerequisites, isStaff, isTooEarly } = coursewareAccess;\n\n  if (isVerified) { return null; }\n\n  return (\n    <>\n      {isAuditAccessExpired\n        && (canUpgrade ? (\n          <Banner>\n            {formatMessage(messages.auditAccessExpired)}\n            {'  '}\n            {formatMessage(messages.upgradeToAccess)}\n          </Banner>\n        ) : (\n          <Banner>\n            {formatMessage(messages.auditAccessExpired)}\n            {'  '}\n            <Hyperlink isInline destination=\"\">\n              {formatMessage(messages.findAnotherCourse)}\n            </Hyperlink>\n          </Banner>\n        ))}\n\n      {courseRun.isActive && !canUpgrade && (\n        <Banner>\n          {formatMessage(messages.upgradeDeadlinePassed)}\n          {'  '}\n          <Hyperlink isInline destination={courseRun.marketingUrl || ''}>\n            {formatMessage(messages.exploreCourseDetails)}\n          </Hyperlink>\n        </Banner>\n      )}\n\n      {(!isStaff && isTooEarly && courseRun.startDate) && (\n        <Banner>\n          {formatMessage(messages.courseHasNotStarted, {\n            startDate: formatDate(courseRun.startDate),\n          })}\n        </Banner>\n      )}\n      {(!isStaff && hasUnmetPrerequisites) && (\n        <Banner>{formatMessage(messages.prerequisitesNotMet)}</Banner>\n      )}\n    </>\n  );\n};\nCourseBanner.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CourseBanner;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MailtoLink, Hyperlink } from '@edx/paragon';\nimport { CheckCircle } from '@edx/paragon/icons';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { utilHooks, reduxHooks } from 'hooks';\nimport Banner from 'components/Banner';\n\nimport messages from './messages';\n\nconst { useFormatDate } = utilHooks;\n\nexport const CertificateBanner = ({ cardId }) => {\n  const certificate = reduxHooks.useCardCertificateData(cardId);\n  const {\n    isAudit,\n    isVerified,\n  } = reduxHooks.useCardEnrollmentData(cardId);\n  const { isPassing } = reduxHooks.useCardGradeData(cardId);\n  const { isArchived } = reduxHooks.useCardCourseRunData(cardId);\n  const { minPassingGrade, progressUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const { supportEmail, billingEmail } = reduxHooks.usePlatformSettingsData();\n  const { formatMessage } = useIntl();\n  const formatDate = useFormatDate();\n\n  const emailLink = address => <MailtoLink to={address}>{address}</MailtoLink>;\n\n  if (certificate.isRestricted) {\n    return (\n      <Banner variant=\"danger\">\n        { supportEmail ? formatMessage(messages.certRestricted, { supportEmail: emailLink(supportEmail) }) : formatMessage(messages.certRestrictedNoEmail)}\n        {isVerified && '  '}\n        {isVerified && (billingEmail ? formatMessage(messages.certRefundContactBilling, { billingEmail: emailLink(billingEmail) }) : formatMessage(messages.certRefundContactBillingNoEmail))}\n      </Banner>\n    );\n  }\n  if (certificate.isDownloadable) {\n    return (\n      <Banner variant=\"success\" icon={CheckCircle}>\n        {formatMessage(messages.certReady)}\n        {certificate.certPreviewUrl && (\n          <>\n            {'  '}\n            <Hyperlink isInline destination={certificate.certPreviewUrl}>\n              {formatMessage(messages.viewCertificate)}\n            </Hyperlink>\n          </>\n        )}\n      </Banner>\n    );\n  }\n  if (!isPassing) {\n    if (isAudit) {\n      return (\n        <Banner>\n          {formatMessage(messages.passingGrade, { minPassingGrade })}\n        </Banner>\n      );\n    }\n    if (isArchived) {\n      return (\n        <Banner variant=\"warning\">\n          {formatMessage(messages.notEligibleForCert)}\n          {'  '}\n          <Hyperlink isInline destination={progressUrl}>{formatMessage(messages.viewGrades)}</Hyperlink>\n        </Banner>\n      );\n    }\n    return (\n      <Banner variant=\"warning\">\n        {formatMessage(messages.certMinGrade, { minPassingGrade })}\n      </Banner>\n    );\n  }\n  if (certificate.isEarnedButUnavailable) {\n    return (\n      <Banner>\n        {formatMessage(\n          messages.gradeAndCertReadyAfter,\n          { availableDate: formatDate(certificate.availableDate) },\n        )}\n      </Banner>\n    );\n  }\n\n  return null;\n};\nCertificateBanner.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CertificateBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Form, FormControl } from '@edx/paragon';\n\nimport useCreditRequestFormData from './hooks';\n\nexport const CreditRequestForm = ({ requestData }) => {\n  const { ref } = useCreditRequestFormData(requestData);\n  if (requestData === null) {\n    return null;\n  }\n  const { parameters, url } = requestData;\n  return (\n    <Form\n      accept-method=\"UTF-8\"\n      action={url}\n      className=\"hidden\"\n      method=\"POST\"\n    >\n      {Object.keys(parameters).map((key) => (\n        <FormControl\n          as=\"textarea\"\n          key={key}\n          name={key}\n          value={parameters[key]}\n        />\n      ))}\n      <Button type=\"submit\" ref={ref} />\n    </Form>\n  );\n};\nCreditRequestForm.defaultProps = {\n  requestData: null,\n};\nCreditRequestForm.propTypes = {\n  requestData: PropTypes.shape({\n    parameters: PropTypes.objectOf(PropTypes.string),\n    url: PropTypes.string,\n  }),\n};\n\nexport default CreditRequestForm;\n","import React from 'react';\n\nexport const useCreditRequestFormData = (requestData) => {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (requestData !== null) {\n      ref.current.click();\n    }\n  }, [requestData]);\n  return { ref };\n};\n\nexport default useCreditRequestFormData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ActionRow, Button } from '@edx/paragon';\nimport CreditRequestForm from './CreditRequestForm';\n\nexport const CreditContent = ({ action, message, requestData }) => (\n  <>\n    <div className=\"message-copy credit-msg\">\n      {message}\n    </div>\n    {action && (\n      <ActionRow className=\"mt-4\">\n        <Button\n          as=\"a\"\n          disabled={!!action.disabled}\n          // make sure href is not undefined. Paragon won't disable the button if href is undefined.\n          href={action.href || '#'}\n          rel=\"noopener\"\n          target=\"_blank\"\n          variant=\"outline-primary\"\n          className=\"border-gray-400\"\n          onClick={action.onClick}\n        >\n          {action.message}\n        </Button>\n      </ActionRow>\n    )}\n    <CreditRequestForm requestData={requestData} />\n  </>\n);\nCreditContent.defaultProps = {\n  action: null,\n  requestData: null,\n};\nCreditContent.propTypes = {\n  action: PropTypes.shape({\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n    message: PropTypes.string,\n    disabled: PropTypes.bool,\n  }),\n  message: PropTypes.node.isRequired,\n  requestData: PropTypes.shape({\n    url: PropTypes.string,\n    parameters: PropTypes.objectOf(PropTypes.string),\n  }),\n};\n\nexport default CreditContent;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { reduxHooks } from 'hooks';\nimport { Hyperlink } from '@edx/paragon';\n\nexport const ProviderLink = ({ cardId }) => {\n  const credit = reduxHooks.useCardCreditData(cardId);\n  return (\n    <Hyperlink\n      href={credit.providerStatusUrl}\n      rel=\"noopener\"\n      target=\"_blank\"\n    >\n      {credit.providerName}\n    </Hyperlink>\n  );\n};\nProviderLink.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default ProviderLink;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  approved: {\n    id: 'learner-dash.courseCard.banners.credit.approved',\n    description: '',\n    defaultMessage: '{congratulations} {providerName} has approved your request for course credit. To see your course credit, visit the {linkToProviderSite} website.',\n  },\n  congratulations: {\n    id: 'learner-dash.courseCard.banners.credit.congratulations',\n    description: '',\n    defaultMessage: 'Congratulations!',\n  },\n  eligible: {\n    id: 'learner-dash.courseCard.banners.credit.eligible',\n    description: '',\n    defaultMessage: 'You have completed this course and are eligible to purchase course credit.  Select {getCredit} to get started.',\n  },\n  eligibleFromProvider: {\n    id: 'learner-dash.courseCard.banners.credit.eligibleFromProvider',\n    description: '',\n    defaultMessage: 'You are now eligible for credit from {providerName}. Congratulations!',\n  },\n  getCredit: {\n    id: 'learner-dash.courseCard.banners.credit.getCredit',\n    description: '',\n    defaultMessage: 'Get Credit',\n  },\n  mustRequest: {\n    id: 'learner-dash.courseCard.banners.credit.mustRequest',\n    description: '',\n    defaultMessage: 'Thank you for your payment.  To receive course credit, you must request credit at the {linkToProviderSite} website.  Select {requestCredit} to get started',\n  },\n  received: {\n    id: 'learner-dash.courseCard.banners.credit.received',\n    description: '',\n    defaultMessage: '{providerName} has received your course credit request.  We will update you when credit processing is complete.',\n  },\n  rejected: {\n    id: 'learner-dash.courseCard.banners.credit.rejected',\n    description: '',\n    defaultMessage: '{providerName} did not approve your request for course credit.  For more information, contact {linkToProviderSite} directly.',\n  },\n  requestCredit: {\n    id: 'learner-dash.courseCard.banners.credit.requestCredit',\n    description: '',\n    defaultMessage: 'Request Credit',\n  },\n  viewCredit: {\n    id: 'learner-dash.courseCard.banners.credit.viewCredit',\n    description: '',\n    defaultMessage: 'View Credit',\n  },\n  viewDetails: {\n    id: 'learner-dash.courseCard.banners.credit.viewDetails',\n    description: '',\n    defaultMessage: 'View Details',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport CreditContent from './components/CreditContent';\nimport ProviderLink from './components/ProviderLink';\n\nimport messages from './messages';\n\nexport const ApprovedContent = ({ cardId }) => {\n  const { providerStatusUrl: href, providerName } = reduxHooks.useCardCreditData(cardId);\n  const { isMasquerading } = reduxHooks.useMasqueradeData();\n  const { formatMessage } = useIntl();\n  return (\n    <CreditContent\n      action={{ href, message: formatMessage(messages.viewCredit), disabled: isMasquerading }}\n      message={formatMessage(\n        messages.approved,\n        {\n          congratulations: <b>{formatMessage(messages.congratulations)}</b>,\n          linkToProviderSite: <ProviderLink cardId={cardId} />,\n          providerName,\n        },\n      )}\n    />\n  );\n};\nApprovedContent.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default ApprovedContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport track from 'tracking';\n\nimport CreditContent from './components/CreditContent';\nimport messages from './messages';\n\nexport const EligibleContent = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { providerName } = reduxHooks.useCardCreditData(cardId);\n  const { courseId } = reduxHooks.useCardCourseRunData(cardId);\n\n  const onClick = track.credit.purchase(courseId);\n  const getCredit = formatMessage(messages.getCredit);\n  const message = providerName\n    ? formatMessage(messages.eligibleFromProvider, { providerName })\n    : formatMessage(messages.eligible, { getCredit: (<b>{getCredit}</b>) });\n\n  return (\n    <CreditContent\n      action={{ onClick, message: getCredit }}\n      message={message}\n    />\n  );\n};\nEligibleContent.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default EligibleContent;\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport { apiHooks } from 'hooks';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  creditRequestData: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useCreditRequestData = (cardId) => {\n  const [requestData, setRequestData] = module.state.creditRequestData(null);\n  const createCreditApiRequest = apiHooks.useCreateCreditRequest(cardId);\n  const createCreditRequest = (e) => {\n    e.preventDefault();\n    createCreditApiRequest()\n      .then((request) => {\n        setRequestData(request.data);\n      });\n  };\n  return { requestData, createCreditRequest };\n};\n\nexport default {\n  useCreditRequestData,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport CreditContent from './components/CreditContent';\nimport ProviderLink from './components/ProviderLink';\nimport hooks from './hooks';\n\nimport messages from './messages';\n\nexport const MustRequestContent = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { requestData, createCreditRequest } = hooks.useCreditRequestData(cardId);\n  const { isMasquerading } = reduxHooks.useMasqueradeData();\n  return (\n    <CreditContent\n      action={{\n        message: formatMessage(messages.requestCredit),\n        onClick: createCreditRequest,\n        disabled: isMasquerading,\n      }}\n      message={formatMessage(messages.mustRequest, {\n        linkToProviderSite: (<ProviderLink cardId={cardId} />),\n        requestCredit: (<b>{formatMessage(messages.requestCredit)}</b>),\n      })}\n      requestData={requestData}\n    />\n  );\n};\nMustRequestContent.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default MustRequestContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport CreditContent from './components/CreditContent';\nimport messages from './messages';\n\nexport const PendingContent = ({ cardId }) => {\n  const { providerStatusUrl: href, providerName } = reduxHooks.useCardCreditData(cardId);\n  const { isMasquerading } = reduxHooks.useMasqueradeData();\n  const { formatMessage } = useIntl();\n  return (\n    <CreditContent\n      action={{\n        href,\n        message: formatMessage(messages.viewDetails),\n        disabled: isMasquerading,\n      }}\n      message={formatMessage(messages.received, { providerName })}\n    />\n  );\n};\nPendingContent.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default PendingContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport CreditContent from './components/CreditContent';\nimport ProviderLink from './components/ProviderLink';\nimport messages from './messages';\n\nexport const RejectedContent = ({ cardId }) => {\n  const credit = reduxHooks.useCardCreditData(cardId);\n  const { formatMessage } = useIntl();\n  return (\n    <CreditContent\n      message={formatMessage(messages.rejected, {\n        providerName: credit.providerName,\n        linkToProviderSite: (<ProviderLink cardId={cardId} />),\n      })}\n    />\n  );\n};\nRejectedContent.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default RejectedContent;\n","import { StrictDict } from 'utils';\n\nimport { reduxHooks } from 'hooks';\n\nimport ApprovedContent from './views/ApprovedContent';\nimport EligibleContent from './views/EligibleContent';\nimport MustRequestContent from './views/MustRequestContent';\nimport PendingContent from './views/PendingContent';\nimport RejectedContent from './views/RejectedContent';\n\nexport const statusComponents = StrictDict({\n  pending: PendingContent,\n  approved: ApprovedContent,\n  rejected: RejectedContent,\n});\n\nexport const useCreditBannerData = (cardId) => {\n  const credit = reduxHooks.useCardCreditData(cardId);\n  const { supportEmail } = reduxHooks.usePlatformSettingsData();\n  if (!credit.isEligible) { return null; }\n\n  const { error, purchased, requestStatus } = credit;\n  let ContentComponent = EligibleContent;\n  if (purchased) {\n    if (requestStatus == null) {\n      ContentComponent = MustRequestContent;\n    } else if (Object.keys(statusComponents).includes(requestStatus)) {\n      ContentComponent = statusComponents[requestStatus];\n    }\n    // Current behavior is to show Elligible State if unknown request status is returned\n  }\n  return {\n    ContentComponent,\n    error,\n    supportEmail,\n  };\n};\n\nexport default {\n  useCreditBannerData,\n};\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  error: {\n    id: 'learner-dash.courseCard.banners.credit.error',\n    description: '',\n    defaultMessage: 'An error occurred with this transaction.  For help, contact {supportEmailLink}.',\n  },\n  errorNoEmail: {\n    id: 'learner-dash.courseCard.banners.credit.errorNoEmail',\n    description: '',\n    defaultMessage: 'An error occurred with this transaction.',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport Banner from 'components/Banner';\n\nimport { MailtoLink } from '@edx/paragon';\nimport hooks from './hooks';\nimport messages from './messages';\n\nexport const CreditBanner = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const hookData = hooks.useCreditBannerData(cardId);\n  if (hookData === null) {\n    return null;\n  }\n\n  const { ContentComponent, error, supportEmail } = hookData;\n  const supportEmailLink = (<MailtoLink to={supportEmail}>{supportEmail}</MailtoLink>);\n  return (\n    <Banner {...(error && { variant: 'danger' })}>\n      {error && (\n        <p className=\"credit-error-msg\">\n          {supportEmail ? formatMessage(messages.error, { supportEmailLink }) : formatMessage(messages.errorNoEmail)}\n        </p>\n      )}\n      <ContentComponent cardId={cardId} />\n    </Banner>\n  );\n};\nCreditBanner.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CreditBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Button, MailtoLink } from '@edx/paragon';\n\nimport { utilHooks, reduxHooks } from 'hooks';\n\nimport Banner from 'components/Banner';\nimport messages from './messages';\n\nexport const EntitlementBanner = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const {\n    isEntitlement,\n    hasSessions,\n    isFulfilled,\n    changeDeadline,\n    showExpirationWarning,\n    isExpired,\n  } = reduxHooks.useCardEntitlementData(cardId);\n  const { supportEmail } = reduxHooks.usePlatformSettingsData();\n  const openSessionModal = reduxHooks.useUpdateSelectSessionModalCallback(cardId);\n  const formatDate = utilHooks.useFormatDate();\n\n  if (!isEntitlement) {\n    return null;\n  }\n\n  if (!hasSessions && !isFulfilled) {\n    return (\n      <Banner variant=\"warning\">\n        {formatMessage(messages.entitlementUnavailable, {\n          emailLink: supportEmail && <MailtoLink to={supportEmail}>{supportEmail}</MailtoLink>,\n        })}\n      </Banner>\n    );\n  }\n  if (showExpirationWarning) {\n    return (\n      <Banner>\n        {formatMessage(messages.entitlementExpiringSoon, {\n          changeDeadline: formatDate(changeDeadline),\n          selectSessionButton: (\n            <Button variant=\"link\" size=\"inline\" className=\"m-0 p-0\" onClick={openSessionModal}>\n              {formatMessage(messages.selectSession)}\n            </Button>\n          ),\n        })}\n      </Banner>\n    );\n  }\n  if (isExpired) {\n    return (\n      <Banner>\n        {formatMessage(messages.entitlementExpired)}\n      </Banner>\n    );\n  }\n  return null;\n};\nEntitlementBanner.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default EntitlementBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ProgramsList = ({ programs }) => (\n  <ul className=\"related-programs-list-container\">\n    {programs.map((program) => (\n      <li key={program.programUrl} className=\"my-2\">\n        <a href={program.programUrl}>{program.title}</a>\n      </li>\n    ))}\n  </ul>\n);\n\nProgramsList.propTypes = {\n  programs: PropTypes.arrayOf(\n    PropTypes.shape({\n      programUrl: PropTypes.string,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default ProgramsList;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  relatedPrograms: {\n    id: 'learner-dash.courseCard.banners.relatedPrograms',\n    description: 'title for related programs banner',\n    defaultMessage: 'Related Programs: ',\n  },\n  expandBanner: {\n    id: 'learner-dash.courseCard.banners.expandBanner',\n    description: 'expand banner button text',\n    defaultMessage: 'More',\n  },\n  expandBannerAlt: {\n    id: 'learner-dash.courseCard.banners.expandBannerAlt',\n    description: 'expand banner button alt text',\n    defaultMessage: 'Expand banner icon',\n  },\n  collapseBanner: {\n    id: 'learner-dash.courseCard.banners.collapseBanner',\n    description: 'collapse banner button text',\n    defaultMessage: 'Less',\n  },\n  collapseBannerAlt: {\n    id: 'learner-dash.courseCard.banners.collapseBannerAlt',\n    description: 'collapse banner button alt text',\n    defaultMessage: 'Collapse banner icon',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Program } from '@edx/paragon/icons';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport Banner from 'components/Banner';\n\nimport ProgramList from './ProgramsList';\nimport messages from './messages';\n\nexport const RelatedProgramsBanner = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n\n  const programData = reduxHooks.useCardRelatedProgramsData(cardId);\n\n  return (\n    programData?.length > 0 && (\n      <Banner\n        icon={Program}\n        className=\"bg-white border-top border-bottom mb-0 related-programs-banner\"\n      >\n        <span className=\"font-weight-bolder\">{formatMessage(messages.relatedPrograms)}</span>\n        <ProgramList programs={programData.list} />\n      </Banner>\n    )\n  );\n};\nRelatedProgramsBanner.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default RelatedProgramsBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { reduxHooks } from 'hooks';\n\nimport CourseBanner from './CourseBanner';\nimport CertificateBanner from './CertificateBanner';\nimport CreditBanner from './CreditBanner';\nimport EntitlementBanner from './EntitlementBanner';\nimport RelatedProgramsBanner from './RelatedProgramsBanner';\n\nexport const CourseCardBanners = ({ cardId }) => {\n  const { isEnrolled } = reduxHooks.useCardEnrollmentData(cardId);\n  return (\n    <div className=\"course-card-banners\" data-testid=\"CourseCardBanners\">\n      <RelatedProgramsBanner cardId={cardId} />\n      <CourseBanner cardId={cardId} />\n      <EntitlementBanner cardId={cardId} />\n      {isEnrolled && <CertificateBanner cardId={cardId} />}\n      {isEnrolled && <CreditBanner cardId={cardId} />}\n    </div>\n  );\n};\nCourseCardBanners.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CourseCardBanners;\n","export default __webpack_public_path__ + \"917f898551500732cc35a2f63da125f0.png\";","import { reduxHooks } from 'hooks';\n\nexport const useActionDisabledState = (cardId) => {\n  const { isMasquerading } = reduxHooks.useMasqueradeData();\n  const {\n    canUpgrade, hasAccess, isAudit, isAuditAccessExpired,\n  } = reduxHooks.useCardEnrollmentData(cardId);\n  const {\n    isEntitlement, isFulfilled, canChange, hasSessions,\n  } = reduxHooks.useCardEntitlementData(cardId);\n\n  const { resumeUrl, homeUrl, upgradeUrl } = reduxHooks.useCardCourseRunData(cardId);\n\n  const disableBeginCourse = !homeUrl || (isMasquerading || !hasAccess || (isAudit && isAuditAccessExpired));\n  const disableResumeCourse = !resumeUrl || (isMasquerading || !hasAccess || (isAudit && isAuditAccessExpired));\n  const disableViewCourse = !hasAccess || (isAudit && isAuditAccessExpired);\n  const disableSelectSession = !isEntitlement || isMasquerading || !hasAccess || (!canChange || !hasSessions);\n  const disableUpgradeCourse = !upgradeUrl || (isMasquerading && !canUpgrade);\n\n  const disableCourseTitle = (isEntitlement && !isFulfilled) || disableViewCourse;\n\n  return {\n    disableBeginCourse,\n    disableResumeCourse,\n    disableViewCourse,\n    disableUpgradeCourse,\n    disableSelectSession,\n    disableCourseTitle,\n  };\n};\n\nexport default useActionDisabledState;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  bannerAlt: {\n    id: 'learner-dash.courseCard.bannerAlt',\n    description: 'Course card banner alt-text',\n    defaultMessage: 'Course thumbnail',\n  },\n  verifiedBanner: {\n    id: 'learner-dash.courseCard.verifiedBanner',\n    description: 'Course card verified banner',\n    defaultMessage: 'Verified',\n  },\n  verifiedHoverDescription: {\n    id: 'learner-dash.courseCard.verifiedHoverDescription',\n    description: 'Course card verified hover description',\n    defaultMessage: 'You\\'re enrolled as a verified student',\n  },\n  verifiedBannerRibbonAlt: {\n    id: 'learner-dash.courseCard.verifiedBannerRibbonAlt',\n    description: 'Course card verified banner ribbon alt-text',\n    defaultMessage: 'ID Verified Ribbon/Badge',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { Badge } from '@edx/paragon';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\nimport verifiedRibbon from 'assets/verified-ribbon.png';\nimport useActionDisabledState from './hooks';\n\nimport messages from '../messages';\n\nconst { courseImageClicked } = track.course;\n\nexport const CourseCardImage = ({ cardId, orientation }) => {\n  const { formatMessage } = useIntl();\n  const { bannerImgSrc } = reduxHooks.useCardCourseData(cardId);\n  const { homeUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const { isVerified } = reduxHooks.useCardEnrollmentData(cardId);\n  const { disableCourseTitle } = useActionDisabledState(cardId);\n  const handleImageClicked = reduxHooks.useTrackCourseEvent(courseImageClicked, cardId, homeUrl);\n  const wrapperClassName = `pgn__card-wrapper-image-cap overflow-visible ${orientation}`;\n  const image = (\n    <>\n      <img\n        className=\"pgn__card-image-cap show\"\n        src={bannerImgSrc}\n        alt={formatMessage(messages.bannerAlt)}\n      />\n      {\n        isVerified && (\n          <span\n            className=\"course-card-verify-ribbon-container\"\n            title={formatMessage(messages.verifiedHoverDescription)}\n          >\n            <Badge as=\"div\" variant=\"success\" className=\"w-100\">\n              {formatMessage(messages.verifiedBanner)}\n            </Badge>\n            <img src={verifiedRibbon} alt={formatMessage(messages.verifiedBannerRibbonAlt)} />\n          </span>\n        )\n      }\n    </>\n  );\n  return disableCourseTitle\n    ? (<div className={wrapperClassName}>{image}</div>)\n    : (\n      <a\n        className={wrapperClassName}\n        href={homeUrl}\n        onClick={handleImageClicked}\n        tabIndex=\"-1\"\n      >\n        {image}\n      </a>\n    );\n};\nCourseCardImage.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  orientation: PropTypes.string.isRequired,\n};\n\nCourseCardImage.defaultProps = {};\n\nexport default CourseCardImage;\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport { reduxHooks, apiHooks } from 'hooks';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  toggle: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useEmailData = ({\n  closeModal,\n  cardId,\n}) => {\n  const { hasOptedOutOfEmail } = reduxHooks.useCardEnrollmentData(cardId);\n  const [isOptedOut, setIsOptedOut] = module.state.toggle(hasOptedOutOfEmail);\n  const updateEmailSettings = apiHooks.useUpdateEmailSettings(cardId);\n  const onToggle = () => setIsOptedOut(!isOptedOut);\n  const save = () => {\n    updateEmailSettings(!isOptedOut);\n    closeModal();\n  };\n\n  return {\n    onToggle,\n    save,\n    isOptedOut,\n  };\n};\n\nexport default useEmailData;\n","/* eslint-disable quotes */\nimport { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  header: {\n    id: 'learner-dash.emailSettings.header',\n    description: 'Header for email settings modal',\n    defaultMessage: 'Receive course emails?',\n  },\n  emailsOff: {\n    id: 'learner-dash.emailSettings.emailsOff',\n    description: 'Toggle text for email settings modal when email is disabled',\n    defaultMessage: 'Course emails are off',\n  },\n  emailsOn: {\n    id: 'learner-dash.emailSettings.emailsOn',\n    description: 'Toggle text for email settings modal when email is enabled',\n    defaultMessage: 'Course emails are on',\n  },\n  description: {\n    id: 'learner-dash.emailSettings.description',\n    description: 'Description for email settings modal',\n    defaultMessage: 'Course emails include important information about your course from instructors.',\n  },\n  nevermind: {\n    id: 'learner-dash.emailSettings.nevermind',\n    description: 'Cancel action for email settings modal',\n    defaultMessage: 'Never mind',\n  },\n  save: {\n    id: 'learner-dash.emailSettings.save',\n    description: 'Save action for email settings modal',\n    defaultMessage: 'Save settings',\n  },\n\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  Button,\n  Form,\n  ModalDialog,\n} from '@edx/paragon';\n\nimport { nullMethod } from 'utils';\n\nimport useEmailData from './hooks';\nimport messages from './messages';\n\nexport const EmailSettingsModal = ({\n  closeModal,\n  show,\n  cardId,\n}) => {\n  const {\n    isOptedOut,\n    onToggle,\n    save,\n  } = useEmailData({ closeModal, cardId });\n  const { formatMessage } = useIntl();\n\n  return (\n    <ModalDialog\n      isOpen={show}\n      onClose={nullMethod}\n      hasCloseButton={false}\n      title=\"\"\n    >\n      <div className=\"bg-white p-3 rounded shadow\" style={{ textAlign: 'start' }}>\n        <h4>{formatMessage(messages.header)}</h4>\n        <Form.Switch checked={!isOptedOut} onChange={onToggle}>\n          {formatMessage(isOptedOut ? messages.emailsOff : messages.emailsOn)}\n        </Form.Switch>\n        <p>{formatMessage(messages.description)}</p>\n        <ActionRow>\n          <Button variant=\"tertiary\" onClick={closeModal}>\n            {formatMessage(messages.nevermind)}\n          </Button>\n          <Button onClick={save}>{formatMessage(messages.save)}</Button>\n        </ActionRow>\n      </div>\n    </ModalDialog>\n  );\n};\nEmailSettingsModal.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n};\n\nexport default EmailSettingsModal;\n","/* eslint-disable quotes */\nimport { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  confirmHeader: {\n    id: 'learner-dash.unenrollConfirm.confirm.header',\n    description: 'Header for confirm unenroll modal',\n    defaultMessage: 'Unenroll from course?',\n  },\n  confirmCancel: {\n    id: 'learner-dash.unenrollConfirm.confirm.cancel',\n    description: 'Cancel action for confirm unenroll modal',\n    defaultMessage: 'Never mind',\n  },\n  confirmUnenroll: {\n    id: 'learner-dash.unenrollConfirm.confirm.unenroll',\n    description: 'Confirm action for confirm unenroll modal',\n    defaultMessage: 'Unenroll',\n  },\n  reasonHeading: {\n    id: 'learner-dash.unenrollConfirm.confirm.reason.heading',\n    description: 'Heading for unenroll reason modal',\n    defaultMessage: `What's your main reason for unenrolling?`,\n  },\n  reasonSkip: {\n    id: 'learner-dash.unenrollConfirm.confirm.reason.skip',\n    description: 'Skip action for unenroll reason modal',\n    defaultMessage: 'Skip survey',\n  },\n  reasonSubmit: {\n    id: 'learner-dash.unenrollConfirm.confirm.reason.submit',\n    description: 'Submit action for unenroll reason modal',\n    defaultMessage: 'Submit reason',\n  },\n  finishHeading: {\n    id: 'learner-dash.unenrollConfirm.confirm.finish.heading',\n    description: 'Heading for unenroll finish modal',\n    defaultMessage: 'You are unenrolled',\n  },\n  finishThanksText: {\n    id: 'learner-dash.unenrollConfirm.confirm.finish.thanks-text',\n    description: 'Thank you message on unenroll modal for providing a reason',\n    defaultMessage: 'Thank you for sharing your reason for unenrolling.  ',\n  },\n  finishText: {\n    id: 'learner-dash.unenrollConfirm.confirm.finish.text',\n    description: 'Text for unenroll finish modal',\n    defaultMessage: 'This course will be removed from your dashboard.',\n  },\n  finishReturn: {\n    id: 'learner-dash.unenrollConfirm.confirm.finish.return',\n    description: 'Return action for unenroll finish modal',\n    defaultMessage: 'Return to dashboard',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  Button,\n} from '@edx/paragon';\n\nimport messages from './messages';\n\nexport const ConfirmPane = ({\n  handleClose,\n  handleConfirm,\n}) => {\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <h4>{formatMessage(messages.confirmHeader)}</h4>\n      <ActionRow>\n        <Button variant=\"tertiary\" onClick={handleClose}>\n          {formatMessage(messages.confirmCancel)}\n        </Button>\n        <Button onClick={handleConfirm}>\n          {formatMessage(messages.confirmUnenroll)}\n        </Button>\n      </ActionRow>\n    </>\n  );\n};\nConfirmPane.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n};\n\nexport default ConfirmPane;\n","/* eslint-disable quotes */\nimport { StrictDict } from 'utils';\n\nexport const reasonKeys = StrictDict({\n  prereqs: 'prereqs',\n  difficulty: 'difficulty',\n  goals: 'goals',\n  broken: 'broken',\n  time: 'time',\n  browse: 'browse',\n  support: 'support',\n  quality: 'quality',\n  easy: 'easy',\n  custom: 'custom',\n});\n\nexport const order = [\n  reasonKeys.prereqs,\n  reasonKeys.difficulty,\n  reasonKeys.goals,\n  reasonKeys.broken,\n  reasonKeys.time,\n  reasonKeys.browse,\n  reasonKeys.support,\n  reasonKeys.quality,\n  reasonKeys.easy,\n];\n\nconst messages = StrictDict({\n  [reasonKeys.prereqs]: {\n    id: 'learner-dash.unenrollConfirm.reasons.prereqs',\n    description: 'Unenroll reason option - missing prerequisites',\n    defaultMessage: `I don't have the academic or language prerequisites`,\n  },\n  [reasonKeys.difficulty]: {\n    id: 'learner-dash.unenrollConfirm.reasons.difficulty',\n    description: 'Unenroll reason option - material is too hard',\n    defaultMessage: 'The course material was too hard',\n  },\n  [reasonKeys.goals]: {\n    id: 'learner-dash.unenrollConfirm.reasons.goals',\n    description: 'Unenroll reason option - goals-related',\n    defaultMessage: `This won't help me reach my goals`,\n  },\n  [reasonKeys.broken]: {\n    id: 'learner-dash.unenrollConfirm.reasons.broken',\n    description: 'Unenroll reason option - something broken',\n    defaultMessage: 'Something was broken',\n  },\n  [reasonKeys.time]: {\n    id: 'learner-dash.unenrollConfirm.reasons.time',\n    description: 'Unenroll reason option - time-related',\n    defaultMessage: `I don't have the time`,\n  },\n  [reasonKeys.browse]: {\n    id: 'learner-dash.unenrollConfirm.reasons.browse',\n    description: 'Unenroll reason option - wanted to browse',\n    defaultMessage: 'I just wanted to browse the material',\n  },\n  [reasonKeys.support]: {\n    id: 'learner-dash.unenrollConfirm.reasons.support',\n    description: 'Unenroll reason option - lacking support',\n    defaultMessage: `I don't have enough support`,\n  },\n  [reasonKeys.quality]: {\n    id: 'learner-dash.unenrollConfirm.reasons.quality',\n    description: 'Unenroll reason option - quality-related',\n    defaultMessage: 'I am not happy with the quality of the content',\n  },\n  [reasonKeys.easy]: {\n    id: 'learner-dash.unenrollConfirm.reasons.easy',\n    description: 'Unenroll reason option - too easy',\n    defaultMessage: 'The course material was too easy',\n  },\n  customPlaceholder: {\n    id: 'learner-dash.unenrollConfirm.reasons.custom-placeholder',\n    description: 'Unenroll custom reason option placeholder text',\n    defaultMessage: 'Other',\n  },\n});\n\nexport default {\n  messages,\n  order,\n  reasonKeys,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  Button,\n  Form,\n} from '@edx/paragon';\n\nimport constants from '../constants';\nimport messages from './messages';\n\nexport const ReasonPane = ({\n  reason,\n}) => {\n  const { formatMessage } = useIntl();\n  const option = (key) => (\n    <Form.Radio key={key} value={key}>\n      {formatMessage(constants.messages[key])}\n    </Form.Radio>\n  );\n  return (\n    <>\n      <h4>{formatMessage(messages.reasonHeading)}</h4>\n      <Form.RadioSet\n        name=\"unenrollReason\"\n        onChange={reason.selectOption}\n        value={reason.selected}\n      >\n        {constants.order.map(option)}\n        <Form.Radio value={constants.reasonKeys.custom}>\n          <Form.Control\n            {...reason.customOption}\n            placeholder={formatMessage(constants.messages.customPlaceholder)}\n          />\n        </Form.Radio>\n      </Form.RadioSet>\n      <ActionRow>\n        <Button variant=\"tertiary\" onClick={reason.handleSkip}>\n          {formatMessage(messages.reasonSkip)}\n        </Button>\n        <Button disabled={!reason.hasReason} onClick={reason.handleSubmit}>\n          {formatMessage(messages.reasonSubmit)}\n        </Button>\n      </ActionRow>\n    </>\n  );\n};\nReasonPane.propTypes = {\n  reason: PropTypes.shape({\n    value: PropTypes.string,\n    handleSkip: PropTypes.func,\n    hasReason: PropTypes.bool,\n    selectOption: PropTypes.func,\n    customOption: PropTypes.shape({\n      value: PropTypes.string,\n      onChange: PropTypes.func,\n    }),\n    selected: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default ReasonPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  Button,\n} from '@edx/paragon';\n\nimport messages from './messages';\n\nexport const FinishedPane = ({\n  gaveReason,\n  handleClose,\n}) => {\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <h4>{formatMessage(messages.finishHeading)}</h4>\n      <p>\n        {gaveReason && formatMessage(messages.finishThanksText)}\n        {formatMessage(messages.finishText)}\n      </p>\n      <ActionRow>\n        <Button onClick={handleClose}>{formatMessage(messages.finishReturn)}</Button>\n      </ActionRow>\n    </>\n  );\n};\nFinishedPane.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  gaveReason: PropTypes.bool.isRequired,\n};\n\nexport default FinishedPane;\n","import React from 'react';\n\nimport {\n  apiHooks,\n  reduxHooks,\n  utilHooks,\n} from 'hooks';\nimport { StrictDict } from 'utils';\nimport track from 'tracking';\n\nimport * as module from './reasons';\n\nexport const state = StrictDict({\n  customOption: (val) => React.useState(val), // eslint-disable-line\n  isSkipped: (val) => React.useState(val), // eslint-disable-line\n  selectedReason: (val) => React.useState(val), // eslint-disable-line\n  isSubmitted: (val) => React.useState(val), //eslint-disable-line\n});\n\nexport const useUnenrollReasons = ({\n  cardId,\n}) => {\n  // The selected option element from the menu\n  const [selectedReason, setSelectedReason] = module.state.selectedReason(null);\n  // Custom option element entry value\n  const [customOption, setCustomOption] = module.state.customOption('');\n\n  // Did the user choose to skip selecting a reason?\n  const [isSkipped, setIsSkipped] = module.state.isSkipped(false);\n  // Did the user submit an unenrollment reason\n  const [isSubmitted, setIsSubmitted] = module.state.isSubmitted(false);\n\n  const { isEntitlement } = reduxHooks.useCardEntitlementData(cardId);\n\n  const submittedReason = selectedReason === 'custom' ? customOption : selectedReason;\n  const hasReason = ![null, ''].includes(submittedReason);\n\n  const handleTrackReasons = reduxHooks.useTrackCourseEvent(\n    track.engagement.unenrollReason,\n    cardId,\n    submittedReason,\n    isEntitlement,\n  );\n\n  const unenrollFromCourse = apiHooks.useUnenrollFromCourse(cardId);\n\n  const handleClear = () => {\n    setSelectedReason(null);\n    setCustomOption('');\n    setIsSkipped(false);\n    setIsSubmitted(false);\n  };\n\n  const handleSkip = () => {\n    setIsSkipped(true);\n    unenrollFromCourse();\n  };\n\n  const handleSubmit = (e) => {\n    handleTrackReasons(e);\n    setIsSubmitted(true);\n    unenrollFromCourse();\n  };\n\n  const handleCustomOptionChange = utilHooks.useValueCallback(setCustomOption);\n  const handleSelectOption = utilHooks.useValueCallback(setSelectedReason);\n\n  return {\n    customOption: { value: customOption, onChange: handleCustomOptionChange },\n    handleClear,\n    handleSkip,\n    handleSubmit,\n    hasReason,\n    isSkipped,\n    isSubmitted,\n    selectOption: handleSelectOption,\n    submittedReason,\n  };\n};\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport { apiHooks } from 'hooks';\n\nimport { useUnenrollReasons } from './reasons';\nimport * as module from '.';\n\nexport const state = StrictDict({\n  confirmed: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const modalStates = StrictDict({\n  confirm: 'confirm',\n  reason: 'reason',\n  finished: 'finished',\n});\n\nexport const useUnenrollData = ({ closeModal, cardId }) => {\n  const [isConfirmed, setIsConfirmed] = module.state.confirmed(false);\n  const confirm = () => setIsConfirmed(true);\n  const reason = useUnenrollReasons({ cardId });\n  const refreshList = apiHooks.useInitializeApp();\n\n  let modalState;\n  if (isConfirmed) {\n    modalState = (reason.isSubmitted || reason.isSkipped)\n      ? modalStates.finished : modalStates.reason;\n  } else {\n    modalState = modalStates.confirm;\n  }\n\n  const close = () => {\n    closeModal();\n    setIsConfirmed(false);\n    reason.handleClear();\n  };\n  const closeAndRefresh = () => {\n    refreshList();\n    close();\n  };\n\n  return {\n    isConfirmed,\n    confirm,\n    reason,\n    close,\n    closeAndRefresh,\n    modalState,\n  };\n};\n\nexport default useUnenrollData;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { ModalDialog } from '@edx/paragon';\n\nimport { nullMethod } from 'utils';\n\nimport ConfirmPane from './components/ConfirmPane';\nimport ReasonPane from './components/ReasonPane';\nimport FinishedPane from './components/FinishedPane';\n\nimport { useUnenrollData, modalStates } from './hooks';\n\nexport const UnenrollConfirmModal = ({\n  closeModal,\n  show,\n  cardId,\n}) => {\n  const {\n    confirm,\n    reason,\n    closeAndRefresh,\n    close,\n    modalState,\n  } = useUnenrollData({ closeModal, cardId });\n  const showFullscreen = modalState === modalStates.reason;\n  return (\n    <ModalDialog\n      isOpen={show}\n      onClose={nullMethod}\n      hasCloseButton={false}\n      isFullscreenOnMobile={showFullscreen}\n      title=\"\"\n    >\n      <div\n        className={classNames('bg-white p-3 rounded', { shadow: !showFullscreen })}\n        style={{ textAlign: 'start' }}\n      >\n        {(modalState === modalStates.confirm) && (\n          <ConfirmPane handleClose={close} handleConfirm={confirm} />\n        )}\n        {(modalState === modalStates.finished) && (\n          <FinishedPane handleClose={closeAndRefresh} gaveReason={!reason.isSkipped} />\n        )}\n        {(modalState === modalStates.reason) && (\n          <ReasonPane reason={reason} />\n        )}\n      </div>\n    </ModalDialog>\n  );\n};\nUnenrollConfirmModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default UnenrollConfirmModal;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  unenroll: {\n    id: 'learner-dash.courseCardMenu.unenroll',\n    description: 'Course unenroll menu button',\n    defaultMessage: 'Unenroll',\n  },\n  dropdownAlt: {\n    id: 'learner-dash.courseCardMenu.dropdownAlt',\n    description: 'Course action menu alt-text',\n    defaultMessage: 'Course actions dropdown',\n  },\n  emailSettings: {\n    id: 'learner-dash.courseCardMenu.emailSettings',\n    description: 'Course email settings menu button',\n    defaultMessage: 'Email settings',\n  },\n  shareToFacebook: {\n    id: 'learner-dash.courseCardMenu.shareToFacebook',\n    description: 'Course Facebook Sharing button',\n    defaultMessage: 'Share to Facebook',\n  },\n  shareToTwitter: {\n    id: 'learner-dash.courseCardMenu.shareToTwitter',\n    description: 'Course Twitter Sharing button',\n    defaultMessage: 'Share to Twitter',\n  },\n  shareQuote: {\n    id: 'learner-dash.courseCardMenu.shareQuote',\n    description: 'Social sharing quote',\n    defaultMessage: 'I\\'m taking {courseName} online with {socialBrand}.  Check it out!',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactShare from 'react-share';\n\nimport { StrictDict } from '@edx/react-unit-test-utils';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Dropdown } from '@edx/paragon';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\n\nimport messages from './messages';\n\nexport const testIds = StrictDict({\n  emailSettingsModalToggle: 'emailSettingsModalToggle',\n});\n\nexport const SocialShareMenu = ({ cardId, emailSettings }) => {\n  const { formatMessage } = useIntl();\n\n  const { courseName } = reduxHooks.useCardCourseData(cardId);\n  const { isEmailEnabled, isExecEd2UCourse } = reduxHooks.useCardEnrollmentData(cardId);\n  const { twitter, facebook } = reduxHooks.useCardSocialSettingsData(cardId);\n  const { isMasquerading } = reduxHooks.useMasqueradeData();\n\n  const handleTwitterShare = reduxHooks.useTrackCourseEvent(track.socialShare, cardId, 'twitter');\n  const handleFacebookShare = reduxHooks.useTrackCourseEvent(track.socialShare, cardId, 'facebook');\n\n  if (isExecEd2UCourse) {\n    return null;\n  }\n\n  return (\n    <>\n      {isEmailEnabled && (\n        <Dropdown.Item\n          disabled={isMasquerading}\n          onClick={emailSettings.show}\n          data-testid={testIds.emailSettingsModalToggle}\n        >\n          {formatMessage(messages.emailSettings)}\n        </Dropdown.Item>\n      )}\n      {facebook.isEnabled && (\n        <ReactShare.FacebookShareButton\n          url={facebook.shareUrl}\n          onClick={handleFacebookShare}\n          title={formatMessage(messages.shareQuote, {\n            courseName,\n            socialBrand: facebook.socialBrand,\n          })}\n          resetButtonStyle={false}\n          className=\"pgn__dropdown-item dropdown-item\"\n        >\n          {formatMessage(messages.shareToFacebook)}\n        </ReactShare.FacebookShareButton>\n      )}\n      {twitter.isEnabled && (\n        <ReactShare.TwitterShareButton\n          url={twitter.shareUrl}\n          onClick={handleTwitterShare}\n          title={formatMessage(messages.shareQuote, {\n            courseName,\n            socialBrand: twitter.socialBrand,\n          })}\n          resetButtonStyle={false}\n          className=\"pgn__dropdown-item dropdown-item\"\n        >\n          {formatMessage(messages.shareToTwitter)}\n        </ReactShare.TwitterShareButton>\n      )}\n    </>\n  );\n};\nSocialShareMenu.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  emailSettings: PropTypes.shape({\n    show: PropTypes.func,\n  }).isRequired,\n};\n\nexport default SocialShareMenu;\n","import { useKeyedState, StrictDict } from '@edx/react-unit-test-utils';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\n\nexport const stateKeys = StrictDict({\n  isUnenrollConfirmVisible: 'isUnenrollConfirmVisible',\n  isEmailSettingsVisible: 'isEmailSettingsVisible',\n});\n\nexport const useUnenrollData = () => {\n  const [isVisible, setIsVisible] = useKeyedState(stateKeys.isUnenrollConfirmVisible, false);\n  return {\n    show: () => setIsVisible(true),\n    hide: () => setIsVisible(false),\n    isVisible,\n  };\n};\n\nexport const useEmailSettings = () => {\n  const [isVisible, setIsVisible] = useKeyedState(stateKeys.isEmailSettingsVisible, false);\n  return {\n    show: () => setIsVisible(true),\n    hide: () => setIsVisible(false),\n    isVisible,\n  };\n};\n\nexport const useHandleToggleDropdown = (cardId) => {\n  const trackCourseEvent = reduxHooks.useTrackCourseEvent(\n    track.course.courseOptionsDropdownClicked,\n    cardId,\n  );\n  return (isOpen) => {\n    if (isOpen) { trackCourseEvent(); }\n  };\n};\n\nexport const useOptionVisibility = (cardId) => {\n  const { isEnrolled, isEmailEnabled } = reduxHooks.useCardEnrollmentData(cardId);\n  const { twitter, facebook } = reduxHooks.useCardSocialSettingsData(cardId);\n  const { isEarned } = reduxHooks.useCardCertificateData(cardId);\n\n  const shouldShowUnenrollItem = isEnrolled && !isEarned;\n  const shouldShowDropdown = (\n    shouldShowUnenrollItem\n    || isEmailEnabled\n    || facebook.isEnabled\n    || twitter.isEnabled\n  );\n\n  return {\n    shouldShowUnenrollItem,\n    shouldShowDropdown,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Dropdown, Icon, IconButton } from '@edx/paragon';\nimport { MoreVert } from '@edx/paragon/icons';\nimport { StrictDict } from '@edx/react-unit-test-utils';\n\nimport EmailSettingsModal from 'containers/EmailSettingsModal';\nimport UnenrollConfirmModal from 'containers/UnenrollConfirmModal';\nimport { reduxHooks } from 'hooks';\nimport SocialShareMenu from './SocialShareMenu';\nimport {\n  useEmailSettings,\n  useUnenrollData,\n  useHandleToggleDropdown,\n  useOptionVisibility,\n} from './hooks';\n\nimport messages from './messages';\n\nexport const testIds = StrictDict({\n  unenrollModalToggle: 'unenrollModalToggle',\n});\n\nexport const CourseCardMenu = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n\n  const emailSettings = useEmailSettings();\n  const unenrollModal = useUnenrollData();\n  const handleToggleDropdown = useHandleToggleDropdown(cardId);\n  const { shouldShowUnenrollItem, shouldShowDropdown } = useOptionVisibility(cardId);\n  const { isMasquerading } = reduxHooks.useMasqueradeData();\n  const { isEmailEnabled } = reduxHooks.useCardEnrollmentData(cardId);\n\n  if (!shouldShowDropdown) {\n    return null;\n  }\n\n  return (\n    <>\n      <Dropdown onToggle={handleToggleDropdown}>\n        <Dropdown.Toggle\n          id={`course-actions-dropdown-${cardId}`}\n          as={IconButton}\n          src={MoreVert}\n          iconAs={Icon}\n          variant=\"primary\"\n          alt={formatMessage(messages.dropdownAlt)}\n        />\n        <Dropdown.Menu>\n          {shouldShowUnenrollItem && (\n            <Dropdown.Item\n              disabled={isMasquerading}\n              onClick={unenrollModal.show}\n              data-testid={testIds.unenrollModalToggle}\n            >\n              {formatMessage(messages.unenroll)}\n            </Dropdown.Item>\n          )}\n          <SocialShareMenu cardId={cardId} emailSettings={emailSettings} />\n        </Dropdown.Menu>\n      </Dropdown>\n      <UnenrollConfirmModal\n        show={unenrollModal.isVisible}\n        closeModal={unenrollModal.hide}\n        cardId={cardId}\n      />\n      {isEmailEnabled && (\n        <EmailSettingsModal\n          show={emailSettings.isVisible}\n          closeModal={emailSettings.hide}\n          cardId={cardId}\n        />\n      )}\n    </>\n  );\n};\nCourseCardMenu.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CourseCardMenu;\n","import React from 'react';\nimport { Button } from '@edx/paragon';\n\nimport useIsCollapsed from './hooks';\n\nexport const ActionButton = (props) => {\n  const isSmall = useIsCollapsed();\n  return (\n    <Button\n      {...props}\n      {...isSmall && { size: 'sm' }}\n    />\n  );\n};\n\nexport default ActionButton;\n","import { useWindowSize, breakpoints } from '@edx/paragon';\n\nexport const useIsCollapsed = () => {\n  const { width } = useWindowSize();\n  return width < breakpoints.medium.maxWidth && width > breakpoints.small.maxWidth;\n};\n\nexport default useIsCollapsed;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  upgrade: {\n    id: 'learner-dash.courseCard.actions.upgrade',\n    description: 'Course card upgrade button text',\n    defaultMessage: 'Upgrade',\n  },\n  beginCourse: {\n    id: 'learner-dash.courseCard.actions.beginCourse',\n    description: 'Course card begin-course button text',\n    defaultMessage: 'Begin Course',\n  },\n  resume: {\n    id: 'learner-dash.courseCard.actions.resume',\n    description: 'Course card resume button text',\n    defaultMessage: 'Resume',\n  },\n  viewCourse: {\n    id: 'learner-dash.courseCard.actions.viewCourse',\n    description: 'Course card view-course button text',\n    defaultMessage: 'View Course',\n  },\n  selectSession: {\n    id: 'learner-dash.courseCard.actions.selectSession',\n    description: 'Course card select-session button text',\n    defaultMessage: 'Select Session',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Locked } from '@edx/paragon/icons';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\nimport useActionDisabledState from '../hooks';\n\nimport ActionButton from './ActionButton';\nimport messages from './messages';\n\nexport const UpgradeButton = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n\n  const { upgradeUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const { disableUpgradeCourse } = useActionDisabledState(cardId);\n\n  const trackUpgradeClick = reduxHooks.useTrackCourseEvent(\n    track.course.upgradeClicked,\n    cardId,\n    upgradeUrl,\n  );\n\n  const enabledProps = {\n    as: 'a',\n    href: upgradeUrl,\n    onClick: trackUpgradeClick,\n  };\n  return (\n    <ActionButton\n      iconBefore={Locked}\n      variant=\"outline-primary\"\n      disabled={disableUpgradeCourse}\n      {...!disableUpgradeCourse && enabledProps}\n    >\n      {formatMessage(messages.upgrade)}\n    </ActionButton>\n  );\n};\nUpgradeButton.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\nexport default UpgradeButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\nimport useActionDisabledState from '../hooks';\nimport ActionButton from './ActionButton';\nimport messages from './messages';\n\nexport const SelectSessionButton = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { disableSelectSession } = useActionDisabledState(cardId);\n  const openSessionModal = reduxHooks.useUpdateSelectSessionModalCallback(cardId);\n  return (\n    <ActionButton\n      disabled={disableSelectSession}\n      onClick={openSessionModal}\n    >\n      {formatMessage(messages.selectSession)}\n    </ActionButton>\n  );\n};\nSelectSessionButton.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\nexport default SelectSessionButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\nimport useActionDisabledState from '../hooks';\nimport ActionButton from './ActionButton';\nimport messages from './messages';\n\nexport const BeginCourseButton = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { homeUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const execEdTrackingParam = reduxHooks.useCardExecEdTrackingParam(cardId);\n  const { disableBeginCourse } = useActionDisabledState(cardId);\n\n  const handleClick = reduxHooks.useTrackCourseEvent(\n    track.course.enterCourseClicked,\n    cardId,\n    homeUrl + execEdTrackingParam,\n  );\n  return (\n    <ActionButton\n      disabled={disableBeginCourse}\n      as=\"a\"\n      href=\"#\"\n      onClick={handleClick}\n    >\n      {formatMessage(messages.beginCourse)}\n    </ActionButton>\n  );\n};\nBeginCourseButton.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\nexport default BeginCourseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\nimport useActionDisabledState from '../hooks';\nimport ActionButton from './ActionButton';\nimport messages from './messages';\n\nexport const ResumeButton = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { resumeUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const execEdTrackingParam = reduxHooks.useCardExecEdTrackingParam(cardId);\n  const { disableResumeCourse } = useActionDisabledState(cardId);\n\n  const handleClick = reduxHooks.useTrackCourseEvent(\n    track.course.enterCourseClicked,\n    cardId,\n    resumeUrl + execEdTrackingParam,\n  );\n  return (\n    <ActionButton\n      disabled={disableResumeCourse}\n      as=\"a\"\n      href=\"#\"\n      onClick={handleClick}\n    >\n      {formatMessage(messages.resume)}\n    </ActionButton>\n  );\n};\nResumeButton.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\nexport default ResumeButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\nimport useActionDisabledState from '../hooks';\nimport ActionButton from './ActionButton';\nimport messages from './messages';\n\nexport const ViewCourseButton = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const { homeUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const { disableViewCourse } = useActionDisabledState(cardId);\n\n  const handleClick = reduxHooks.useTrackCourseEvent(\n    track.course.enterCourseClicked,\n    cardId,\n    homeUrl,\n  );\n  return (\n    <ActionButton\n      disabled={disableViewCourse}\n      as=\"a\"\n      href=\"#\"\n      onClick={handleClick}\n    >\n      {formatMessage(messages.viewCourse)}\n    </ActionButton>\n  );\n};\nViewCourseButton.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\nexport default ViewCourseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ActionRow } from '@edx/paragon';\n\nimport { reduxHooks } from 'hooks';\n\nimport UpgradeButton from './UpgradeButton';\nimport SelectSessionButton from './SelectSessionButton';\nimport BeginCourseButton from './BeginCourseButton';\nimport ResumeButton from './ResumeButton';\nimport ViewCourseButton from './ViewCourseButton';\n\nexport const CourseCardActions = ({ cardId }) => {\n  const { isEntitlement, isFulfilled } = reduxHooks.useCardEntitlementData(cardId);\n  const {\n    isVerified,\n    hasStarted,\n    isExecEd2UCourse,\n  } = reduxHooks.useCardEnrollmentData(cardId);\n  const { isArchived } = reduxHooks.useCardCourseRunData(cardId);\n\n  return (\n    <ActionRow data-test-id=\"CourseCardActions\">\n      {!(isEntitlement || isVerified || isExecEd2UCourse) && <UpgradeButton cardId={cardId} />}\n      {isEntitlement && (isFulfilled\n        ? <ViewCourseButton cardId={cardId} />\n        : <SelectSessionButton cardId={cardId} />\n      )}\n      {(isArchived && !isEntitlement) && (\n        <ViewCourseButton cardId={cardId} />\n      )}\n      {!(isArchived || isEntitlement) && (hasStarted\n        ? <ResumeButton cardId={cardId} />\n        : <BeginCourseButton cardId={cardId} />\n      )}\n    </ActionRow>\n  );\n};\nCourseCardActions.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CourseCardActions;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  accessExpired: {\n    id: 'learner-dash.courseCard.CourseCardDetails.accessExpired',\n    description: 'Course access expiration date message on course card for expired access.',\n    defaultMessage: 'Access expired {accessExpirationDate}',\n  },\n  accessExpires: {\n    id: 'learner-dash.courseCard.CourseCardDetails.accessExpires',\n    description: 'Course access expiration date message on course card.',\n    defaultMessage: 'Access expires {accessExpirationDate}',\n  },\n  courseEnded: {\n    id: 'learner-dash.courseCard.CourseCardDetails.courseEnded',\n    description: 'Course ended message on course card.',\n    defaultMessage: 'Course ended {endDate}',\n  },\n  courseEnds: {\n    id: 'learner-dash.courseCard.CourseCardDetails.courseEnds',\n    description: 'Course ending message on course card.',\n    defaultMessage: 'Course ends {endDate}',\n  },\n  courseStarts: {\n    id: 'learner-dash.courseCard.CourseCardDetails.courseStarts',\n    description: 'Course start date message on course card.',\n    defaultMessage: 'Course starts {startDate}',\n  },\n  unknownProviderName: {\n    id: 'learner-dash.courseCard.CourseCardDetails.unknownProviderName',\n    description: 'Provider name display when name is unknown',\n    defaultMessage: 'Unknown',\n  },\n  changeOrLeaveSessionButton: {\n    id: 'learner-dash.courseCard.CourseCardDetails.changeOrLeaveSessionButton',\n    description: 'Button for trigger change or leave session for entitlement course',\n    defaultMessage: 'Change or leave session',\n  },\n});\n\nexport default messages;\n","import { useIntl } from '@edx/frontend-platform/i18n';\nimport { utilHooks, reduxHooks } from 'hooks';\n\nimport * as hooks from './hooks';\nimport messages from './messages';\n\nexport const useAccessMessage = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const enrollment = reduxHooks.useCardEnrollmentData(cardId);\n  const courseRun = reduxHooks.useCardCourseRunData(cardId);\n  const formatDate = utilHooks.useFormatDate();\n  if (!courseRun.isStarted) {\n    if (!courseRun.startDate) { return null; }\n    const startDate = formatDate(courseRun.startDate);\n    return formatMessage(messages.courseStarts, { startDate });\n  }\n  if (enrollment.isEnrolled) {\n    const { isArchived, endDate } = courseRun;\n    const {\n      accessExpirationDate,\n      isAuditAccessExpired,\n    } = enrollment;\n\n    if (enrollment.isAudit && accessExpirationDate) {\n      return formatMessage(\n        isAuditAccessExpired ? messages.accessExpired : messages.accessExpires,\n        { accessExpirationDate: formatDate(accessExpirationDate) },\n      );\n    }\n    if (!endDate) { return null; }\n    return formatMessage(\n      isArchived ? messages.courseEnded : messages.courseEnds,\n      { endDate: formatDate(endDate) },\n    );\n  }\n  return null;\n};\n\nexport const useCardDetailsData = ({ cardId }) => {\n  const { formatMessage } = useIntl();\n  const providerName = reduxHooks.useCardProviderData(cardId).name;\n  const { courseNumber } = reduxHooks.useCardCourseData(cardId);\n  const {\n    isEntitlement,\n    isFulfilled,\n    canChange,\n  } = reduxHooks.useCardEntitlementData(cardId);\n\n  const openSessionModal = reduxHooks.useUpdateSelectSessionModalCallback(cardId);\n\n  return {\n    providerName: providerName || formatMessage(messages.unknownProviderName),\n    accessMessage: hooks.useAccessMessage({ cardId }),\n    isEntitlement,\n    isFulfilled,\n    canChange,\n    openSessionModal,\n    courseNumber,\n    changeOrLeaveSessionMessage: formatMessage(messages.changeOrLeaveSessionButton),\n  };\n};\n\nexport default useCardDetailsData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@edx/paragon';\n\nimport useCardDetailsData from './hooks';\nimport './index.scss';\n\nexport const CourseCardDetails = ({ cardId }) => {\n  const {\n    providerName,\n    accessMessage,\n    isEntitlement,\n    isFulfilled,\n    canChange,\n    openSessionModal,\n    courseNumber,\n    changeOrLeaveSessionMessage,\n  } = useCardDetailsData({ cardId });\n\n  return (\n    <span className=\"small\" data-testid=\"CourseCardDetails\">\n      {providerName} • {courseNumber}\n      {!(isEntitlement && !isFulfilled) && accessMessage && (\n        ` • ${accessMessage}`\n      )}\n      {isEntitlement && isFulfilled && canChange ? (\n        <>\n          {' • '}\n          <Button variant=\"link\" size=\"inline\" className=\"m-0 p-0\" onClick={openSessionModal}>\n            {changeOrLeaveSessionMessage}\n          </Button>\n        </>\n      ) : null}\n    </span>\n  );\n};\n\nCourseCardDetails.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nCourseCardDetails.defaultProps = {};\n\nexport default CourseCardDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport track from 'tracking';\nimport { reduxHooks } from 'hooks';\nimport useActionDisabledState from './hooks';\n\nconst { courseTitleClicked } = track.course;\n\nexport const CourseCardTitle = ({ cardId }) => {\n  const { courseName } = reduxHooks.useCardCourseData(cardId);\n  const { homeUrl } = reduxHooks.useCardCourseRunData(cardId);\n  const handleTitleClicked = reduxHooks.useTrackCourseEvent(\n    courseTitleClicked,\n    cardId,\n    homeUrl,\n  );\n  const { disableCourseTitle } = useActionDisabledState(cardId);\n  return (\n    <h3>\n      {disableCourseTitle ? (\n        <span className=\"course-card-title\" data-testid=\"CourseCardTitle\">{courseName}</span>\n      ) : (\n        <a\n          href={homeUrl}\n          className=\"course-card-title\"\n          data-testid=\"CourseCardTitle\"\n          onClick={handleTitleClicked}\n        >\n          {courseName}\n        </a>\n      )}\n    </h3>\n  );\n};\n\nCourseCardTitle.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nCourseCardTitle.defaultProps = {};\n\nexport default CourseCardTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '@edx/paragon';\n\nimport { useIsCollapsed } from './hooks';\nimport CourseCardBanners from './components/CourseCardBanners';\nimport CourseCardImage from './components/CourseCardImage';\nimport CourseCardMenu from './components/CourseCardMenu';\nimport CourseCardActions from './components/CourseCardActions';\nimport CourseCardDetails from './components/CourseCardDetails';\nimport CourseCardTitle from './components/CourseCardTitle';\n\nimport './CourseCard.scss';\n\nexport const CourseCard = ({\n  cardId,\n}) => {\n  const isCollapsed = useIsCollapsed();\n  const orientation = isCollapsed ? 'vertical' : 'horizontal';\n  return (\n    <div className=\"mb-4.5 course-card\" id={cardId} data-testid=\"CourseCard\">\n      <Card orientation={orientation}>\n        <div className=\"d-flex flex-column w-100\">\n          <div {...(!isCollapsed && { className: 'd-flex' })}>\n            <CourseCardImage cardId={cardId} orientation=\"horizontal\" />\n            <Card.Body>\n              <Card.Header\n                title={<CourseCardTitle cardId={cardId} />}\n                actions={<CourseCardMenu cardId={cardId} />}\n              />\n              <Card.Section className=\"pt-0\">\n                <CourseCardDetails cardId={cardId} />\n              </Card.Section>\n              <Card.Footer orientation={orientation}>\n                <CourseCardActions cardId={cardId} />\n              </Card.Footer>\n            </Card.Body>\n          </div>\n          <CourseCardBanners cardId={cardId} />\n        </div>\n      </Card>\n    </div>\n  );\n};\nCourseCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n};\n\nexport default CourseCard;\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgEmptyCourse = function SvgEmptyCourse(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 236,\n    height: 157,\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBFAF9\",\n    d: \"M234.6 77.19a35.372 35.372 0 0 0-.133-6.863A35.963 35.963 0 0 0 222.8 48.029c-6.638-5.824-11.306-4.057-19.463-5.508a16.711 16.711 0 0 0-9.742 1.223c.428-12.578-4.521-22.828-14.47-30.553-20.392-15.795-44.324-9.234-60.246 8.726-7.316-13.291-18.504-23.04-34.751-20.272C70.159 4.024 58.492 16.306 56.84 30.364c-5.9-2.21-12.737-1.178-18.437 1.583-5.701 2.761-10.517 7.054-15.03 11.502C17.93 48.803 12.662 54.59 9.64 61.593c-2.05 4.75-2.058 9.61-2.117 14.676 0 .84 1.652 13.564 3.127 12.327-22.353 18.741-.634 53.35 22.656 58.505 10.326 2.29 21.853-.199 29.7-7.305a90.056 90.056 0 0 0 31.572 13.395c15.598 3.321 32.325 4.595 47.702-.457 3.908-1.281 7.33-3.247 11.062-4.934 4.513-2.047 5.236-.25 9.934 1.26 7.891 2.533 16.631 1.715 24.456-.663 8.363-2.541 17.206-8.27 17.818-16.981 8.923.611 18.297-3.299 23.194-10.766 4.897-7.466 4.425-18.365-1.91-24.66 1.158 1.148 6.549-10.781 6.792-11.893.494-2.276.819-4.584.974-6.907Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"M119.712 156.438a121.7 121.7 0 0 1-25.215-2.945 91.08 91.08 0 0 1-31.462-13.292c-7.677 6.819-19.072 9.573-29.81 7.202-14.012-3.1-27.766-17.062-31.38-31.789-2.589-10.486.273-20.06 8.046-26.849-1.586-1.789-2.744-12.061-2.736-12.518v-.353c.059-5.022.118-9.757 2.146-14.47 3.083-7.106 8.459-12.997 13.813-18.24 4.44-4.33 9.33-8.8 15.119-11.59 6.232-3.012 12.87-3.682 18.305-1.76C58.396 15.842 70.152 3.64 84.068 1.262 98.2-1.146 110.258 5.77 118.953 21.27c8.069-8.925 18.106-14.89 28.306-16.738 11.298-2.047 22.361.847 32.088 8.365 9.971 7.725 14.89 17.909 14.632 30.28a17.127 17.127 0 0 1 9.425-1.017c2.053.356 4.124.601 6.203.737 4.816.36 8.614.64 13.437 4.897a36.436 36.436 0 0 1 11.8 22.525c.269 2.303.314 4.626.133 6.937h-.369.369a49.519 49.519 0 0 1-1.003 6.93c-.192.868-4.381 10.492-6.424 12.039 5.826 6.296 6.52 16.936 1.475 24.632-4.72 7.201-13.776 11.472-23.165 10.957-.59 5.788-5.612 13.166-18.054 16.936-6.261 1.9-15.627 3.564-24.669.663a30.867 30.867 0 0 1-3.127-1.215c-2.257-.994-3.392-1.473-6.542-.059-1.157.523-2.308 1.09-3.414 1.635a60.464 60.464 0 0 1-7.663 3.314 72.266 72.266 0 0 1-22.678 3.35Zm-56.706-17.04a.453.453 0 0 1 .206.059 90.125 90.125 0 0 0 31.44 13.343c18.85 4.014 34.397 3.866 47.517-.441a59.36 59.36 0 0 0 7.537-3.277c1.114-.545 2.264-1.112 3.437-1.642 3.444-1.569 4.838-.958 7.146.051.993.451 2.01.847 3.046 1.186 8.85 2.849 18.069 1.215 24.234-.663 12.346-3.748 17.169-11.046 17.568-16.649a.358.358 0 0 1 .123-.254.358.358 0 0 1 .267-.092c9.249.633 18.224-3.528 22.863-10.604 4.978-7.578 4.159-18.211-1.858-24.198a.363.363 0 0 1 0-.523.367.367 0 0 1 .471-.036c1.21-.398 5.9-10.177 6.218-11.664.496-2.248.826-4.53.988-6.826a34.31 34.31 0 0 0-.133-6.797 35.614 35.614 0 0 0-11.549-22.091c-4.632-4.087-8.319-4.367-12.995-4.713a59.563 59.563 0 0 1-6.283-.736 16.34 16.34 0 0 0-9.522 1.2.365.365 0 0 1-.361-.03.363.363 0 0 1-.162-.324c.42-12.378-4.425-22.555-14.33-30.25-9.536-7.364-20.436-10.235-31.506-8.225-10.162 1.9-20.193 7.88-28.209 16.944a.408.408 0 0 1-.317.125.384.384 0 0 1-.288-.191C107.757 2.477 93.907.334 84.194 1.99 70.432 4.333 58.831 16.542 57.209 30.386a.36.36 0 0 1-.494.294c-5.325-2.003-11.94-1.399-18.158 1.547-5.678 2.776-10.538 7.157-14.927 11.487-5.302 5.214-10.62 11.046-13.65 18.027-1.97 4.573-2.029 9.241-2.088 14.182v.354c0 1.31 1.534 11.325 2.545 12.017a.37.37 0 0 1 .494.06.375.375 0 0 1-.044.522C2.944 95.555-.007 104.98 2.56 115.437c3.555 14.477 17.095 28.203 30.828 31.244 10.605 2.349 21.86-.42 29.367-7.216a.368.368 0 0 1 .25-.067Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F0CC00\",\n    d: \"M84.01 113.228c-7.53 0-7.575-1.097-8.976-5.155-2.522-7.319-7.286-12.938-12.257-18.704-18.438-21.355-12.14-54.764 19.234-60.382 21.27-3.837 39.051 7.4 42.694 28.07 1.807 10.258-.479 19.993-6.232 28.616-3.916 5.89-7.146 11.833-8.275 18.895-.737 4.551-.391 7.239-8.392 7.239-2.899 0-5.79.449-8.68.692-3.04.169-6.07.729-9.116.729Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M84.01 113.559c-7.206 0-7.803-.935-9.16-4.919l-.162-.493c-2.552-7.408-7.457-13.086-12.191-18.579-9.684-11.222-12.892-26.119-8.364-38.88 4.19-11.782 14.065-19.669 27.812-22.15 10.863-1.952 21.195 0 29.087 5.485 7.456 5.155 12.316 13.108 14.012 22.887a39.03 39.03 0 0 1-6.283 28.888c-3.4 5.088-7.029 11.288-8.224 18.748-.059.375-.11.736-.162 1.097-.568 3.881-.936 6.451-8.592 6.451a56.233 56.233 0 0 0-5.9.419c-.922.096-1.836.192-2.758.273-1.032.088-2.058.199-3.09.317-1.998.266-4.01.419-6.025.456Zm6.07-85.014a44.734 44.734 0 0 0-8.003.736c-13.474 2.43-23.15 10.125-27.287 21.672-4.425 12.518-1.283 27.128 8.23 38.151 4.78 5.545 9.728 11.274 12.324 18.822l.17.493c1.216 3.572 1.511 4.418 8.459 4.418a53.533 53.533 0 0 0 5.973-.449 110.23 110.23 0 0 1 3.113-.324 84.873 84.873 0 0 0 2.743-.272 57.225 57.225 0 0 1 5.967-.42c7.013 0 7.293-1.944 7.861-5.825.052-.353.104-.736.17-1.104 1.209-7.592 4.89-13.888 8.334-19.043 5.863-8.785 7.935-18.32 6.173-28.35-1.689-9.573-6.439-17.327-13.733-22.408a35.623 35.623 0 0 0-20.495-6.097Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m80.466 122.338 26.909-2.219a2.033 2.033 0 0 0 1.861-2.192l-.392-4.734a2.034 2.034 0 0 0-2.196-1.858l-26.908 2.218a2.034 2.034 0 0 0-1.861 2.193l.391 4.733a2.035 2.035 0 0 0 2.196 1.859Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M80.293 122.72a2.4 2.4 0 0 1-2.397-2.21l-.391-4.727a2.405 2.405 0 0 1 2.213-2.592l26.903-2.209a2.422 2.422 0 0 1 1.755.57c.486.414.789 1.003.841 1.639l.391 4.727a2.402 2.402 0 0 1-1.307 2.337c-.282.143-.589.23-.905.255l-26.904 2.21h-.2Zm26.513-11.017h-.133l-26.904 2.21a1.655 1.655 0 0 0-1.137.582 1.666 1.666 0 0 0-.39 1.214l.391 4.728a1.673 1.673 0 0 0 1.8 1.524l26.904-2.209a1.674 1.674 0 0 0 1.136-.582 1.661 1.661 0 0 0 .39-1.215l-.398-4.727a1.662 1.662 0 0 0-1.659-1.525Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m81.198 131.116 26.908-2.218a2.034 2.034 0 0 0 1.861-2.193l-.391-4.733a2.036 2.036 0 0 0-2.196-1.859l-26.909 2.219a2.033 2.033 0 0 0-1.86 2.192l.39 4.734a2.034 2.034 0 0 0 2.197 1.858Z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M81.023 131.505a2.409 2.409 0 0 1-1.631-.637 2.399 2.399 0 0 1-.766-1.573l-.391-4.734a2.401 2.401 0 0 1 2.212-2.585l26.904-2.209a2.426 2.426 0 0 1 1.757.567 2.416 2.416 0 0 1 .839 1.642l.391 4.735a2.4 2.4 0 0 1-1.307 2.336 2.406 2.406 0 0 1-.905.256l-26.904 2.209h-.2v-.007Zm26.513-11.017h-.14l-26.904 2.209a1.67 1.67 0 0 0-1.52 1.797l.391 4.735a1.663 1.663 0 0 0 1.8 1.517l26.904-2.209a1.664 1.664 0 0 0 1.448-1.151c.066-.209.09-.428.071-.646l-.391-4.735a1.67 1.67 0 0 0-1.659-1.517Z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M82.638 131.011c.273 3.314 5.9 5.552 12.5 5 6.601-.552 11.801-3.682 11.513-6.981l-24.013 1.981Z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M93.11 136.468c-5.973 0-10.575-2.209-10.84-5.427a.375.375 0 0 1 .338-.398l24.013-1.951a.372.372 0 0 1 .399.338c.295 3.564-4.912 6.812-11.852 7.364-.698.049-1.384.074-2.058.074Zm-10.052-5.155c.288 1.311 1.542 2.46 3.584 3.277a19.207 19.207 0 0 0 8.467 1.031c6.158-.508 11.026-3.255 11.18-6.222l-23.23 1.914Z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M85.41 108.751a.375.375 0 0 1-.33-.253.368.368 0 0 1-.016-.145 92.147 92.147 0 0 0-1.084-22.886 25.259 25.259 0 0 1-5.715-2.018 18.126 18.126 0 0 1-7.759-6.745c-1.91-3.226-2.212-7.106-.855-10.125a3.328 3.328 0 0 1 2.382-2.092c2.279-.456 4.734 1.62 5.428 2.268 4.336 4.02 5.723 10.935 6.836 16.488l.14.736.177.906c3.62.743 7.354.743 10.974 0a44.43 44.43 0 0 1 .59-5.479c1.01-5.89 2.545-10.272 4.573-12.975a7.207 7.207 0 0 1 5.18-2.466 7.221 7.221 0 0 1 5.344 2.09 7.729 7.729 0 0 1 1.187 7.364 14.185 14.185 0 0 1-4.388 6.112 26.644 26.644 0 0 1-11.8 5.95c-.265 7.092.937 14.234 2.11 21.193l.147.869a.377.377 0 0 1-.302.427.367.367 0 0 1-.42-.302l-.148-.869c-1.173-6.936-2.368-14.065-2.132-21.156a27.925 27.925 0 0 1-10.804.037 92.854 92.854 0 0 1 1.047 22.776.372.372 0 0 1-.13.21.384.384 0 0 1-.231.085ZM72.668 65.157c-.173.002-.346.02-.516.052A2.641 2.641 0 0 0 70.3 66.88a10.418 10.418 0 0 0 .818 9.448 17.493 17.493 0 0 0 7.456 6.465c1.67.82 3.427 1.453 5.237 1.886-.037-.192-.082-.39-.118-.582l-.14-.736c-1.1-5.45-2.456-12.224-6.638-16.09-1.136-1.053-2.803-2.114-4.248-2.114Zm33.527-.53h-.273a5.998 5.998 0 0 0-4.602 2.172c-1.955 2.615-3.444 6.87-4.425 12.659a45.927 45.927 0 0 0-.568 5.198 26.017 26.017 0 0 0 11.254-5.736 13.533 13.533 0 0 0 4.174-5.795 7.011 7.011 0 0 0-1.039-6.627 5.957 5.957 0 0 0-4.521-1.87Z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M121.268 110.474c.302-1.171.59-2.335.9-3.498.162-.604.354-1.2.545-1.797a1.667 1.667 0 0 1 1.719-1.244c.929 0 1.851.147 2.78.221.488.07.982.095 1.475.073.369-.017.72-.16.996-.405a77.776 77.776 0 0 0 2.817-3.358 1.562 1.562 0 0 0 .192-1.472c-.317-1.097-.679-2.21-.996-3.27a4.693 4.693 0 0 1-.221-1.303 1.225 1.225 0 0 1 .361-.877 20.336 20.336 0 0 1 5.303-2.945 1.374 1.374 0 0 1 1.615.442c.782.906 1.593 1.79 2.345 2.717a2.215 2.215 0 0 0 2.257.92c1.202-.184 2.426-.301 3.636-.456a1.391 1.391 0 0 0 1.054-.736c.384-.678.738-1.37 1.114-2.047.376-.678.634-1.171.981-1.746a1.4 1.4 0 0 1 1.637-.736c1.733.45 3.466.913 5.163 1.421a1.478 1.478 0 0 1 1.04 1.554c0 .942-.155 1.878-.229 2.82-.037.442-.066.884-.066 1.333a1.814 1.814 0 0 0 .685 1.473 60.305 60.305 0 0 1 2.847 2.327 1.99 1.99 0 0 0 2.021.397c1.187-.353 2.36-.736 3.547-1.097a1.618 1.618 0 0 1 2.095.795 129.307 129.307 0 0 1 2.33 4.19 1.717 1.717 0 0 1 .06 1.961 1.7 1.7 0 0 1-.487.491c-.583.538-1.217 1.017-1.815 1.54-.427.368-.848.736-1.246 1.163a1.569 1.569 0 0 0-.465 1.296c.133 1.252.251 2.511.413 3.77.034.342.158.669.359.948.2.28.471.501.784.643.738.361 1.475.699 2.169 1.068.452.219.89.465 1.312.736a1.471 1.471 0 0 1 .738 1.767 112.52 112.52 0 0 1-1.364 4.72 3.522 3.522 0 0 1-.318.678 1.34 1.34 0 0 1-1.364.773l-3.326-.28h-.251a2.362 2.362 0 0 0-2.434 1.075c-.56.781-1.209 1.473-1.821 2.209a2.375 2.375 0 0 0-.421 2.423 66.575 66.575 0 0 1 1.003 3.13c.303 1.053.141 1.62-.855 2.209-1.431.832-2.884 1.62-4.351 2.386a1.48 1.48 0 0 1-2.036-.361c-.649-.692-1.246-1.429-1.851-2.15-1.305-1.562-1.615-1.679-3.636-1.422l-2.36.324a2.217 2.217 0 0 0-1.77 1.23c-.42.832-.811 1.679-1.254 2.496a7.849 7.849 0 0 1-.818 1.201 1.11 1.11 0 0 1-1.232.419c-1.637-.463-3.282-.927-4.926-1.406a2.761 2.761 0 0 1-.635-.302 1.336 1.336 0 0 1-.744-1.377c.088-1.097.184-2.209.272-3.277v-1.001a1.732 1.732 0 0 0-.663-1.421c-.93-.737-1.851-1.473-2.781-2.21a1.906 1.906 0 0 0-1.917-.309c-1.04.346-2.095.663-3.142.994l-.118.037c-1.379.361-1.844.221-2.552-1.016a81.202 81.202 0 0 1-2.212-4.19 1.47 1.47 0 0 1 .42-2.04 32.787 32.787 0 0 1 2.471-2.062c.416-.283.739-.681.93-1.146a2.56 2.56 0 0 0 .147-1.468c-.17-1.126-.288-2.26-.436-3.387a1.407 1.407 0 0 0-.225-.66 1.412 1.412 0 0 0-.512-.474c-.996-.53-1.999-1.046-2.95-1.583a3.14 3.14 0 0 1-1.615-1.473l-.118-.368Zm36.661 3.49a10.793 10.793 0 0 0-7.505-9.46 10.812 10.812 0 0 0-4.221-.466 10.986 10.986 0 0 0-7.228 3.86 10.952 10.952 0 0 0-2.537 7.782 10.801 10.801 0 0 0 3.747 7.302 10.839 10.839 0 0 0 7.802 2.573c6.933-.545 10.62-6.878 9.942-11.591ZM125.973 28.36c.177-.736.354-1.398.539-2.098.096-.36.214-.736.332-1.075a.998.998 0 0 1 1.025-.736c.56 0 1.113.088 1.674.132.298.044.599.059.9.044a.953.953 0 0 0 .597-.243 43.825 43.825 0 0 0 1.689-2.017.947.947 0 0 0 .125-.884c-.199-.663-.413-1.31-.604-1.966a2.852 2.852 0 0 1-.133-.788.727.727 0 0 1 .221-.523 12.15 12.15 0 0 1 3.186-1.767.819.819 0 0 1 .966.265c.472.545.959 1.075 1.409 1.635a1.355 1.355 0 0 0 1.357.552c.737-.11 1.475-.184 2.212-.28a.815.815 0 0 0 .627-.449c.229-.405.443-.817.671-1.23.229-.412.384-.736.59-1.045a.837.837 0 0 1 .981-.427 88.92 88.92 0 0 1 3.12.846.888.888 0 0 1 .619.936c0 .567-.088 1.126-.132 1.693 0 .265-.045.538-.045.803a1.085 1.085 0 0 0 .413.898c.576.464 1.158.913 1.711 1.4a1.213 1.213 0 0 0 1.217.242c.738-.22 1.416-.449 2.124-.662a.967.967 0 0 1 1.261.478c.487.832.952 1.672 1.402 2.511a1.031 1.031 0 0 1 .184.791 1.038 1.038 0 0 1-.443.682c-.346.324-.737.611-1.084.92-.346.31-.516.457-.737.737a.937.937 0 0 0-.28.78c.081.737.147 1.473.243 2.268a1.212 1.212 0 0 0 .693.958l1.306.633c.265.14.531.28.781.442a.897.897 0 0 1 .428 1.06c-.265.943-.531 1.878-.811 2.813a1.841 1.841 0 0 1-.192.405.82.82 0 0 1-.819.471l-2.035-.184h-.148a1.41 1.41 0 0 0-1.475.648c-.331.464-.737.891-1.091 1.34a1.466 1.466 0 0 0-.251 1.473c.214.619.421 1.245.605 1.878a.963.963 0 0 1 .038.78.953.953 0 0 1-.562.545c-.855.501-1.725.972-2.61 1.473a.91.91 0 0 1-1.225-.22c-.383-.42-.737-.855-1.113-1.29-.782-.942-.966-1.016-2.213-.854l-1.416.192a1.315 1.315 0 0 0-1.062.736c-.251.494-.487 1.002-.737 1.473-.14.261-.306.508-.494.736a.682.682 0 0 1-.738.258l-2.95-.847a2.026 2.026 0 0 1-.383-.184.81.81 0 0 1-.472-.817c.051-.656.11-1.31.162-1.966v-.604a1.062 1.062 0 0 0-.398-.854l-1.675-1.318a1.138 1.138 0 0 0-1.15-.192c-.627.206-1.261.398-1.888.597h-.074c-.826.22-1.106.132-1.534-.604-.428-.736-.907-1.672-1.335-2.518a.873.873 0 0 1-.001-.99.878.878 0 0 1 .252-.24 29.19 29.19 0 0 1 1.475-1.237 1.552 1.552 0 0 0 .649-1.569c-.103-.677-.17-1.362-.258-2.04a.871.871 0 0 0-.457-.685c-.598-.316-1.202-.625-1.8-.95a1.873 1.873 0 0 1-.966-.86l.007-.31Zm22.03 2.085A6.483 6.483 0 0 0 145.725 26a6.501 6.501 0 0 0-4.766-1.512 6.642 6.642 0 0 0-4.352 2.318 6.623 6.623 0 0 0-1.548 4.677 6.495 6.495 0 0 0 2.251 4.39 6.51 6.51 0 0 0 4.689 1.545 6.434 6.434 0 0 0 5.72-4.444 6.415 6.415 0 0 0 .284-2.53Z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m47.164 119.318.207-13.402 13.031 3.188 1.564 8.476 1.748 9.469-8.349-3.902-8.2-3.829Z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M63.714 127.418a.414.414 0 0 1-.155-.037l-16.55-7.732a.386.386 0 0 1-.214-.339l.207-13.402a.41.41 0 0 1 .147-.287.385.385 0 0 1 .31-.066l13.01 3.196a.36.36 0 0 1 .273.287l3.31 17.945a.361.361 0 0 1-.132.361.426.426 0 0 1-.206.074Zm-16.181-8.299 15.694 7.363-3.142-17.01-12.353-3.026-.2 12.673Z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E1DDDB\",\n    d: \"m49.918 113.751 4.413-3.402-33.739-43.633-4.413 3.402 33.739 43.633Z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M49.915 114.126h-.052a.333.333 0 0 1-.243-.14L15.88 70.349a.368.368 0 0 1-.074-.273.39.39 0 0 1 .14-.243l4.425-3.402a.355.355 0 0 1 .509.067l33.74 43.63a.366.366 0 0 1-.059.515l-4.425 3.402a.351.351 0 0 1-.221.081Zm-33.232-43.94 33.298 43.042 3.828-2.946-33.29-43.048-3.836 2.953Z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m20.585 66.719 6.077-1.245 33.74 43.63-6.077 1.252-33.74-43.637Z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M54.325 110.724a.373.373 0 0 1-.295-.147l-33.74-43.63a.375.375 0 0 1 .22-.59l6.078-1.244a.368.368 0 0 1 .369.133l33.74 43.637a.37.37 0 0 1-.22.582l-6.078 1.252-.074.007ZM21.241 66.961l33.24 42.99 5.272-1.09-33.21-42.982-5.302 1.082ZM13.424 75.68l2.75-5.552 33.741 43.63-2.75 5.552-33.741-43.63Z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D23228\",\n    d: \"m55.365 123.147.517-2.533 3.997-3.078 2.087.044 1.748 9.469-8.349-3.902Z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M63.714 127.418a.414.414 0 0 1-.155-.037l-8.356-3.903a.37.37 0 0 1-.2-.405l.524-2.533a.348.348 0 0 1 .133-.214l3.99-3.078a.464.464 0 0 1 .236-.081l2.094.052a.35.35 0 0 1 .347.294l1.748 9.47a.361.361 0 0 1-.133.361.425.425 0 0 1-.228.074Zm-7.936-4.477 7.449 3.475-1.564-8.475-1.666-.037-3.784 2.945-.435 2.092Z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M32.916 17.882C21.094 20.378 12.959 29.2 14.744 37.588c1.032 4.867 5.162 8.52 10.811 10.235 1.874 3.196 5.664 7.01 13.32 9.83a21.346 21.346 0 0 1-4.942-8.762 30.466 30.466 0 0 0 5.428-.648c11.8-2.496 19.957-11.318 18.18-19.706-1.778-8.387-12.81-13.151-24.625-10.655Z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M38.867 58a.348.348 0 0 1-.125 0c-6.416-2.364-10.93-5.678-13.437-9.868-5.9-1.848-9.912-5.655-10.93-10.47-1.844-8.572 6.468-17.607 18.46-20.163 11.998-2.533 23.238 2.371 25.074 10.943 1.837 8.571-6.468 17.6-18.437 20.14a30.84 30.84 0 0 1-5.023.64 21.251 21.251 0 0 0 4.72 8.145.368.368 0 0 1-.258.633h-.044Zm-5.9-39.764c-11.586 2.46-19.603 11.097-17.87 19.27.967 4.58 4.816 8.211 10.562 9.964.086.03.161.086.213.162 2.213 3.785 6.151 6.855 11.72 9.13a21.696 21.696 0 0 1-4.02-7.775.369.369 0 0 1 .346-.464c1.8-.054 3.593-.269 5.355-.64 11.6-2.453 19.632-11.098 17.899-19.272-1.733-8.174-12.582-12.82-24.183-10.375h-.022ZM201.309 113.64l-55.748-18.719 23.873-70.868 44.479 14.941 7.397 15.265-20.001 59.381Z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M201.331 114.008h-.118l-55.747-18.726a.358.358 0 0 1-.249-.322.36.36 0 0 1 .02-.142l23.865-70.868a.38.38 0 0 1 .472-.228l44.479 14.933a.366.366 0 0 1 .214.192l7.375 15.265c.037.09.037.19 0 .28l-20.008 59.381a.38.38 0 0 1-.07.126.365.365 0 0 1-.115.087.397.397 0 0 1-.118.022Zm-55.312-19.315 55.054 18.483 19.831-58.91-7.257-14.977-43.984-14.728-23.644 70.132Z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m195.697 117.3-55.748-18.719 23.873-70.868L208.3 42.646l7.398 15.273-20.001 59.381Z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M195.697 117.646a.334.334 0 0 1-.118 0l-55.748-18.719a.368.368 0 0 1-.229-.464l23.866-70.868a.388.388 0 0 1 .192-.214.32.32 0 0 1 .272 0l44.486 14.934a.353.353 0 0 1 .214.192l7.375 15.265a.355.355 0 0 1 0 .272l-20.001 59.388a.338.338 0 0 1-.184.207.33.33 0 0 1-.125.007Zm-55.313-19.322 55.054 18.49 19.832-58.91-7.265-14.993-43.955-14.734-23.666 70.147Z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m208.3 42.646-4.233 11.363 11.631 3.91-7.398-15.273Z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M215.698 58.28a.325.325 0 0 1-.118 0l-11.631-3.91a.36.36 0 0 1-.214-.185.395.395 0 0 1 0-.287l4.234-11.362a.369.369 0 0 1 .536-.187.371.371 0 0 1 .142.158l7.375 15.265a.36.36 0 0 1-.059.404.375.375 0 0 1-.265.104Zm-11.159-4.5 10.451 3.483-6.638-13.71-3.813 10.227Z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"M205.83 63.353a.325.325 0 0 1-.118 0l-40.15-13.498a.37.37 0 0 1-.159-.59.35.35 0 0 1 .252-.128.36.36 0 0 1 .143.019l40.15 13.483a.372.372 0 0 1 .16.67.373.373 0 0 1-.278.066v-.022ZM203.293 70.886a.325.325 0 0 1-.118 0l-40.15-13.483a.377.377 0 0 1-.236-.464.37.37 0 0 1 .472-.235l40.15 13.483a.372.372 0 0 1 .16.67.373.373 0 0 1-.278.066v-.037ZM200.756 78.42a.325.325 0 0 1-.118 0l-40.15-13.498a.389.389 0 0 1-.25-.486.386.386 0 0 1 .486-.25l40.15 13.482a.372.372 0 1 1-.118.737v.014ZM198.219 85.982a.325.325 0 0 1-.118 0l-40.15-13.483a.378.378 0 0 1-.235-.464.368.368 0 0 1 .472-.236l40.149 13.447a.372.372 0 0 1 .16.67.373.373 0 0 1-.278.066ZM195.682 93.486a.325.325 0 0 1-.118 0l-40.15-13.483a.389.389 0 0 1-.25-.486.386.386 0 0 1 .486-.25l40.15 13.482a.372.372 0 1 1-.118.737ZM181.337 97.028a.304.304 0 0 1-.118 0l-28.342-9.507a.393.393 0 0 1-.226-.191.38.38 0 0 1-.024-.295.376.376 0 0 1 .191-.226.39.39 0 0 1 .295-.024l28.342 9.514a.375.375 0 0 1 .229.47.361.361 0 0 1-.347.259ZM136.136 64.936a1.845 1.845 0 0 1-1.808-2.202 1.846 1.846 0 0 1 3.345-.656 1.84 1.84 0 0 1-1.537 2.858Zm0-2.945a1.105 1.105 0 1 0 1.106 1.105 1.1 1.1 0 0 0-1.106-1.098v-.007ZM31.706 123.795a1.853 1.853 0 0 1-1.026-.307 1.836 1.836 0 0 1-.79-1.889 1.84 1.84 0 0 1 1.446-1.45 1.844 1.844 0 0 1 2.206 1.805 1.84 1.84 0 0 1-1.836 1.841Zm0-2.946a1.107 1.107 0 0 0-1.093 1.316 1.105 1.105 0 1 0 1.093-1.316ZM43.882 65.842a.37.37 0 0 1-.369-.368V61.63a.368.368 0 0 1 .738 0v3.844a.375.375 0 0 1-.369.368Z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"M45.807 63.89h-3.85a.37.37 0 1 1 0-.736h3.85a.37.37 0 0 1 .369.369.376.376 0 0 1-.369.368ZM177.532 136.792a.37.37 0 0 1-.369-.369v-3.843a.37.37 0 1 1 .738 0v3.843a.38.38 0 0 1-.11.259.382.382 0 0 1-.259.11Z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"M179.457 134.855h-3.85a.37.37 0 0 1-.261-.629.368.368 0 0 1 .261-.107h3.85a.37.37 0 0 1 .369.368.376.376 0 0 1-.369.368ZM106.658 21.424a.368.368 0 0 1-.368-.368v-3.837a.369.369 0 0 1 .737 0v3.837a.368.368 0 0 1-.369.368Z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D7D3D1\",\n    d: \"M108.583 19.51h-3.864a.376.376 0 0 1-.369-.369.368.368 0 0 1 .369-.368h3.849a.369.369 0 0 1 .015.737ZM28.498 38.913a3.48 3.48 0 0 1-.48-.059 4.554 4.554 0 0 1-3.333-2.341 3.752 3.752 0 0 1-2.537 1.472.372.372 0 0 1-.088-.736 3.121 3.121 0 0 0 2.271-1.473 4.493 4.493 0 0 1 .17-3.792.36.36 0 0 1 .317-.192.384.384 0 0 1 .324.177 3.934 3.934 0 0 1 .045 3.785v.066l.066.148a3.623 3.623 0 0 0 2.91 2.171 3.634 3.634 0 0 0 3.337-1.435c.343-.394.616-.845.803-1.333a2.28 2.28 0 0 1 .14-2.482.391.391 0 0 1 .37-.125.384.384 0 0 1 .272.265 4.176 4.176 0 0 1-.051 2.29 1.716 1.716 0 0 0 1.475.884 1.942 1.942 0 0 0 1.622-1.03c.192-.327.308-.692.34-1.069a3.583 3.583 0 0 1-.237-1.2.368.368 0 0 1 .28-.36.369.369 0 0 1 .42.19c.188.386.282.81.274 1.238.185.426.46.807.804 1.12a2.949 2.949 0 0 0 3.472.527 2.95 2.95 0 0 0 .953-.8c.184-.226.34-.473.464-.737a4.866 4.866 0 0 1-.494-.677 1.574 1.574 0 0 1 .17-1.767.738.738 0 0 1 .922-.074 1.128 1.128 0 0 1 .427.847c.048.497-.007.998-.162 1.473a1.949 1.949 0 0 0 2.213.338c1.829-.795 3.223-3.615 2.706-5.486a.367.367 0 1 1 .708-.198c.62 2.209-.958 5.427-3.127 6.362a2.658 2.658 0 0 1-2.795-.317c-.134.235-.29.456-.464.663a3.685 3.685 0 0 1-2.666 1.398 3.693 3.693 0 0 1-2.821-1.052 3.729 3.729 0 0 1-.51-.574c-.064.165-.14.325-.228.478a2.682 2.682 0 0 1-2.139 1.4 2.363 2.363 0 0 1-1.866-.825c-.2.394-.448.762-.737 1.097a4.71 4.71 0 0 1-3.54 1.745Zm-3.688-5.766a3.826 3.826 0 0 0 0 1.561 3.206 3.206 0 0 0 .008-1.56h-.008Zm18.254-.92a.434.434 0 0 0-.111.235.86.86 0 0 0 .059.604c.042.074.09.145.14.214a2.735 2.735 0 0 0 0-.737c0-.235-.081-.301-.103-.316h.015ZM128.791 84.082a1.62 1.62 0 1 0 0-3.24c-.896 0-1.623.725-1.623 1.62 0 .895.727 1.62 1.623 1.62ZM57.777 93.552a1.621 1.621 0 1 0 0-3.24 1.621 1.621 0 1 0 0 3.24Z\"\n  })));\n};\nexport { SvgEmptyCourse as ReactComponent };\nexport default __webpack_public_path__ + \"d8973fc93cdf3e6c9a09f948bcbbc707.svg\";","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  lookingForChallengePrompt: {\n    id: 'Dashboard.NoCoursesView.lookingForChallengePrompt',\n    defaultMessage: 'Looking for a new challenge?',\n    description: 'Prompt user for new challenge',\n  },\n  exploreCoursesPrompt: {\n    id: 'Dashboard.NoCoursesView.exploreCoursesPrompt',\n    defaultMessage: 'Explore our courses to add them to your dashboard.',\n    description: 'Prompt user to explore more courses',\n  },\n  exploreCoursesButton: {\n    id: 'Dashboard.NoCoursesView.exploreCoursesButton',\n    defaultMessage: 'Explore courses',\n    description: 'Button to explore more courses',\n  },\n  bannerAlt: {\n    id: 'Dashboard.NoCoursesView.bannerAlt',\n    defaultMessage: 'No Courses view banner',\n    description: 'No Courses view basnner',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Button, Image } from '@edx/paragon';\nimport { Search } from '@edx/paragon/icons';\nimport { baseAppUrl } from 'data/services/lms/urls';\n\nimport emptyCourseSVG from 'assets/empty-course.svg';\nimport { reduxHooks } from 'hooks';\n\nimport messages from './messages';\nimport './index.scss';\n\nexport const NoCoursesView = () => {\n  const { formatMessage } = useIntl();\n  const { courseSearchUrl } = reduxHooks.usePlatformSettingsData();\n  return (\n    <div\n      id=\"no-courses-content-view\"\n      className=\"d-flex align-items-center justify-content-center mb-4.5\"\n    >\n      <Image src={emptyCourseSVG} alt={formatMessage(messages.bannerAlt)} />\n      <h1>\n        {formatMessage(messages.lookingForChallengePrompt)}\n      </h1>\n      <p>\n        {formatMessage(messages.exploreCoursesPrompt)}\n      </p>\n      <Button\n        variant=\"brand\"\n        as=\"a\"\n        href={baseAppUrl(courseSearchUrl)}\n        iconBefore={Search}\n      >\n        {formatMessage(messages.exploreCoursesButton)}\n      </Button>\n    </div>\n  );\n};\n\nexport default NoCoursesView;\n","import React from 'react';\n\nimport { useCheckboxSetValues, useWindowSize, breakpoints } from '@edx/paragon';\nimport queryString from 'query-string';\n\nimport { ListPageSize, SortKeys } from 'data/constants/app';\nimport { reduxHooks } from 'hooks';\nimport { StrictDict } from 'utils';\n\nimport * as module from './hooks';\n\nexport const useIsCollapsed = () => {\n  const { width } = useWindowSize();\n  return width < breakpoints.medium.maxWidth;\n};\n\nexport const state = StrictDict({\n  sortBy: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useCourseListData = () => {\n  const [filters, setFilters] = useCheckboxSetValues([]);\n  const [sortBy, setSortBy] = module.state.sortBy(SortKeys.enrolled);\n  const pageNumber = reduxHooks.usePageNumber();\n  const querySearch = queryString.parse(window.location.search, { parseNumbers: true });\n\n  const { numPages, visible } = reduxHooks.useCurrentCourseList({\n    sortBy,\n    filters,\n    pageSize: querySearch?.disable_pagination === 1 ? 0 : ListPageSize,\n  });\n\n  const handleRemoveFilter = (filter) => () => setFilters.remove(filter);\n  const setPageNumber = reduxHooks.useSetPageNumber();\n\n  return {\n    pageNumber,\n    numPages,\n    setPageNumber,\n    visibleList: visible,\n    filterOptions: {\n      sortBy,\n      setSortBy,\n      filters,\n      setFilters,\n      handleRemoveFilter,\n    },\n    showFilters: filters.length > 0,\n  };\n};\n\nexport default useCourseListData;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  myCourses: {\n    id: 'dashboard.mycourses',\n    defaultMessage: 'My Courses',\n    description: 'Course list heading',\n  },\n});\n\nexport default messages;\n","import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Pagination } from '@edx/paragon';\n\nimport { reduxHooks } from 'hooks';\nimport {\n  ActiveCourseFilters,\n  CourseFilterControls,\n} from 'containers/CourseFilterControls';\nimport CourseCard from 'containers/CourseCard';\nimport NoCoursesView from './NoCoursesView';\n\nimport { useCourseListData, useIsCollapsed } from './hooks';\n\nimport messages from './messages';\n\nimport './index.scss';\n\nexport const CourseList = () => {\n  const { formatMessage } = useIntl();\n  const hasCourses = reduxHooks.useHasCourses();\n  const {\n    filterOptions,\n    setPageNumber,\n    numPages,\n    showFilters,\n    visibleList,\n  } = useCourseListData();\n  const isCollapsed = useIsCollapsed();\n  return (\n    <div className=\"course-list-container\">\n      <div className=\"course-list-heading-container\">\n        <h2 className=\"course-list-title\">{formatMessage(messages.myCourses)}</h2>\n        <div className=\"course-filter-controls-container\">\n          <CourseFilterControls {...filterOptions} />\n        </div>\n      </div>\n      {hasCourses\n        ? (\n          <>\n            {showFilters && (\n              <div id=\"course-list-active-filters-container\">\n                <ActiveCourseFilters {...filterOptions} />\n              </div>\n            )}\n            <div className=\"d-flex flex-column flex-grow-1\">\n              {visibleList.map(({ cardId }) => (\n                <CourseCard key={cardId} cardId={cardId} />\n              ))}\n              {numPages > 1 && (\n                <Pagination\n                  variant={isCollapsed ? 'reduced' : 'secondary'}\n                  paginationLabel=\"Course List\"\n                  className=\"mx-auto mb-2\"\n                  pageCount={numPages}\n                  onPageSelect={setPageNumber}\n                />\n              )}\n            </div>\n          </>\n        ) : (\n          <NoCoursesView />\n        )}\n    </div>\n  );\n};\n\nCourseList.propTypes = {};\n\nexport default CourseList;\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgMoreCoursesSidewidget = function SvgMoreCoursesSidewidget(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 186,\n    height: 125,\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M136.816 127H-34L.184-2H171l-34.184 129Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m117.806 36.935-3.417 51.22c0 1.893-2.119 3.432-4.742 3.432H38.889c-2.615 0-4.745-1.539-4.745-3.433l3.418-51.219c0-1.894 2.13-3.433 4.745-3.433h70.758c2.625 0 4.741 1.54 4.741 3.433Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M109.651 91.761H38.893c-2.712 0-4.918-1.619-4.918-3.607l3.417-51.222c0-1.989 2.206-3.604 4.918-3.604h70.758c2.709 0 4.915 1.615 4.915 3.604l-3.417 51.222c0 2.006-2.206 3.607-4.915 3.607Zm-67.34-58.085c-2.522 0-4.572 1.459-4.572 3.256l-3.417 51.222c0 1.797 2.05 3.259 4.571 3.259h70.758c2.518 0 4.568-1.462 4.568-3.259l3.417-51.222c0-1.797-2.05-3.256-4.568-3.256H42.31Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M114.388 36.935v2.695H37.575v-2.695c0-1.894 2.13-3.433 4.745-3.433h67.341c2.612 0 4.727 1.54 4.727 3.433Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M117.806 39.804h-80.23a.174.174 0 0 1-.174-.174v-2.698c0-1.988 2.206-3.604 4.919-3.604h70.758c2.709 0 4.915 1.616 4.915 3.604v2.698a.17.17 0 0 1-.015.07.173.173 0 0 1-.173.104Zm-80.06-.348h79.89v-2.524c0-1.797-2.05-3.256-4.568-3.256H42.31c-2.521 0-4.571 1.46-4.571 3.256l.007 2.524Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M101.787 43.404H47.55v5.418h54.237v-5.418Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M101.788 48.996H47.55a.174.174 0 0 1-.173-.174v-5.418a.174.174 0 0 1 .173-.174h54.238c.045 0 .089.02.121.052a.176.176 0 0 1 .052.122v5.418a.173.173 0 0 1-.173.174Zm-54.064-.349h53.89v-5.069h-53.89v5.07Z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D23228\",\n    d: \"M101.787 43.404h-7.356v5.418h7.356v-5.418Z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M101.787 48.996H94.43a.174.174 0 0 1-.173-.174v-5.418a.174.174 0 0 1 .173-.174h7.357a.175.175 0 0 1 .173.174v5.418c0 .046-.018.09-.05.123a.175.175 0 0 1-.123.05Zm-7.183-.349h7.01v-5.069h-6.996l-.014 5.07Z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M112.707 52.575h-27.99l-3.418 28.097h27.991l3.417-28.097Z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M72.745 53.275H41.608v.696h31.137v-.696ZM62.319 55.357h-20.71v.696h20.71v-.696Z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M75 57.435H41.608v.697H75v-.697ZM70.96 59.517H41.607v.697H70.96v-.697ZM46.26 61.739h-4.415v.348h4.415v-.348ZM49.992 61.739H47.55v.348h2.442v-.348ZM53.478 61.739h-2.359v.348h2.359v-.348Z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M66.03 65.844H41.608v.696H66.03v-.696ZM70.96 67.925H41.607v.697H70.96v-.697Z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M61.24 70.004H41.608v.697H61.24v-.697ZM67.345 72.086H41.608v.697h25.737v-.697ZM44.05 74.308h-2.205v.348h2.206v-.348ZM49.992 74.308h-4.814v.348h4.814v-.348ZM52.715 74.308h-1.596v.348h1.596v-.348Z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M68.916 78.412H41.608v.697h27.308v-.697ZM72.745 80.494H41.608v.697h31.137v-.697Z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M62.93 82.573H41.607v.696H62.93v-.696ZM59.173 84.652H41.608v.696h17.565v-.696ZM47.585 86.876h-5.74v.349h5.74v-.349ZM52.298 86.876h-3.246v.349h3.246v-.349Z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03C7E8\",\n    d: \"M41.557 37.712c.632 0 1.144-.515 1.144-1.15 0-.634-.512-1.148-1.144-1.148-.632 0-1.145.514-1.145 1.148 0 .635.513 1.15 1.145 1.15Z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E6E7E8\",\n    d: \"M44.998 37.712c.632 0 1.145-.515 1.145-1.15 0-.634-.513-1.148-1.145-1.148s-1.145.514-1.145 1.148c0 .635.513 1.15 1.145 1.15ZM48.439 37.712c.632 0 1.144-.515 1.144-1.15 0-.634-.512-1.148-1.144-1.148-.633 0-1.145.514-1.145 1.148 0 .635.512 1.15 1.145 1.15Z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M97.575 47.241a1.464 1.464 0 0 1-1.437-1.187 1.478 1.478 0 0 1 .88-1.647 1.462 1.462 0 0 1 1.78.543 1.477 1.477 0 0 1-.66 2.18c-.178.074-.37.112-.563.111Zm0-2.594a1.106 1.106 0 0 0-.791.328 1.125 1.125 0 0 0 .79 1.92 1.117 1.117 0 0 0 1.036-.695 1.128 1.128 0 0 0-.607-1.469 1.105 1.105 0 0 0-.428-.084Z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M99.556 47.93a.177.177 0 0 1-.125-.052l-1.065-1.069a.174.174 0 0 1 .056-.282.173.173 0 0 1 .19.038l1.065 1.07a.175.175 0 0 1-.121.295ZM122.772 62.282h-28.48l-3.417 21.207h28.48l3.417-21.207Z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M119.356 83.663h-28.48a.173.173 0 0 1-.174-.174l3.417-21.207a.174.174 0 0 1 .174-.174h28.48c.046 0 .089.02.122.052.032.032.05.076.051.122l-3.417 21.207c0 .046-.018.09-.051.123a.17.17 0 0 1-.122.05Zm-28.307-.348h28.133l3.417-20.859H94.466L91.05 83.315Z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D23228\",\n    d: \"M95.223 79.651h-.036c-2.565-.08-3.27-2.467-3.277-2.492a.176.176 0 0 1 .018-.137.183.183 0 0 1 .112-.085.189.189 0 0 1 .195.065c.015.019.026.04.032.063.026.09.648 2.163 2.945 2.237h.011c1.13 0 1.928-2.96 2.63-5.592.715-2.726 1.431-5.301 2.594-5.567a1.789 1.789 0 0 1 1.377.185c1.038.64 1.432 2.43 1.908 4.498a27.07 27.07 0 0 0 .937 3.467c.623 1.684 1.789 2.73 2.913 2.603 1.391-.157 2.443-2.058 2.805-5.088 1.034-8.639 4.104-9.586 5.367-9.593h.046c3.163 0 4.798 1.66 5.829 5.91a.183.183 0 0 1-.023.135.186.186 0 0 1-.253.057.178.178 0 0 1-.082-.112c-.998-4.106-2.483-5.64-5.481-5.64h-.043c-2.451 0-4.33 3.494-5.01 9.285-.386 3.247-1.524 5.214-3.12 5.392-1.284.15-2.608-.992-3.288-2.83a27.886 27.886 0 0 1-.952-3.495c-.429-1.912-.833-3.715-1.749-4.281a1.416 1.416 0 0 0-1.106-.14c-.959.22-1.685 2.929-2.326 5.316-.826 3.001-1.574 5.84-2.973 5.84Z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M116.702 75.035h-3.979a.17.17 0 0 1-.122-.05.173.173 0 0 1 .122-.297h3.979a.173.173 0 0 1 .122.297.17.17 0 0 1-.122.05ZM116.702 76.682h-3.979a.173.173 0 0 1-.122-.297.17.17 0 0 1 .122-.051h3.979a.17.17 0 0 1 .122.051.173.173 0 0 1-.122.297ZM114.711 78.322h-1.988a.17.17 0 0 1-.122-.051.173.173 0 0 1 .122-.297h1.988a.173.173 0 0 1 .122.297.17.17 0 0 1-.122.05ZM99.472 64.472h-3.978a.173.173 0 0 1-.174-.174.175.175 0 0 1 .174-.174h3.978a.173.173 0 0 1 .122.296.177.177 0 0 1-.122.052ZM99.472 66.136h-3.978a.173.173 0 0 1-.174-.174.175.175 0 0 1 .174-.174h3.978a.177.177 0 0 1 .174.174.174.174 0 0 1-.174.174ZM97.481 67.77h-1.987a.173.173 0 0 1-.174-.175.174.174 0 0 1 .174-.174h1.987a.173.173 0 0 1 .174.174.174.174 0 0 1-.174.174Z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"m43.157 66.54-3.453-1.771-4.195 8.24 3.453 1.772 4.195-8.24Z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M38.958 74.955a.159.159 0 0 1-.076-.02l-3.469-1.77a.17.17 0 0 1-.076-.233l4.197-8.24a.167.167 0 0 1 .1-.088.173.173 0 0 1 .132 0l3.469 1.772a.17.17 0 0 1 .073.234L39.12 74.86a.184.184 0 0 1-.1.084.142.142 0 0 1-.063.01Zm-3.219-2.02 3.146 1.613 4.052-7.931L39.794 65l-4.055 7.935Z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m39.973 72.347-3.095-1.587a.862.862 0 0 0-1.162.377l-7.209 14.16a.869.869 0 0 0 .377 1.166l3.094 1.587a.862.862 0 0 0 1.162-.377l7.21-14.159a.869.869 0 0 0-.377-1.166Z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M32.372 88.321c-.163 0-.324-.039-.469-.115l-3.1-1.587a1.044 1.044 0 0 1-.451-1.393l7.21-14.16a1.042 1.042 0 0 1 1.388-.453l3.097 1.588a1.043 1.043 0 0 1 .451 1.393l-7.204 14.16a1.043 1.043 0 0 1-.922.567Zm4.113-17.481a.694.694 0 0 0-.614.383l-7.21 14.156a.7.7 0 0 0 .301.93l3.097 1.588a.691.691 0 0 0 .927-.3l7.21-14.15a.698.698 0 0 0-.301-.93l-3.098-1.587a.657.657 0 0 0-.312-.09Z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M49.374 49.56a9.933 9.933 0 0 0-11.002 1.288 10.007 10.007 0 0 0-3.127 4.89c-.537 1.904-.5 3.926.108 5.809a10.003 10.003 0 0 0 3.307 4.769 9.934 9.934 0 0 0 11.043.876 9.986 9.986 0 0 0 4.01-4.19 10.037 10.037 0 0 0 .6-7.622 9.993 9.993 0 0 0-4.939-5.82ZM41.462 65.09a7.431 7.431 0 0 1-3.1-3 7.47 7.47 0 0 1 .657-8.25 7.42 7.42 0 0 1 3.537-2.467 7.393 7.393 0 0 1 4.306-.079 7.415 7.415 0 0 1 3.625 2.336 7.472 7.472 0 0 1 .958 8.22 7.427 7.427 0 0 1-4.322 3.695 7.393 7.393 0 0 1-5.66-.455Z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#002121\",\n    d: \"M44.831 68.647c-2.56.006-5.03-.957-6.915-2.697a10.239 10.239 0 0 1-1.113-13.822 10.165 10.165 0 0 1 6.394-3.777c2.528-.406 5.117.16 7.248 1.586a10.212 10.212 0 0 1 4.249 6.104c.6 2.498.24 5.133-1.01 7.377a10.182 10.182 0 0 1-5.731 4.727c-1.008.331-2.062.5-3.122.502Zm.02-20.013a9.845 9.845 0 0 0-3.024.48 9.758 9.758 0 0 0-5.49 4.527 9.82 9.82 0 0 0-.973 7.066 9.787 9.787 0 0 0 4.064 5.851A9.721 9.721 0 0 0 52.5 64.483a9.812 9.812 0 0 0-1.033-13.244 9.73 9.73 0 0 0-6.615-2.604Zm-.023 17.45a7.535 7.535 0 0 1-3.441-.832 7.618 7.618 0 0 1-3.627-4.019 7.656 7.656 0 0 1-.05-5.421 7.62 7.62 0 0 1 3.55-4.086 7.574 7.574 0 0 1 5.358-.687 7.6 7.6 0 0 1 4.459 3.06 7.65 7.65 0 0 1-1.198 10.065 7.583 7.583 0 0 1-5.051 1.92Zm-3.278-1.142a7.222 7.222 0 0 0 7.988-.94 7.276 7.276 0 0 0 2.273-3.547 7.3 7.3 0 0 0-.07-4.217 7.273 7.273 0 0 0-2.402-3.466 7.23 7.23 0 0 0-8.023-.645 7.261 7.261 0 0 0-2.92 3.038 7.305 7.305 0 0 0-.434 5.542 7.273 7.273 0 0 0 3.588 4.235Z\"\n  })));\n};\nexport { SvgMoreCoursesSidewidget as ReactComponent };\nexport default __webpack_public_path__ + \"8e66153612162aadaba7191d411a3cfc.svg\";","import { StrictDict } from 'utils';\nimport { createLinkTracker, createEventTracker } from 'data/services/segment/utils';\nimport track from 'tracking';\n\nexport const eventNames = StrictDict({\n  recommendedCourseClicked: 'edx.bi.user.recommended.course.click',\n});\n\nexport const linkNames = StrictDict({\n  findCoursesWidget: 'learner_home_widget_explore',\n});\n\nexport const findCoursesWidgetClicked = (href) => track.findCourses.findCoursesClicked(href, {\n  linkName: linkNames.findCoursesWidget,\n});\n\nexport const recommendedCourseClicked = (courseKey, isControl, href) => createLinkTracker(\n  createEventTracker(eventNames.recommendedCourseClicked, {\n    course_key: courseKey,\n    is_control: isControl,\n    page: 'dashboard',\n  }),\n  href,\n);\n\nexport default {\n  findCoursesWidgetClicked,\n  recommendedCourseClicked,\n};\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  lookingForChallengePrompt: {\n    id: 'WidgetSidebar.lookingForChallengePrompt',\n    defaultMessage: 'Looking for a new challenge?',\n    description: 'Prompt user for new challenge',\n  },\n  findCoursesButton: {\n    id: 'WidgetSidebar.findCoursesButton',\n    defaultMessage: 'Find a course {arrow}',\n    description: 'Button to explore more courses',\n  },\n});\n\nexport default messages;\n","import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Card, Hyperlink, Icon } from '@edx/paragon';\nimport { ArrowForward } from '@edx/paragon/icons';\n\nimport { reduxHooks } from 'hooks';\nimport moreCoursesSVG from 'assets/more-courses-sidewidget.svg';\nimport { baseAppUrl } from 'data/services/lms/urls';\n\nimport track from '../RecommendationsPanel/track';\nimport messages from './messages';\nimport './index.scss';\n\nexport const arrowIcon = (<Icon className=\"mx-1\" src={ArrowForward} />);\n\nexport const LookingForChallengeWidget = () => {\n  const { formatMessage } = useIntl();\n  const { courseSearchUrl } = reduxHooks.usePlatformSettingsData();\n  return (\n    <Card orientation=\"horizontal\" id=\"looking-for-challenge-widget\">\n      <Card.ImageCap\n        src={moreCoursesSVG}\n        srcAlt=\"course side widget\"\n      />\n      <Card.Body className=\"m-auto pr-2\">\n        <h4>\n          {formatMessage(messages.lookingForChallengePrompt)}\n        </h4>\n        <h5>\n          <Hyperlink\n            variant=\"brand\"\n            destination={baseAppUrl(courseSearchUrl)}\n            onClick={track.findCoursesWidgetClicked(baseAppUrl(courseSearchUrl))}\n            className=\"d-flex align-items-center\"\n          >\n            {formatMessage(messages.findCoursesButton, { arrow: arrowIcon })}\n          </Hyperlink>\n        </h5>\n      </Card.Body>\n    </Card>\n  );\n};\n\nLookingForChallengeWidget.propTypes = {};\n\nexport default LookingForChallengeWidget;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  loadingSR: {\n    id: 'learner-dash.loadingSR',\n    description: 'Page loading screen-reader text',\n    defaultMessage: 'Loading...',\n  },\n  errorMessage: {\n    id: 'learner-dash.error-page-message',\n    defaultMessage: 'If you experience repeated failures, please email support at {supportEmail}',\n    description: 'Error page message',\n  },\n  pageTitle: {\n    id: 'learner-dash.title',\n    description: 'Page title: Learner Home',\n    defaultMessage: 'Learner Home',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { useWindowSize, breakpoints } from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { apiHooks } from 'hooks';\nimport { StrictDict } from 'utils';\n\nimport appMessages from 'messages';\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  sidebarShowing: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useInitializeDashboard = () => {\n  const initialize = apiHooks.useInitializeApp();\n  React.useEffect(() => { initialize(); }, []); // eslint-disable-line\n};\n\nexport const useDashboardMessages = () => {\n  const { formatMessage } = useIntl();\n  return {\n    spinnerScreenReaderText: formatMessage(appMessages.loadingSR),\n    pageTitle: formatMessage(appMessages.pageTitle),\n  };\n};\n\nexport const useDashboardLayoutData = () => {\n  const { width } = useWindowSize();\n  const [sidebarShowing, setSidebarShowing] = module.state.sidebarShowing(false);\n  return {\n    isDashboardCollapsed: width < breakpoints.large.maxWidth,\n    sidebarShowing,\n    setSidebarShowing,\n  };\n};\n\nexport default {\n  useDashboardLayoutData,\n  useInitializeDashboard,\n  useDashboardMessages,\n};\n","import React from 'react';\nimport { Spinner } from '@edx/paragon';\n\nimport { useDashboardMessages } from 'containers/Dashboard/hooks';\n\nexport const LoadingView = () => {\n  const { spinnerScreenReaderText } = useDashboardMessages();\n  return (\n    <div className=\"recommendations-loading w-100\">\n      <Spinner\n        animation=\"border\"\n        variant=\"light\"\n        screenReaderText={spinnerScreenReaderText}\n      />\n    </div>\n  );\n};\n\nexport default LoadingView;\n","import track from '../track';\nimport './index.scss';\n\nexport const useCourseCardData = (course, isControl) => {\n  const handleCourseClick = (e) => {\n    e.preventDefault();\n\n    track.recommendedCourseClicked(\n      course.courseKey,\n      isControl,\n      course?.marketingUrl,\n    )(e);\n  };\n  return { handleCourseClick };\n};\n\nexport default useCourseCardData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, Hyperlink, Truncate } from '@edx/paragon';\n\nimport { useIsCollapsed } from 'containers/CourseCard/hooks';\nimport useCourseCardData from './hooks';\nimport './index.scss';\n\nexport const CourseCard = ({ course, isControl }) => {\n  const isCollapsed = useIsCollapsed();\n  const { handleCourseClick } = useCourseCardData(course, isControl);\n\n  return (\n    <Hyperlink\n      destination={course?.marketingUrl}\n      className=\"card-link\"\n      onClick={handleCourseClick}\n    >\n      <Card orientation={isCollapsed ? 'vertical' : 'horizontal'} className=\"p-3 mb-1 recommended-course-card\">\n        <div className={isCollapsed ? '' : 'd-flex align-items-center'}>\n          <Card.ImageCap\n            src={course.logoImageUrl}\n            srcAlt={course.title}\n          />\n          <Card.Body className=\"d-flex align-items-center\">\n            <Card.Section className={isCollapsed ? 'pt-3' : 'pl-3'}>\n              <h4 className=\"text-info-500\">\n                <Truncate lines={3}>\n                  {course.title}\n                </Truncate>\n              </h4>\n            </Card.Section>\n          </Card.Body>\n        </div>\n      </Card>\n    </Hyperlink>\n  );\n};\n\nCourseCard.propTypes = {\n  course: PropTypes.shape({\n    courseKey: PropTypes.string,\n    title: PropTypes.string,\n    logoImageUrl: PropTypes.string,\n    marketingUrl: PropTypes.string,\n  }).isRequired,\n  isControl: PropTypes.oneOf([true, false, null]).isRequired,\n};\n\nexport default CourseCard;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  recommendationsHeading: {\n    id: 'RecommendationsPanel.recommendationsHeading',\n    defaultMessage: 'Recommendations for you',\n    description: 'Personalize courses heading on recommendations panel',\n  },\n  popularCoursesHeading: {\n    id: 'RecommendationsPanel.popularCoursesHeading',\n    defaultMessage: 'Popular courses',\n    description: 'Popular courses heading on recommendations panel',\n  },\n  exploreCoursesButton: {\n    id: 'RecommendationsPanel.exploreCoursesButton',\n    defaultMessage: 'Explore courses',\n    description: 'Button to explore more courses on recommendations panel',\n  },\n});\n\nexport default messages;\n","import { StrictDict } from 'utils';\nimport { createEventTracker } from 'data/services/segment/utils';\n\nexport const eventNames = StrictDict({\n  variationGroup: 'edx.bi.user.recommendation_home.variation.group',\n  recommendationHomeBtnClicked: 'edx.bi.user.recommendation_home.btn.clicked',\n  recommendationHomeModalInterestBtnClicked: 'edx.bi.user.recommendation_home.modal.interest_btn.clicked',\n  recommendationHomeModalSkipBtnClicked: 'edx.bi.user.recommendation_home.modal.skip_btn.clicked',\n});\n\nexport const trackPaintedDoorVariationGroup = (variation) => {\n  createEventTracker(eventNames.variationGroup, {\n    variation,\n    page: 'dashboard',\n  })();\n};\n\nexport const trackPaintedDoorRecommendationHomeBtnClicked = (variation) => {\n  createEventTracker(eventNames.recommendationHomeBtnClicked, {\n    variation,\n    page: 'dashboard',\n  })();\n};\n\nexport const trackPaintedDoorRecommendationHomeInterestBtnClicked = (variation) => {\n  createEventTracker(eventNames.recommendationHomeModalInterestBtnClicked, {\n    variation,\n  })();\n};\n\nexport const trackPaintedDoorRecommendationHomeSkipBtnClicked = (variation) => {\n  createEventTracker(eventNames.recommendationHomeModalSkipBtnClicked, {\n    variation,\n  })();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StrictDict } from 'utils';\nimport * as module from './PaintedDoorExperimentContext';\nimport {\n  useEmailConfirmationData,\n  useHasAvailableDashboards,\n  useRequestIsPending,\n} from '../../data/redux/hooks';\nimport { RequestKeys } from '../../data/constants/requests';\nimport { trackPaintedDoorVariationGroup } from './track';\n\nexport const state = StrictDict({\n  enterpriseUser: (val) => React.useState(val), // eslint-disable-line\n  experimentData: (val) => React.useState(val), // eslint-disable-line\n});\n\nconst PAINTED_DOOR_RECOMMENDATIONS_EXP_ID = 25116810832;\nconst PAINTED_DOOR_RECOMMENDATIONS_PAGE = 'url_targeting_for_van1604_recommendations_painted_door_exp';\nconst PAINTED_DOOR_RECS_EXP_NAVBAR_BTN_VARIATION = 'btn_navbar';\nconst PAINTED_DOOR_RECS_EXP_WIDGET_BTN_VARIATION = 'btn_widget';\nconst PAINTED_DOOR_RECS_EXP_CONTROL_VARIATION = 'control';\n\nexport function getPaintedDoorRecommendationsExperimentVariation() {\n  try {\n    if (window.optimizely && window.optimizely.get('data').experiments[PAINTED_DOOR_RECOMMENDATIONS_EXP_ID]) {\n      const selectedVariant = window.optimizely.get('state').getVariationMap()[PAINTED_DOOR_RECOMMENDATIONS_EXP_ID];\n      return selectedVariant?.name;\n    }\n  } catch (e) { /* empty */ }\n  return '';\n}\n\nexport function activatePaintedDoorRecommendationsExperiment() {\n  window.optimizely = window.optimizely || [];\n  window.optimizely.push({\n    type: 'page',\n    pageName: PAINTED_DOOR_RECOMMENDATIONS_PAGE,\n  });\n}\n\nexport const useIsEnterpriseUser = () => {\n  const [enterpriseUser, setEnterpriseUser] = module.state.enterpriseUser({\n    isEnterpriseUser: false,\n    isLoading: true,\n  });\n\n  const initIsPending = useRequestIsPending(RequestKeys.initialize);\n  const hasAvailableDashboards = useHasAvailableDashboards();\n  const confirmationData = useEmailConfirmationData();\n\n  React.useEffect(() => {\n    if (!initIsPending && Object.keys(confirmationData).length && hasAvailableDashboards) {\n      setEnterpriseUser(prev => ({\n        ...prev,\n        isEnterpriseUser: true,\n        isLoading: false,\n      }));\n    } else if (!initIsPending && Object.keys(confirmationData).length && !hasAvailableDashboards) {\n      setEnterpriseUser(prev => ({\n        ...prev,\n        isEnterpriseUser: false,\n        isLoading: false,\n      }));\n    }\n  }, [initIsPending]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return enterpriseUser;\n};\n\nexport const PaintedDoorExperimentContext = React.createContext({\n  experimentVariation: null,\n  isPaintedDoorNavbarBtnVariation: null,\n  isPaintedDoorWidgetBtnVariation: null,\n  isPaintedDoorControlVariation: null,\n  experimentLoading: null,\n});\n\nexport const PaintedDoorExperimentProvider = ({ children }) => {\n  const [experimentData, setExperimentData] = module.state.experimentData({\n    experimentVariation: '',\n    isPaintedDoorNavbarBtnVariation: false,\n    isPaintedDoorWidgetBtnVariation: false,\n    isPaintedDoorControlVariation: false,\n    experimentLoading: true,\n  });\n  const enterpriseUser = useIsEnterpriseUser();\n\n  const contextValue = React.useMemo(\n    () => ({\n      ...experimentData,\n    }),\n    [experimentData],\n  );\n\n  React.useEffect(() => {\n    let timer = null;\n    if (!enterpriseUser.isLoading && !enterpriseUser.isEnterpriseUser) {\n      activatePaintedDoorRecommendationsExperiment();\n      timer = setTimeout(() => {\n        const variation = getPaintedDoorRecommendationsExperimentVariation();\n        setExperimentData(prev => ({\n          ...prev,\n          experimentVariation: variation,\n          isPaintedDoorNavbarBtnVariation: variation === PAINTED_DOOR_RECS_EXP_NAVBAR_BTN_VARIATION,\n          isPaintedDoorWidgetBtnVariation: variation === PAINTED_DOOR_RECS_EXP_WIDGET_BTN_VARIATION,\n          isPaintedDoorControlVariation: variation === PAINTED_DOOR_RECS_EXP_CONTROL_VARIATION,\n          experimentLoading: false,\n        }));\n        trackPaintedDoorVariationGroup(variation);\n      }, 500);\n    }\n    return () => clearTimeout(timer);\n  }, [enterpriseUser]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <PaintedDoorExperimentContext.Provider value={contextValue}>\n      {children}\n    </PaintedDoorExperimentContext.Provider>\n  );\n};\n\nexport const usePaintedDoorExperimentContext = () => React.useContext(PaintedDoorExperimentContext);\n\nPaintedDoorExperimentProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PaintedDoorExperimentProvider;\n","export const COLLAPSED_NAVBAR = 'collapsedNavbar';\nexport const EXPANDED_NAVBAR = 'expendedNavbar';\nexport const RECOMMENDATIONS_PANEL = 'recommendationsPanel';\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  recommendationsFeatureText: {\n    id: 'RecommendationsPanel.recommendationsFeatureText',\n    defaultMessage: 'Personalized recommendations feature is not yet available. We are working hard on bringing it to your learner home in the near future.',\n    description: 'recommendations feature text',\n  },\n  recommendationsAlertText: {\n    id: 'RecommendationsPanel.recommendationsAlertText',\n    defaultMessage: 'Would you like to be alerted when it becomes available?',\n    description: 'recommendations alerted text',\n  },\n  recommendationsModalHeading: {\n    id: 'RecommendationsPanel.recommendationsModalHeading',\n    defaultMessage: 'Thank you for your interest!',\n    description: 'Heading of modal',\n  },\n  modalSkipButton: {\n    id: 'RecommendationsPanel.modalSkipButton',\n    defaultMessage: 'Skip for now',\n    description: 'button for Skip for now',\n  },\n  modalCountMeButton: {\n    id: 'RecommendationsPanel.modalCountMeButton',\n    defaultMessage: 'Count me in!',\n    description: 'button for Count me in!',\n  },\n  recommendedForYou: {\n    id: 'learnerVariantDashboard.recommendedForYou',\n    defaultMessage: 'Recommended For You',\n    description: 'Header link for recommended page.',\n  },\n  seeAllRecommendationsButton: {\n    id: 'RecommendationsPanel.seeAllRecommendationsButton',\n    defaultMessage: 'See All Recommendations',\n    description: 'Button to see all recommendations',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { Button } from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport messages from '../messages';\nimport { COLLAPSED_NAVBAR, EXPANDED_NAVBAR } from '../constants';\n\nexport const NavbarButton = ({ placement, handleClick }) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Button\n      as=\"a\"\n      className={classNames({\n        'p-4': placement === EXPANDED_NAVBAR,\n      })}\n      variant=\"inverse-primary\"\n      onClick={handleClick}\n    >\n      {formatMessage(messages.recommendedForYou)}\n    </Button>\n  );\n};\n\nNavbarButton.propTypes = {\n  placement: PropTypes.oneOf([COLLAPSED_NAVBAR, EXPANDED_NAVBAR]).isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default NavbarButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ModalDialog, ActionRow } from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport messages from '../../messages';\n\nimport './index.scss';\nimport {\n  trackPaintedDoorRecommendationHomeInterestBtnClicked,\n  trackPaintedDoorRecommendationHomeSkipBtnClicked,\n} from '../../track';\n\nexport const ModalView = ({\n  isOpen,\n  onClose,\n  variation,\n}) => {\n  const { formatMessage } = useIntl();\n\n  const handleSkipBtnClick = () => trackPaintedDoorRecommendationHomeSkipBtnClicked(variation);\n  const handleInterestBtnClick = () => trackPaintedDoorRecommendationHomeInterestBtnClicked(variation);\n\n  return (\n    <div className=\"containers modal-container\">\n      <ModalDialog\n        title=\"\"\n        isOpen={isOpen}\n        onClose={onClose}\n        hasCloseButton={false}\n        isFullscreenScroll\n        isBlocking\n      >\n        <ModalDialog.Header>\n          <ModalDialog.Title className=\"mt-2\">\n            {formatMessage(messages.recommendationsModalHeading)}\n          </ModalDialog.Title>\n        </ModalDialog.Header>\n        <ModalDialog.Body>\n          <div>\n            <p className=\"mt-2\">{formatMessage(messages.recommendationsFeatureText)}</p>\n            <p>{formatMessage(messages.recommendationsAlertText)}</p>\n          </div>\n        </ModalDialog.Body>\n        <ModalDialog.Footer>\n          <ActionRow>\n            <ModalDialog.CloseButton variant=\"tertiary\" onClick={handleSkipBtnClick}>\n              {formatMessage(messages.modalSkipButton)}\n            </ModalDialog.CloseButton>\n            <ModalDialog.CloseButton variant=\"primary\" onClick={handleInterestBtnClick}>\n              {formatMessage(messages.modalCountMeButton)}\n            </ModalDialog.CloseButton>\n          </ActionRow>\n        </ModalDialog.Footer>\n      </ModalDialog>\n    </div>\n  );\n};\n\nModalView.defaultProps = {\n  isOpen: false,\n};\n\nModalView.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool,\n  variation: PropTypes.string.isRequired,\n};\n\nexport default ModalView;\n","import React from 'react';\nimport { StrictDict } from 'utils';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  isModalOpen: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const usePaintedDoorModal = () => {\n  const [isModalOpen, setIsModalOpen] = module.state.isModalOpen(false);\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n  return {\n    isModalOpen,\n    toggleModal,\n  };\n};\n","import React from 'react';\nimport { Button } from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport PropTypes from 'prop-types';\nimport messages from '../messages';\n\nexport const RecommendationsPanelButton = ({ handleClick }) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Button\n      as=\"a\"\n      variant=\"brand\"\n      onClick={handleClick}\n    >\n      {formatMessage(messages.seeAllRecommendationsButton)}\n    </Button>\n  );\n};\n\nRecommendationsPanelButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default RecommendationsPanelButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarButton from './components/NavbarButton';\nimport PaintedDoorModal from './components/PaintedDoorModal';\nimport { usePaintedDoorModal } from './components/PaintedDoorModal/hooks';\nimport { COLLAPSED_NAVBAR, EXPANDED_NAVBAR, RECOMMENDATIONS_PANEL } from './constants';\nimport RecommendationsPanelButton from './components/RecommendationsPanelButton';\nimport { trackPaintedDoorRecommendationHomeBtnClicked } from './track';\n\nexport const RecommendationsPaintedDoorBtn = ({ placement, experimentVariation }) => {\n  const { isModalOpen, toggleModal } = usePaintedDoorModal();\n\n  const handleClick = () => {\n    toggleModal();\n    trackPaintedDoorRecommendationHomeBtnClicked(experimentVariation);\n  };\n\n  const getPaintedDoorButton = () => {\n    if ([COLLAPSED_NAVBAR, EXPANDED_NAVBAR].includes(placement)) {\n      return (\n        <NavbarButton handleClick={handleClick} placement={placement} />\n      );\n    } if (placement === RECOMMENDATIONS_PANEL) {\n      return (\n        <RecommendationsPanelButton handleClick={handleClick} />\n      );\n    }\n    return null;\n  };\n\n  return (\n    <>\n      {getPaintedDoorButton()}\n      <PaintedDoorModal isOpen={isModalOpen} onClose={toggleModal} variation={experimentVariation} />\n    </>\n  );\n};\n\nRecommendationsPaintedDoorBtn.propTypes = {\n  placement: PropTypes.oneOf([COLLAPSED_NAVBAR, EXPANDED_NAVBAR, RECOMMENDATIONS_PANEL]).isRequired,\n  experimentVariation: PropTypes.string.isRequired,\n};\n\nexport default RecommendationsPaintedDoorBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\nimport { Search } from '@edx/paragon/icons';\nimport { baseAppUrl } from 'data/services/lms/urls';\n\nimport { reduxHooks } from 'hooks';\nimport track from './track';\nimport CourseCard from './components/CourseCard';\nimport messages from './messages';\n\nimport './index.scss';\nimport { usePaintedDoorExperimentContext } from '../RecommendationsPaintedDoorBtn/PaintedDoorExperimentContext';\nimport { RECOMMENDATIONS_PANEL } from '../RecommendationsPaintedDoorBtn/constants';\nimport RecommendationsPaintedDoorBtn from '../RecommendationsPaintedDoorBtn';\n\nexport const LoadedView = ({\n  courses,\n  isControl,\n}) => {\n  const { formatMessage } = useIntl();\n  const { courseSearchUrl } = reduxHooks.usePlatformSettingsData();\n  const {\n    experimentVariation,\n    isPaintedDoorWidgetBtnVariation,\n    experimentLoading,\n  } = usePaintedDoorExperimentContext();\n\n  return (\n    <div className=\"p-4 w-100 panel-background\">\n      <h3 className=\"pb-2\">{isControl === false\n        ? formatMessage(messages.recommendationsHeading) : formatMessage(messages.popularCoursesHeading)}\n      </h3>\n      <div>\n        {courses.map((course) => (\n          <CourseCard\n            key={course.courseKey}\n            course={course}\n            isControl={isControl}\n          />\n        ))}\n      </div>\n      <div className=\"text-center explore-courses-btn\">\n        {!experimentLoading && isPaintedDoorWidgetBtnVariation ? (\n          <RecommendationsPaintedDoorBtn placement={RECOMMENDATIONS_PANEL} experimentVariation={experimentVariation} />\n        ) : (\n          <Button\n            variant=\"tertiary\"\n            iconBefore={Search}\n            as=\"a\"\n            href={baseAppUrl(courseSearchUrl)}\n            onClick={track.findCoursesWidgetClicked(baseAppUrl(courseSearchUrl))}\n          >\n            {formatMessage(messages.exploreCoursesButton)}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nLoadedView.defaultProps = {\n  isControl: true,\n};\n\nLoadedView.propTypes = {\n  courses: PropTypes.arrayOf(PropTypes.shape({\n    courseKey: PropTypes.string,\n    title: PropTypes.string,\n    logoImageUrl: PropTypes.string,\n    marketingUrl: PropTypes.string,\n  })).isRequired,\n  isControl: PropTypes.oneOf([true, false, null]),\n};\n\nexport default LoadedView;\n","// eslint-disable-next-line\nexport default {\"courses\":[{\"courseKey\":\"ETSx+TOEFLx\",\"logoImageUrl\":\"https://prod-discovery.edx-cdn.org/organization/logos/9d9e1a30-c34d-4ad1-8c5a-d2410db8c123-8beea336c2a4.png\",\"marketingUrl\":\"https://www.edx.org/course/toefl-test-preparation-the-insiders-guide?utm_source=lms_catalog_service_user&utm_medium=affiliate_partner\",\"title\":\"TOEFL® Test Preparation: The Insider’s Guide\"},{\"courseKey\":\"HarvardX+CS50P\",\"logoImageUrl\":\"https://prod-discovery.edx-cdn.org/organization/logos/44022f13-20df-4666-9111-cede3e5dc5b6-2cc39992c67a.png\",\"marketingUrl\":\"https://www.edx.org/course/cs50s-introduction-to-programming-with-python?utm_source=lms_catalog_service_user&utm_medium=affiliate_partner\",\"title\":\"CS50's Introduction to Programming with Python\"},{\"courseKey\":\"UQx+IELTSx\",\"logoImageUrl\":\"https://prod-discovery.edx-cdn.org/organization/logos/8554749f-b920-4d7f-8986-af6bb95290aa-f336c6a2ca11.png\",\"marketingUrl\":\"https://www.edx.org/course/ielts-academic-test-preparation?utm_source=lms_catalog_service_user&utm_medium=affiliate_partner\",\"title\":\"IELTS Academic Test Preparation\"},{\"courseKey\":\"QUx+QU01X02\",\"logoImageUrl\":\"https://prod-discovery.edx-cdn.org/organization/logos/7b6ca3d5-1030-408f-b1a4-fb140db1854e-7337e1e6deaf.png\",\"marketingUrl\":\"https://www.edx.org/course/arabic-for-non-arabic-speakers?utm_source=lms_catalog_service_user&utm_medium=affiliate_partner\",\"title\":\"Arabic for non-Arabic Speakers\"},{\"courseKey\":\"HarvardX+CS50W\",\"logoImageUrl\":\"https://prod-discovery.edx-cdn.org/organization/logos/44022f13-20df-4666-9111-cede3e5dc5b6-2cc39992c67a.png\",\"marketingUrl\":\"https://www.edx.org/course/cs50s-web-programming-with-python-and-javascript?utm_source=lms_catalog_service_user&utm_medium=affiliate_partner\",\"title\":\"CS50's Web Programming with Python and JavaScript\"}],\"isControl\":true};\n","import { StrictDict } from 'utils';\nimport { get, stringifyUrl } from 'data/services/lms/utils';\nimport urls from 'data/services/lms/urls';\n\nexport const getFetchUrl = () => (`${urls.getApiUrl()}/edx_recommendations/learner_dashboard/amplitude/`);\nexport const apiKeys = StrictDict({ user: 'user' });\n\nconst fetchRecommendedCourses = () => get(stringifyUrl(getFetchUrl()));\n\nexport default {\n  fetchRecommendedCourses,\n};\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport { RequestStates } from 'data/constants/requests';\n\nimport * as module from './hooks';\nimport testData from './testData';\nimport api from './api';\n\nexport const searchCourseEventName = 'learner_home.widget.search_course';\n\nexport const state = StrictDict({\n  requestState: (val) => React.useState(val), // eslint-disable-line\n  data: (val) => React.useState(val), // eslint-disable-line\n  courses: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useFetchCourses = (setRequestState, setData) => {\n  React.useEffect(() => {\n    let isMounted = true;\n    api.fetchRecommendedCourses().then((response) => {\n      if (isMounted) {\n        setRequestState(RequestStates.completed);\n        setData(response);\n      }\n    }).catch(() => {\n      if (isMounted) {\n        setRequestState(RequestStates.failed);\n      }\n    });\n    return () => { isMounted = false; };\n    /* eslint-disable */\n  }, []);\n};\n\nexport const useRecommendationPanelData = () => {\n  const [requestState, setRequestState] = module.state.requestState(RequestStates.pending);\n  const [data, setData] = module.state.data({});\n  module.useFetchCourses(setRequestState, setData);\n  const [courses, setCourses] = module.state.courses(data.data?.courses || []);\n  const isControl = data.data?.isControl === undefined ? null : data.data?.isControl;\n\n  React.useEffect(() => {\n    window.loadMockRecommendations = () => {\n      setCourses(testData.courses);\n      setRequestState(RequestStates.completed);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    setCourses(data.data?.courses || []);\n  }, [data]);\n\n  return {\n    courses,\n    isControl,\n    isLoaded: requestState === RequestStates.completed && courses.length > 0,\n    isFailed: requestState === RequestStates.failed\n      || (requestState === RequestStates.completed && courses.length === 0),\n    isLoading: requestState === RequestStates.pending,\n  };\n};\n\nexport default {\n  useRecommendationPanelData,\n};\n","import React from 'react';\n\nimport LookingForChallengeWidget from 'widgets/LookingForChallengeWidget';\nimport LoadingView from './LoadingView';\nimport LoadedView from './LoadedView';\nimport hooks from './hooks';\nimport RecommendationsPaintedDoorBtn from '../RecommendationsPaintedDoorBtn';\nimport { RECOMMENDATIONS_PANEL } from '../RecommendationsPaintedDoorBtn/constants';\nimport { usePaintedDoorExperimentContext } from '../RecommendationsPaintedDoorBtn/PaintedDoorExperimentContext';\n\nexport const RecommendationsPanel = () => {\n  const {\n    courses,\n    isControl,\n    isFailed,\n    isLoaded,\n    isLoading,\n  } = hooks.useRecommendationPanelData();\n  const {\n    experimentVariation,\n    isPaintedDoorWidgetBtnVariation,\n    experimentLoading,\n  } = usePaintedDoorExperimentContext();\n\n  const getDefaultOrFailedStateWidget = () => {\n    if (!experimentLoading && isPaintedDoorWidgetBtnVariation) {\n      return (\n        <>\n          <LookingForChallengeWidget />\n          <div className=\"pt-3\" />\n          <RecommendationsPaintedDoorBtn\n            experimentVariation={experimentVariation}\n            placement={RECOMMENDATIONS_PANEL}\n          />\n        </>\n      );\n    }\n    return (\n      <LookingForChallengeWidget />\n    );\n  };\n\n  if (isLoading) {\n    return (<LoadingView />);\n  }\n  if (isLoaded && courses.length > 0) {\n    return (\n      <LoadedView courses={courses} isControl={isControl} />\n    );\n  }\n  if (isFailed) {\n    return getDefaultOrFailedStateWidget();\n  }\n  // default fallback\n  return getDefaultOrFailedStateWidget();\n};\n\nexport default RecommendationsPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useWindowSize, breakpoints } from '@edx/paragon';\nimport { StrictDict } from 'utils';\nimport api from 'widgets/ProductRecommendations/api';\nimport * as module from './ExperimentContext';\n\nexport const state = StrictDict({\n  experiment: (val) => React.useState(val), // eslint-disable-line\n  countryCode: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useCountryCode = (setCountryCode) => {\n  React.useEffect(() => {\n    api\n      .fetchRecommendationsContext()\n      .then((response) => {\n        setCountryCode(response.data.countryCode);\n      })\n      .catch(() => {\n        setCountryCode('');\n      });\n    /* eslint-disable */\n  }, []);\n};\n\nexport const ExperimentContext = React.createContext();\n\nexport const ExperimentProvider = ({ children }) => {\n  const [countryCode, setCountryCode] = module.state.countryCode(null);\n  const [experiment, setExperiment] = module.state.experiment({\n    isExperimentActive: false,\n    inRecommendationsVariant: true,\n  });\n\n  module.useCountryCode(setCountryCode);\n  const { width } = useWindowSize();\n  const isMobile = width < breakpoints.small.minWidth;\n\n  const contextValue = React.useMemo(\n    () => ({\n      experiment,\n      countryCode,\n      setExperiment,\n      setCountryCode,\n      isMobile,\n    }),\n    [experiment, countryCode, setExperiment, setCountryCode, isMobile]\n  );\n\n  return (\n    <ExperimentContext.Provider value={contextValue}>\n      {children}\n    </ExperimentContext.Provider>\n  );\n};\n\nexport const useExperimentContext = () => React.useContext(ExperimentContext);\n\nExperimentProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default { useCountryCode, useExperimentContext };\n","import { get, stringifyUrl } from 'data/services/lms/utils';\nimport urls from 'data/services/lms/urls';\n\nexport const crossProductAndAmplitudeRecommendationsUrl = (courseId) => `${urls.getApiUrl()}/edx_recommendations/learner_dashboard/cross_product/${courseId}/`;\nexport const amplitudeRecommendationsUrl = () => `${urls.getApiUrl()}/edx_recommendations/learner_dashboard/amplitude/v2/`;\nexport const recommendationsContextUrl = () => `${urls.getApiUrl()}/edx_recommendations/learner_dashboard/recommendations_context/`;\n\nconst fetchRecommendationsContext = () => get(stringifyUrl(recommendationsContextUrl()));\n\nconst fetchCrossProductRecommendations = (courseId) => (\n  get(stringifyUrl(crossProductAndAmplitudeRecommendationsUrl(courseId)))\n);\nconst fetchAmplitudeRecommendations = () => get(stringifyUrl(amplitudeRecommendationsUrl()));\n\nexport default {\n  fetchCrossProductRecommendations,\n  fetchAmplitudeRecommendations,\n  fetchRecommendationsContext,\n};\n","export const bootCamp = 'Boot Camp';\nexport const executiveEducation = 'Executive Education';\nexport const course = 'Course';\n\nexport const control = 'control';\nexport const treatment = 'treatment';\nexport const noExperiment = 'no experiment';\n","import { createInstance, setLogLevel } from '@optimizely/react-sdk';\n\nimport { getConfig } from '@edx/frontend-platform';\n\nconst OPTIMIZELY_SDK_KEY = getConfig().OPTIMIZELY_FULL_STACK_SDK_KEY;\n\nconst configureClient = () => {\n  setLogLevel('error');\n\n  return createInstance({\n    sdkKey: OPTIMIZELY_SDK_KEY,\n  });\n};\n\nconst optimizelyClient = configureClient();\n\nexport default optimizelyClient;\n","import { StrictDict } from 'utils';\nimport optimizelyClient from './optimizely';\n\nexport const PRODUCT_RECOMMENDATIONS_EXP_KEY = 'learner_dashboard_product_recommendations_exp';\nexport const PRODUCT_RECOMMENDATIONS_EXP_VARIATION = 'learner_dashboard_product_recommendations_enabled';\n\nexport const eventNames = StrictDict({\n  productRecommendationsViewed: 'product_recommendations_viewed',\n  productHeaderClicked: 'product_header_clicked',\n  productCardClicked: 'product_card_clicked',\n  courseCardClicked: 'course_card_clicked',\n});\n\nexport const activateProductRecommendationsExperiment = (userId, userAttributes) => {\n  const variation = optimizelyClient?.activate(\n    PRODUCT_RECOMMENDATIONS_EXP_KEY,\n    userId,\n    userAttributes,\n  );\n\n  return {\n    experimentActivated: variation !== null,\n    inExperimentVariant: variation === PRODUCT_RECOMMENDATIONS_EXP_VARIATION,\n  };\n};\n\nexport const trackProductRecommendationsViewed = (userId, userAttributes = {}) => {\n  optimizelyClient.track(eventNames.productRecommendationsViewed, userId, userAttributes);\n};\n\nexport const trackProductHeaderClicked = (userId, userAttributes = {}) => {\n  optimizelyClient.track(eventNames.productHeaderClicked, userId, userAttributes);\n};\n\nexport const trackProductCardClicked = (userId, userAttributes = {}) => {\n  optimizelyClient.track(eventNames.productCardClicked, userId, userAttributes);\n};\n\nexport const trackCourseCardClicked = (userId, userAttributes = {}) => {\n  optimizelyClient.track(eventNames.courseCardClicked, userId, userAttributes);\n};\n","import PropTypes from 'prop-types';\nimport { executiveEducation, course, bootCamp } from './constants';\n\nexport const courseShape = {\n  uuid: PropTypes.string,\n  title: PropTypes.string,\n  image: PropTypes.shape({\n    src: PropTypes.string,\n  }),\n  prospectusPath: PropTypes.string,\n  owners: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      name: PropTypes.string,\n      logoImageUrl: PropTypes.string,\n    }),\n  ),\n  activeCourseRun: PropTypes.shape({\n    key: PropTypes.string,\n    marketingUrl: PropTypes.string,\n  }),\n  courseType: PropTypes.string,\n};\n\nexport const courseTypeToProductTypeMap = {\n  course,\n  'verified-audit': course,\n  verified: course,\n  audit: course,\n  'credit-verified-audit': course,\n  'spoc-verified-audit': course,\n  professional: 'Professional Certificate',\n  'bootcamp-2u': bootCamp,\n  'executive-education-2u': executiveEducation,\n  'executive-education': executiveEducation,\n  masters: \"Master's\",\n  'masters-verified-audit': \"Master's\",\n};\n\nexport const courseTypeToProductLineMap = {\n  [executiveEducation]: 'executive-education',\n  [bootCamp]: 'boot-camps',\n  [course]: 'open-courses',\n};\n\nexport const convertCourseRunKeyToCourseKey = (courseRunKey) => {\n  const newKeyFormat = courseRunKey.includes('+');\n  if (newKeyFormat) {\n    const splitCourseRunKey = courseRunKey.split(':').slice(-1)[0];\n    const splitCourseKey = splitCourseRunKey.split('+').slice(0, 2);\n    return `${splitCourseKey[0]}+${splitCourseKey[1]}`;\n  }\n  const splitCourseKey = courseRunKey.split('/').slice(0, 2);\n  return `${splitCourseKey[0]}+${splitCourseKey[1]}`;\n};\n\nexport const wait = (time) => new Promise((resolve) => {\n  setTimeout(resolve, time);\n});\n","import { StrictDict } from 'utils';\nimport { createLinkTracker, createEventTracker } from 'data/services/segment/utils';\nimport { courseTypeToProductLineMap, convertCourseRunKeyToCourseKey } from './utils';\n\nexport const eventNames = StrictDict({\n  productCardClicked: 'edx.bi.2u-product-card.clicked',\n  discoveryCardClicked: 'edx.bi.user.discovery.card.click',\n  recommendationsHeaderClicked: 'edx.bi.link.recommendations.header.clicked',\n  recommendationsViewed: 'edx.bi.user.recommendations.viewed',\n});\n\nexport const productCardClicked = (courseRunKey, courseTitle, courseType, href) => {\n  createLinkTracker(\n    createEventTracker(eventNames.productCardClicked, {\n      label: courseTitle,\n      courserun_key: courseRunKey,\n      page: 'dashboard',\n      product_line: courseTypeToProductLineMap[courseType],\n    }),\n    href,\n  );\n};\n\nexport const discoveryCardClicked = (courseRunKey, courseTitle, href) => {\n  createLinkTracker(\n    createEventTracker(eventNames.discoveryCardClicked, {\n      label: courseTitle,\n      courserun_key: courseRunKey,\n      page: 'dashboard',\n      product_line: 'open-course',\n    }),\n    href,\n  );\n};\n\nexport const recommendationsHeaderClicked = (courseType, href) => {\n  createLinkTracker(\n    createEventTracker(eventNames.recommendationsHeaderClicked, {\n      page: 'dashboard',\n      product_line: courseTypeToProductLineMap[courseType],\n    }),\n    href,\n  );\n};\n\nexport const recommendationsViewed = (isControl, recommenderGroup, courseRunKey) => {\n  createEventTracker(eventNames.recommendationsViewed, {\n    is_control: isControl,\n    productRecommenderGroup: recommenderGroup,\n    page: 'dashboard',\n    course_key: courseRunKey ? convertCourseRunKeyToCourseKey(courseRunKey) : '',\n  });\n};\n","import { useState, useEffect } from 'react';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nimport { RequestStates, RequestKeys } from 'data/constants/requests';\nimport { StrictDict } from 'utils';\nimport { reduxHooks } from 'hooks';\nimport { SortKeys } from 'data/constants/app';\nimport { useWindowSize, breakpoints } from '@edx/paragon';\nimport { useExperimentContext } from 'ExperimentContext';\nimport { control, treatment, noExperiment } from './constants';\nimport { activateProductRecommendationsExperiment, trackProductRecommendationsViewed } from './optimizelyExperiment';\nimport { recommendationsViewed } from './track';\n\nimport api from './api';\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  requestState: (val) => useState(val), // eslint-disable-line\n  data: (val) => useState(val), // eslint-disable-line\n});\n\nexport const useIsMobile = () => {\n  const { width } = useWindowSize();\n  return width < breakpoints.small.minWidth;\n};\n\nexport const useMostRecentCourseRunKey = () => {\n  const mostRecentCourseRunKey = reduxHooks.useCurrentCourseList({\n    sortBy: SortKeys.enrolled,\n    filters: [],\n    pageSize: 0,\n  }).visible[0]?.courseRun?.courseId;\n\n  return mostRecentCourseRunKey;\n};\n\nexport const useActivateRecommendationsExperiment = () => {\n  const enterpriseDashboardData = reduxHooks.useEnterpriseDashboardData();\n  const hasRequestCompleted = reduxHooks.useRequestIsCompleted(RequestKeys.initialize);\n  const mostRecentCourseRunKey = module.useMostRecentCourseRunKey();\n  const userId = getAuthenticatedUser().userId.toString();\n\n  const {\n    experiment: { isExperimentActive },\n    setExperiment,\n    isMobile,\n    countryCode,\n  } = useExperimentContext();\n\n  useEffect(() => {\n    if (!isExperimentActive && countryCode !== null) {\n      const activateExperiment = () => {\n        const userAttributes = {\n          is_mobile_user: isMobile,\n          is_enterprise_user: !!enterpriseDashboardData,\n          location: countryCode ? countryCode.toLowerCase() : '',\n        };\n        const experiment = activateProductRecommendationsExperiment(userId, userAttributes);\n\n        setExperiment((prev) => ({\n          ...prev,\n          isExperimentActive: true,\n          inRecommendationsVariant: experiment.inExperimentVariant,\n        }));\n\n        return experiment;\n      };\n\n      const sendViewedEvent = () => {\n        trackProductRecommendationsViewed(userId);\n        recommendationsViewed(true, control, mostRecentCourseRunKey);\n      };\n\n      if (hasRequestCompleted) {\n        const { experimentActivated, inExperimentVariant } = activateExperiment();\n\n        if (experimentActivated && !inExperimentVariant) {\n          sendViewedEvent();\n        }\n      }\n    }\n  /* eslint-disable */\n  }, [isExperimentActive, countryCode])\n};\n\nexport const useShowRecommendationsFooter = () => {\n  const { experiment } = useExperimentContext();\n\n  return experiment;\n};\n\nexport const useFetchRecommendations = (setRequestState, setData) => {\n  const courseRunKey = module.useMostRecentCourseRunKey();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const handleSuccess = (response) => {\n      if (isMounted) {\n        setData(response.data);\n        setRequestState(RequestStates.completed);\n      }\n    };\n\n    const handleError = () => {\n      if (isMounted) {\n        setRequestState(RequestStates.failed);\n      }\n    };\n\n    if (courseRunKey) {\n      api\n        .fetchCrossProductRecommendations(courseRunKey)\n        .then(handleSuccess)\n        .catch(handleError);\n    } else {\n      api\n        .fetchAmplitudeRecommendations()\n        .then(handleSuccess)\n        .catch(handleError);\n    }\n    return () => {\n      isMounted = false;\n    };\n    /* eslint-disable */\n  }, []);\n};\n\nexport const useSendViewedEvents = (requestState, data) => {\n  const mostRecentCourseRunKey = module.useMostRecentCourseRunKey();\n  const userId = getAuthenticatedUser().userId.toString();\n\n  useEffect(() => {\n    if (requestState === RequestStates.completed) {\n      if (data.crossProductCourses?.length === 2) {\n        trackProductRecommendationsViewed(userId);\n        recommendationsViewed(false, treatment, mostRecentCourseRunKey);\n      } else {\n        trackProductRecommendationsViewed(userId);\n        recommendationsViewed(true, noExperiment, mostRecentCourseRunKey);\n      }\n    }\n  }, [data, requestState])\n}\n\nexport const useProductRecommendationsData = () => {\n  const [requestState, setRequestState] = module.state.requestState(RequestStates.pending);\n  const [data, setData] = module.state.data({});\n\n  module.useFetchRecommendations(setRequestState, setData);\n  module.useSendViewedEvents(requestState, data);\n\n  return {\n    productRecommendations: data,\n    isLoading: requestState === RequestStates.pending,\n    isLoaded: requestState === RequestStates.completed,\n    hasFailed: requestState === RequestStates.failed \n  };\n};\n\nexport default { useProductRecommendationsData, useShowRecommendationsFooter, useIsMobile, useActivateRecommendationsExperiment };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecommendationsPanel from 'widgets/RecommendationsPanel';\nimport hooks from 'widgets/ProductRecommendations/hooks';\n\nexport const WidgetSidebar = ({ setSidebarShowing }) => {\n  const { inRecommendationsVariant, isExperimentActive } = hooks.useShowRecommendationsFooter();\n\n  if (!inRecommendationsVariant && isExperimentActive) {\n    setSidebarShowing(true);\n\n    return (\n      <div className=\"widget-sidebar\">\n        <div className=\"d-flex flex-column\">\n          <RecommendationsPanel />\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nWidgetSidebar.propTypes = {\n  setSidebarShowing: PropTypes.func.isRequired,\n};\n\nexport default WidgetSidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecommendationsPanel from 'widgets/RecommendationsPanel';\nimport hooks from 'widgets/ProductRecommendations/hooks';\n\nexport const WidgetSidebar = ({ setSidebarShowing }) => {\n  const { inRecommendationsVariant, isExperimentActive } = hooks.useShowRecommendationsFooter();\n\n  if (!inRecommendationsVariant && isExperimentActive) {\n    setSidebarShowing(true);\n\n    return (\n      <div className=\"widget-sidebar px-2\">\n        <div className=\"d-flex\">\n          <RecommendationsPanel />\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nWidgetSidebar.propTypes = {\n  setSidebarShowing: PropTypes.func.isRequired,\n};\n\nexport default WidgetSidebar;\n","import React from 'react';\nimport { Spinner } from '@edx/paragon';\n\nimport hooks from './hooks';\n\nexport const LoadingView = () => {\n  const { spinnerScreenReaderText } = hooks.useDashboardMessages();\n\n  return (\n    <div className=\"course-list-loading\">\n      <Spinner\n        animation=\"border\"\n        className=\"mie-3\"\n        screenReaderText={spinnerScreenReaderText}\n      />\n    </div>\n  );\n};\n\nexport default LoadingView;\n","import React from 'react';\nimport { Skeleton } from '@edx/paragon';\n\nexport const LoadingView = () => (\n  <Skeleton height={100} />\n);\n\nexport default LoadingView;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  recommendationsHeading: {\n    id: 'ProductRecommendations.recommendationsHeading',\n    defaultMessage: 'You might also like',\n    description: 'Title for a list of recommended courses',\n  },\n  executiveEducationHeading: {\n    id: 'ProductRecommendations.executiveEducationHeading',\n    defaultMessage: 'Executive Education',\n    description: 'Heading for an executive education course recommendation',\n  },\n  executiveEducationDescription: {\n    id: 'ProductRecommendations.executiveEducationDescription',\n    defaultMessage: 'Short Courses to develop leadership skills',\n    description: 'Short description of an executive education course',\n  },\n  bootcampHeading: {\n    id: 'ProductRecommendations.bootcampHeading',\n    defaultMessage: 'Boot Camp',\n    description: 'Heading for a bootcamp course recommendation',\n  },\n  bootcampDescription: {\n    id: 'ProductRecommendations.bootcampDescription',\n    defaultMessage: 'Intensive, hands-on, project based training',\n    description: 'Short description of a bootcamp course',\n  },\n  courseHeading: {\n    id: 'ProductRecommendations.courseHeading',\n    defaultMessage: 'Courses',\n    description: 'Heading for an open course recommendation',\n  },\n  courseDescription: {\n    id: 'ProductRecommendations.courseDescription',\n    defaultMessage: 'Find new interests and advance your career',\n    description: 'Heading for an open course recommendation',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Badge,\n  Card,\n  Truncate,\n  Hyperlink,\n} from '@edx/paragon';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nimport { trackProductCardClicked, trackCourseCardClicked } from '../optimizelyExperiment';\nimport { productCardClicked, discoveryCardClicked } from '../track';\nimport { bootCamp, executiveEducation } from '../constants';\n\nconst ProductCard = ({\n  title,\n  subtitle,\n  headerImage,\n  courseRunKey,\n  schoolLogo,\n  courseType,\n  url,\n}) => {\n  const handleClick = (type, link) => {\n    const crossProductTypes = [executiveEducation, bootCamp];\n    const userId = getAuthenticatedUser().userId.toString();\n\n    if (crossProductTypes.includes(type)) {\n      trackProductCardClicked(userId);\n      productCardClicked(courseRunKey, title, type, link);\n    } else {\n      trackCourseCardClicked(userId);\n      discoveryCardClicked(courseRunKey, title, link);\n    }\n  };\n\n  const getRedirectUrl = (link) => {\n    const urlObj = new URL(link);\n    const hasQueryStringParameters = urlObj.search !== '';\n\n    if (hasQueryStringParameters) {\n      return `${link}&linked_from=recommender`;\n    }\n\n    return `${link}?linked_from=recommender`;\n  };\n\n  const redirectUrl = getRedirectUrl(url);\n\n  return (\n    <Card\n      className=\"base-card d-flex text-decoration-none\"\n      as={Hyperlink}\n      destination={redirectUrl}\n      onClick={() => {\n        handleClick(courseType, redirectUrl);\n      }}\n      isClickable\n    >\n      <Card.ImageCap\n        src={headerImage}\n        srcAlt={`header image for ${title}`}\n        logoSrc={schoolLogo}\n        logoAlt={`logo for ${subtitle}`}\n      />\n      <Card.Header\n        className=\"mt-2\"\n        title={(\n          <Truncate lines={3} ellipsis=\"…\" className=\"product-card-title font-weight-bold\">\n            {title}\n          </Truncate>\n        )}\n        subtitle={(\n          <Truncate lines={1} className=\"product-card-subtitle font-weight-normal\">\n            {subtitle}\n          </Truncate>\n      )}\n      />\n      <Card.Section>\n        <div className=\"product-badge position-absolute\">\n          <Badge className=\"bg-light-500 text-dark-500\">{courseType}</Badge>\n        </div>\n      </Card.Section>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  headerImage: PropTypes.string.isRequired,\n  courseRunKey: PropTypes.string.isRequired,\n  schoolLogo: PropTypes.string.isRequired,\n  courseType: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nimport { Icon, Hyperlink } from '@edx/paragon';\nimport { ChevronRight } from '@edx/paragon/icons';\nimport { getConfig } from '@edx/frontend-platform';\nimport { trackProductHeaderClicked } from '../optimizelyExperiment';\nimport { recommendationsHeaderClicked } from '../track';\nimport { executiveEducation, bootCamp } from '../constants';\nimport messages from '../messages';\n\nconst ProductCardHeader = ({ courseType }) => {\n  const getProductTypeDetail = (type) => {\n    switch (type) {\n      case executiveEducation:\n        return {\n          heading: messages.executiveEducationHeading,\n          description: messages.executiveEducationDescription,\n          url: '/executive-education?linked_from=recommender',\n        };\n      case bootCamp:\n        return {\n          heading: messages.bootcampHeading,\n          description: messages.bootcampDescription,\n          url: '/boot-camps?linked_from=recommender',\n        };\n      default: {\n        return {\n          heading: messages.courseHeading,\n          description: messages.courseDescription,\n          url: '/search?tab=course',\n        };\n      }\n    }\n  };\n\n  const handleClick = (type, url) => {\n    const userId = getAuthenticatedUser().userId.toString();\n\n    trackProductHeaderClicked(userId);\n    recommendationsHeaderClicked(type, url);\n  };\n\n  const { formatMessage } = useIntl();\n  const productTypeDetail = getProductTypeDetail(courseType);\n  const headerUrl = `${getConfig().MARKETING_SITE_BASE_URL}${productTypeDetail.url}`;\n\n  return (\n    <div>\n      <Hyperlink\n        destination={headerUrl}\n        className=\"base-card-link text-decoration-none\"\n        onClick={() => {\n          handleClick(courseType, headerUrl);\n        }}\n      >\n        <div className=\"d-flex align-items-center border-bottom\">\n          <h3 className=\"h3 mb-2 text-left\">\n            {formatMessage(productTypeDetail.heading)}\n          </h3>\n          <Icon src={ChevronRight} className=\"text-primary-500 ml-2.5\" />\n        </div>\n      </Hyperlink>\n      <p className=\"text-gray-500 x-small mt-2 mb-2\">\n        {formatMessage(productTypeDetail.description)}\n      </p>\n    </div>\n  );\n};\n\nProductCardHeader.propTypes = {\n  courseType: PropTypes.string.isRequired,\n};\n\nexport default ProductCardHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { courseShape, courseTypeToProductTypeMap } from '../utils';\nimport { course } from '../constants';\nimport ProductCard from './ProductCard';\nimport ProductCardHeader from './ProductCardHeader';\n\nconst ProductCardContainer = ({ finalProductList, courseTypes }) => (\n  <div className=\"product-card-container d-flex\">\n    {finalProductList\n      && courseTypes.map((type) => (\n        <div key={type}>\n          <ProductCardHeader courseType={type} />\n          <div\n            className={classNames('d-flex', {\n              'course-subcontainer': type === course,\n            })}\n          >\n            {finalProductList\n              .filter((courseObj) => courseTypeToProductTypeMap[courseObj.courseType] === type)\n              .map((item) => (\n                <ProductCard\n                  key={item.title}\n                  url={item.marketingUrl}\n                  title={item.title}\n                  subtitle={item.owners[0].name}\n                  headerImage={item.image.src}\n                  courseRunKey={item.courseRunKey}\n                  schoolLogo={item.owners[0].logoImageUrl}\n                  courseType={type}\n                />\n              ))}\n          </div>\n        </div>\n      ))}\n  </div>\n);\n\nProductCardContainer.propTypes = {\n  finalProductList: PropTypes.arrayOf(\n    PropTypes.shape(courseShape),\n  ).isRequired,\n  courseTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ProductCardContainer;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport messages from '../messages';\nimport { courseShape, courseTypeToProductTypeMap } from '../utils';\nimport ProductCardContainer from './ProductCardContainer';\n\nconst LoadedView = ({ crossProductCourses, openCourses }) => {\n  const { formatMessage } = useIntl();\n  const includesCrossProductTypes = crossProductCourses.length === 2;\n\n  const finalProductList = useMemo(() => {\n    if (includesCrossProductTypes) {\n      const openCourseList = openCourses.slice(0, 2);\n      return crossProductCourses.concat(openCourseList);\n    }\n    return openCourses;\n  }, [crossProductCourses, openCourses, includesCrossProductTypes]);\n\n  const courseTypes = [...new Set(finalProductList.map((item) => courseTypeToProductTypeMap[item.courseType]))];\n\n  return (\n    <Container\n      size=\"lg\"\n      className=\"recommendations-container pt-sm-5 pt-4.5 pb-2 pb-sm-4.5\"\n    >\n      <h2>\n        {formatMessage(messages.recommendationsHeading)}\n      </h2>\n      <ProductCardContainer finalProductList={finalProductList} courseTypes={courseTypes} />\n    </Container>\n  );\n};\n\nLoadedView.propTypes = {\n  crossProductCourses: PropTypes.arrayOf(\n    PropTypes.shape(courseShape),\n  ).isRequired,\n  openCourses: PropTypes.arrayOf(\n    PropTypes.shape(courseShape),\n  ).isRequired,\n};\n\nexport default LoadedView;\n","import React from 'react';\nimport './index.scss';\nimport { reduxHooks } from 'hooks';\nimport NoCoursesView from 'containers/CourseList/NoCoursesView';\nimport LoadingView from './components/LoadingView';\nimport LoadedView from './components/LoadedView';\nimport hooks from './hooks';\n\nconst ProductRecommendations = () => {\n  const checkEmptyResponse = (obj) => {\n    const values = Object.values(obj);\n    const result = values.filter((item) => item.length === 0);\n    return result.length === values.length;\n  };\n\n  const { productRecommendations, isLoading, isLoaded } = hooks.useProductRecommendationsData();\n  const isMobile = hooks.useIsMobile();\n  const hasCourses = reduxHooks.useHasCourses();\n  const shouldShowPlaceholder = checkEmptyResponse(productRecommendations);\n\n  if (isLoading && !isMobile) {\n    return <LoadingView />;\n  }\n\n  if (isLoaded && !isMobile && !shouldShowPlaceholder) {\n    return (\n      <LoadedView\n        openCourses={productRecommendations.amplitudeCourses}\n        crossProductCourses={productRecommendations.crossProductCourses || []}\n      />\n    );\n  }\n\n  if (isLoaded && hasCourses && !isMobile && shouldShowPlaceholder) {\n    return <NoCoursesView />;\n  }\n  return null;\n};\n\nexport default ProductRecommendations;\n","import React from 'react';\n\nimport ProductRecommendations from 'widgets/ProductRecommendations';\nimport hooks from 'widgets/ProductRecommendations/hooks';\n\nexport const WidgetFooter = () => {\n  hooks.useActivateRecommendationsExperiment();\n  const { inRecommendationsVariant, isExperimentActive } = hooks.useShowRecommendationsFooter();\n\n  if (inRecommendationsVariant && isExperimentActive) {\n    return (\n      <div className=\"widget-footer\">\n        <ProductRecommendations />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default WidgetFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Col, Row } from '@edx/paragon';\n\nimport WidgetFooter from 'containers/WidgetContainers/WidgetFooter';\nimport hooks from './hooks';\n\nexport const columnConfig = {\n  courseList: {\n    withSidebar: {\n      lg: { span: 12, offset: 0 },\n      xl: { span: 8, offset: 0 },\n    },\n    noSidebar: {\n      lg: { span: 12, offset: 0 },\n      xl: { span: 12, offset: 0 },\n    },\n  },\n  sidebar: {\n    lg: { span: 12, offset: 0 },\n    xl: { span: 4, offset: 0 },\n  },\n};\n\nexport const DashboardLayout = ({ children, sidebar: Sidebar }) => {\n  const {\n    isCollapsed,\n    sidebarShowing,\n    setSidebarShowing,\n  } = hooks.useDashboardLayoutData();\n\n  const courseListColumnProps = sidebarShowing\n    ? columnConfig.courseList.withSidebar\n    : columnConfig.courseList.noSidebar;\n\n  return (\n    <Container fluid size=\"xl\">\n      <Row>\n        <Col {...courseListColumnProps} className=\"course-list-column\">\n          {children}\n        </Col>\n        <Col {...columnConfig.sidebar} className=\"sidebar-column\">\n          {!isCollapsed && (<h2 className=\"course-list-title\">&nbsp;</h2>)}\n          <Sidebar setSidebarShowing={setSidebarShowing} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <WidgetFooter />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nDashboardLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  sidebar: PropTypes.func.isRequired,\n};\n\nexport default DashboardLayout;\n","import React from 'react';\n\nimport { reduxHooks } from 'hooks';\nimport { RequestKeys } from 'data/constants/requests';\nimport EnterpriseDashboardModal from 'containers/EnterpriseDashboardModal';\nimport SelectSessionModal from 'containers/SelectSessionModal';\nimport CourseList from 'containers/CourseList';\n\nimport LoadedSidebar from 'containers/WidgetContainers/LoadedSidebar';\nimport NoCoursesSidebar from 'containers/WidgetContainers/NoCoursesSidebar';\n\nimport LoadingView from './LoadingView';\nimport DashboardLayout from './DashboardLayout';\nimport hooks from './hooks';\nimport './index.scss';\n\nexport const Dashboard = () => {\n  hooks.useInitializeDashboard();\n  const { pageTitle } = hooks.useDashboardMessages();\n  const hasCourses = reduxHooks.useHasCourses();\n  const hasAvailableDashboards = reduxHooks.useHasAvailableDashboards();\n  const initIsPending = reduxHooks.useRequestIsPending(RequestKeys.initialize);\n  const showSelectSessionModal = reduxHooks.useShowSelectSessionModal();\n\n  return (\n    <div id=\"dashboard-container\" className=\"d-flex flex-column p-2 pt-0\">\n      <h1 className=\"sr-only\">{pageTitle}</h1>\n      {!initIsPending && (\n        <>\n          {hasAvailableDashboards && <EnterpriseDashboardModal />}\n          {(hasCourses && showSelectSessionModal) && <SelectSessionModal />}\n        </>\n      )}\n      <div id=\"dashboard-content\">\n        {initIsPending\n          ? (<LoadingView />)\n          : (\n            <DashboardLayout sidebar={hasCourses ? LoadedSidebar : NoCoursesSidebar}>\n              <CourseList />\n            </DashboardLayout>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { StrictDict } from 'utils';\n\nexport const messages = StrictDict({\n  supportTitle: {\n    id: 'zendesk.supportTitle',\n    description: 'Title for the support button',\n    defaultMessage: 'edX Support',\n  },\n  selectTicketForm: {\n    id: 'zendesk.selectTicketForm',\n    description: 'Select ticket form',\n    defaultMessage: 'Please choose your request type:',\n  },\n});\n\nexport default messages;\n","import React from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport Zendesk from 'react-zendesk';\nimport messages from './messages';\n\nconst ZendeskFab = () => {\n  const { formatMessage } = useIntl();\n  const setting = {\n    cookies: true,\n    webWidget: {\n      contactOptions: {\n        enabled: false,\n      },\n      chat: {\n        suppress: false,\n        departments: {\n          enabled: ['account settings', 'billing and payments', 'certificates', 'deadlines', 'errors and technical issues', 'other', 'proctoring'],\n        },\n      },\n      contactForm: {\n        ticketForms: [\n          {\n            id: 360003368814,\n            subject: false,\n            fields: [{ id: 'description', prefill: { '*': '' } }],\n          },\n        ],\n        selectTicketForm: {\n          '*': formatMessage(messages.selectTicketForm),\n        },\n        attachments: true,\n      },\n      helpCenter: {\n        originalArticleButton: true,\n      },\n      answerBot: {\n        suppress: false,\n        contactOnlyAfterQuery: true,\n        title: { '*': formatMessage(messages.supportTitle) },\n        avatar: {\n          url: 'https://edx-cdn.org/v3/prod/favicon.ico',\n          name: { '*': formatMessage(messages.supportTitle) },\n        },\n      },\n    },\n  };\n\n  return (\n    <Zendesk defer zendeskKey={getConfig().ZENDESK_KEY} {...setting} />\n  );\n};\n\nexport default ZendeskFab;\n","import { StrictDict } from 'utils';\n\nexport const requestStatuses = StrictDict({\n  pending: 'pending',\n  approved: 'approved',\n  rejected: 'rejected',\n});\n\nexport default { requestStatuses };\n","import { StrictDict } from 'utils';\nimport creditVals from 'data/constants/credit';\n\nexport const providers = StrictDict({\n  edx: { name: 'edX Course Provider' },\n  mit: { name: 'MIT' },\n});\n\nexport const relatedPrograms = [\n  {\n    provider: 'HarvardX',\n    bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/course/image/327c8e4f-315a-417b-9857-046dfc90c243-677b97464958.small.jpg',\n    logoImgSrc: 'https://prod-discovery.edx-cdn.org/organization/certificate_logos/44022f13-20df-4666-9111-cede3e5dc5b6-770e00385e7e.png',\n    title: 'Relativity in Modern Mechanics',\n    programUrl: 'www.edx/my-program',\n    programType: 'MicroBachelors Program',\n    numberOfCourses: 3,\n  },\n  {\n    provider: 'University  of Maryland',\n    bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/programs/banner_images/9a310b98-8f27-439e-be85-12d6460245c9-f2efca129273.small.jpg',\n    logoImgSrc: 'https://prod-discovery.edx-cdn.org/organization/certificate_logos/b9dc96da-b3fc-45a6-b6b7-b8e12eb79335-ac60112330e3.png',\n    title: 'Pandering for Modern Professionals',\n    programUrl: 'www.edx/my-program-2',\n    programType: 'MicroBachelors Program',\n    programTypeUrl: 'www.edx/my-program-type',\n    numberOfCourses: 3,\n  },\n  {\n    provider: 'HarvardX',\n    bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/course/image/327c8e4f-315a-417b-9857-046dfc90c243-677b97464958.small.jpg',\n    logoImgSrc: 'https://prod-discovery.edx-cdn.org/organization/certificate_logos/44022f13-20df-4666-9111-cede3e5dc5b6-770e00385e7e.png',\n    title: 'Relativity in Modern Mechanics',\n    programUrl: 'www.edx/my-program-3',\n    programType: 'MicroBachelors Program',\n    numberOfCourses: 3,\n  },\n  {\n    provider: 'University  of Maryland',\n    bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/programs/banner_images/9a310b98-8f27-439e-be85-12d6460245c9-f2efca129273.small.jpg',\n    logoImgSrc: 'https://prod-discovery.edx-cdn.org/organization/certificate_logos/b9dc96da-b3fc-45a6-b6b7-b8e12eb79335-ac60112330e3.png',\n    title: 'Pandering for Modern Professionals',\n    programUrl: 'www.edx/my-program-4',\n    programType: 'MicroBachelors Program',\n    programTypeUrl: 'www.edx/my-program-type',\n    numberOfCourses: 3,\n  },\n];\n\nexport const genCardId = (index) => `card-id${index}`;\nexport const genCourseId = (index) => `course-number${index}-course-id${index}`;\nexport const genCourseNumber = (index) => `course-number${index}`;\nexport const genCourseShareUrl = (index) => `home.edx.org?social-share-url/${index}`;\nexport const genEntitlementUUID = (index) => `entitlement-course-uuid-${index}`;\n\nconst bannerImgSrc = '/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg';\n\nexport const farPastDate = '1900-11-11T00:00:00Z';\nexport const pastDate = '2000-11-11T00:00:00Z';\nexport const futureDate = '3030-11-11T00:00:00Z';\nexport const farFutureDate = '4040-11-11T00:00:00Z';\nexport const soonDate = new Date();\nsoonDate.setDate(soonDate.getDate() + 60);\nexport const soonDateStr = soonDate.toDateString();\n\nexport const globalData = {\n  emailConfirmation: {\n    isNeeded: true,\n    sendEmailUrl: 'sendConfirmation@edx.org',\n  },\n  enterpriseDashboard: { label: 'edX, Inc.', url: '/edx-dashboard' },\n  platformSettings: {\n    supportEmail: 'support@example.com',\n    billingEmail: 'billing@email.com',\n    courseSearchUrl: 'edx.com/course-search',\n  },\n  suggestedCourses: [\n    {\n      bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/programs/banner_images/9a310b98-8f27-439e-be85-12d6460245c9-f2efca129273.small.jpg',\n      courseName: 'Suggested course 1',\n      courseUrl: 'www.edx/suggested-course',\n    },\n    {\n      bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/programs/banner_images/9a310b98-8f27-439e-be85-12d6460245c9-f2efca129273.small.jpg',\n      courseName: 'Suggested course 2 with a really really really long name for some reason',\n      courseUrl: 'www.edx/suggested-course',\n    },\n    {\n      bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/programs/banner_images/9a310b98-8f27-439e-be85-12d6460245c9-f2efca129273.small.jpg',\n      courseName: 'Suggested course 3',\n      courseUrl: 'www.edx/suggested-course',\n    },\n    {\n      bannerImgSrc: 'https://prod-discovery.edx-cdn.org/media/programs/banner_images/9a310b98-8f27-439e-be85-12d6460245c9-f2efca129273.small.jpg',\n      courseName: 'Suggested course 4',\n      courseUrl: 'www.edx/suggested-course',\n    },\n  ],\n  socialShareSettings: {\n    facebook: {\n      isEnabled: true,\n      socialBrand: 'edx.org',\n      utmParams: 'utm_campaign=social-sharing-db&utm_medium=social&utm_source=facebook',\n    },\n    twitter: {\n      isEnabled: true,\n      socialBrand: 'edx.org',\n      utmParams: 'utm_campaign=social-sharing-db&utm_medium=social&utm_source=twitter',\n    },\n  },\n};\n\nexport const genCourseRunData = (data = {}) => ({\n  isStarted: false,\n  isArchived: false,\n  startDate: data.isStarted ? farPastDate : futureDate,\n  endDate: farFutureDate,\n  minPassingGrade: '0.70',\n  homeUrl: 'edx.com/courses/my-course-url/home',\n  marketingUrl: 'edx.com/courses/my-course-url/marketing',\n  progressUrl: 'edx.com/courses/my-course-url/progress',\n  unenrollUrl: 'edx.com/courses/my-course-url/unenroll',\n  resumeUrl: 'edx.com/courses/my-course-url/resume',\n  ...data,\n});\n\nexport const creditData = {\n  providerStatusUrl: 'test-provider-status-url',\n  providerName: 'Credit Provider Name',\n  providerId: 'credit-provider-id',\n  error: false,\n  purchased: false,\n  requestStatus: null,\n};\n\nexport const genEnrollmentData = (data = {}) => ({\n  coursewareAccess: {\n    isTooEarly: false,\n    hasUnmetPrerequisites: false,\n    isStaff: false,\n  },\n  accessExpirationDate: ((data.isEnrolled === false) ? null : futureDate),\n  canUpgrade: (data.isVerified ? null : true),\n  hasStarted: false,\n  isAudit: !data.isVerified && (data.isEnrolled !== false),\n  isAuditAccessExpired: data.isVerified ? null : false,\n  isEmailEnabled: false,\n  hasOptedOutOfEmail: false,\n  isEnrolled: true,\n  isVerified: false,\n  ...data,\n});\n\nexport const genCertificateData = (data = {}) => ({\n  availableDate: null,\n  isRestricted: false,\n  isEarned: false,\n  isDownloadable: false,\n  certPreviewUrl: 'edx.com/courses/my-course-url/cert-preview',\n  ...data,\n});\n\nexport const availableSessions = [\n  {\n    startDate: '2000-01-02T00:00:00Z',\n    endDate: '2020-01-02T00:00:00Z',\n    courseId: genCourseId(1000),\n  },\n  {\n    startDate: '2000-02-03T00:00:00Z',\n    endDate: '2020-02-03T00:00:00Z',\n    courseId: genCourseId(1001),\n  },\n  {\n    startDate: '2000-03-04T00:00:00Z',\n    endDate: '2020-03-04T00:00:00Z',\n    courseId: genCourseId(1002),\n  },\n  {\n    startDate: '2000-04-05T00:00:00Z',\n    endDate: '2020-04-05T00:00:00Z',\n    courseId: genCourseId(1003),\n  },\n  {\n    startDate: '2000-05-06T00:00:00Z',\n    endDate: '2020-05-06T00:00:00Z',\n    courseId: genCourseId(1004),\n  },\n];\n\nconst auditCourses = [\n  // audit, course run not started\n  {\n    courseName: 'Audit Course, Course run not started',\n  },\n  // audit, course run not started, too early to view\n  {\n    courseName: 'Audit Course, Course run not started, Too early to view',\n    enrollment: {\n      coursewareAccess: {\n        isTooEarly: true,\n        hasUnmetPrerequisites: false,\n        isStaff: false,\n      },\n    },\n  },\n  // audit, course run not started, too early to view and unmet prereqs\n  {\n    courseName: 'Audit Course, Course run not started, Too early to view, Has unmet prereqs.',\n    enrollment: {\n      coursewareAccess: {\n        isTooEarly: true,\n        hasUnmetPrerequisites: true,\n        isStaff: false,\n      },\n    },\n  },\n  // audit, course run started\n  {\n    courseName: 'Audit Course, Course run not started',\n    courseRun: { isStarted: true },\n  },\n  // audit, course run started, unmet prereqs\n  {\n    courseName: 'Audit Course, Course run not started, Has unmet prereqs',\n    enrollment: {\n      coursewareAccess: {\n        isTooEarly: true,\n        hasUnmetPrerequisites: true,\n        isStaff: false,\n      },\n    },\n    courseRun: { isStarted: true },\n  },\n  // audit, course run started, access expired, learner not started\n  {\n    courseName: 'Audit Course, Course run started, Audit ccess expired, Learner not started',\n    courseRun: { isStarted: true },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      isAuditAccessExpired: true,\n    },\n  },\n  // audit, course run started, access expired, cannot upgrade, learner not started\n  {\n    courseName: 'Audit course, Course run not started, Audit access expired, Cannot upgrade, Learner not started',\n    courseRun: { isStarted: true },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      canUpgrade: false,\n      isAuditAccessExpired: true,\n    },\n  },\n  // audit, course run ended, access expired, cannot upgrade, learner not started\n  {\n    courseName: 'Audit Course, Course run ended, Audit access expired, Cannot upgrade, Learner not started',\n    courseRun: {\n      endDate: pastDate,\n      isStarted: true,\n    },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      isAuditAccessExpired: true,\n    },\n  },\n  // audit, course run archived, access expired, cannot upgrade, learner not started\n  {\n    courseName: 'Audit Course, Course run archived, Audit access expired, Cannot upgrade, Learner not started',\n    courseRun: {\n      endDate: pastDate,\n      isArchived: true,\n      isStarted: true,\n    },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      isAuditAccessExpired: true,\n    },\n  },\n  // audit, course run and learner started, passing\n  {\n    courseName: 'Audit Course, Course run and learner started, Passing',\n    courseRun: { isStarted: true },\n    enrollment: { hasStarted: true },\n  },\n  // audit, course run and learner started, access expired\n  {\n    courseName: 'Audit Course, Course run and learner started, Audit access expired',\n    courseRun: { isStarted: true },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      isAuditAccessExpired: true,\n      hasStarted: true,\n    },\n  },\n  // audit, course run and learner started, access expired, cannot upgrade\n  {\n    courseName: 'Audit Course, Course run and learner started, Audit access expired, Cannot upgrade',\n    courseRun: { isStarted: true },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      canUpgrade: false,\n      isAuditAccessExpired: true,\n      hasStarted: true,\n    },\n  },\n  // audit, course run ended, learner started, expired, cannot upgraded, not passing\n  {\n    courseName: 'Audit Course, Course run ended, Learner started, Access expired, Cannot upgrade, Not passing',\n    courseRun: {\n      isStarted: true,\n      endDate: pastDate,\n    },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      canUpgrade: false,\n      isAuditAccessExpired: true,\n      hasStarted: true,\n    },\n    grade: { isPassing: false },\n  },\n  // audit, course run archived, learner started, expired, cannot upgrade, not passing\n  {\n    courseName: 'Audit Course, Course run archived, Learner started, Access expired, Cannot upgrade, Not passing',\n    courseRun: {\n      isStarted: true,\n      isArchived: true,\n      endDate: pastDate,\n    },\n    enrollment: {\n      accessExpirationDate: pastDate,\n      canUpgrade: false,\n      isAuditAccessExpired: true,\n      hasStarted: true,\n    },\n    grade: { isPassing: false },\n  },\n];\nconst verifiedCourses = [\n  // verified, course not started, learner not started\n  {\n    courseName: 'Verified Course, Course and learner not started',\n    enrollment: { isVerified: true },\n  },\n  // verified, course started, learner not started\n  {\n    courseName: 'Verified Course, Course started, Learner not started',\n    courseRun: { isStarted: true },\n    enrollment: { isVerified: true },\n  },\n  // verified, course started, learner started, passing\n  {\n    courseName: 'Verified Course, Course and learner started, Passing',\n    courseRun: { isStarted: true },\n    enrollment: { hasStarted: true, isVerified: true },\n  },\n  // verified, course started, learner started, not passing\n  {\n    courseName: 'Verified Course, Course and learner started, not passing',\n    courseRun: { isStarted: true },\n    gradeData: { isPassing: false },\n    enrollment: { hasStarted: true, isVerified: true },\n  },\n  // verified, learner finished, not passing, cert not earned\n  {\n    courseName: 'Verified Course, Learner finished, cert not earned',\n    enrollment: {\n      hasStarted: true,\n      isVerified: true,\n    },\n    courseRun: { isStarted: true, isArchived: true },\n    gradeData: { isPassing: false },\n    certificate: {\n      isEarned: false,\n    },\n  },\n  // verified, learner finished, passing, cert earned but not available\n  {\n    courseName: 'Verified Course, Learner finished, Cert earned but not available',\n    enrollment: {\n      hasStarted: true,\n      isVerified: true,\n    },\n    courseRun: { isStarted: true, isArchived: true },\n    certificate: {\n      isEarned: true,\n      availableDate: futureDate,\n    },\n  },\n  // verified, learner finished, passing, restricted\n  {\n    courseName: 'Verified Course, Learner finished, Passing, Certificate restricted',\n    enrollment: {\n      hasStarted: true,\n      isVerified: true,\n    },\n    courseRun: { isStarted: true, isArchived: true },\n    certificate: { isRestricted: true },\n  },\n  // verified, learner finished, cert earned, downloadable (web + link)\n  {\n    courseName: 'Verified Course, Learner finished, Passing, Certificate downloadable and viewable',\n    enrollment: {\n      hasStarted: true,\n      isVerified: true,\n    },\n    courseRun: { isStarted: true, isArchived: true },\n    certificate: {\n      isEarned: true,\n      isDownloadable: true,\n      availableDate: pastDate,\n      certPreviewUrl: bannerImgSrc,\n    },\n  },\n  // verified, course ended, learner finished, cert earned, downloadable (link only),\n  {\n    courseName: 'Verified Course, Course ended, Learner finished, Passing, Certificate downloadable',\n    enrollment: {\n      hasStarted: true,\n      isVerified: true,\n    },\n    courseRun: {\n      isStarted: true,\n      isArchived: true,\n      endDate: pastDate,\n    },\n    certificate: {\n      isEarned: true,\n      isDownloadable: true,\n      availableDate: pastDate,\n    },\n  },\n  // verified, course ended, learner finished, cert earned, downloadable (web + link)\n  {\n    courseName: 'Verified Course, Course ended, Learner finished, Passing, Certificate downloadable and viewable',\n    enrollment: {\n      hasStarted: true,\n      isVerified: true,\n    },\n    courseRun: {\n      isStarted: true,\n      isArchived: true,\n      endDate: pastDate,\n    },\n    certificate: {\n      isEarned: true,\n      isDownloadable: true,\n      availableDate: pastDate,\n      certPreviewUrl: bannerImgSrc,\n    },\n  },\n];\nconst fulfilledEntitlementCourses = [\n  // Entitlement - not started\n  {\n    courseName: 'Entitlement Course, not started',\n    enrollment: {\n      isVerified: true,\n      coursewareAccess: {\n        isTooEarly: true,\n        hasUnmetPrerequisites: false,\n        isStaff: false,\n      },\n    },\n    courseRun: { isStarted: false },\n    entitlement: {\n      uuid: genEntitlementUUID(0),\n      availableSessions,\n      changeDeadline: futureDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: true,\n      isRefundable: true,\n    },\n  },\n  // Entitlement - Course run started, learner not started, unmet prereqs\n  {\n    courseName: 'Entitlement Course, Course run started, Learner not started, Has unmet prereqs',\n    enrollment: {\n      isVerified: true,\n      coursewareAccess: {\n      },\n    },\n    courseRun: { isStarted: true },\n    entitlement: {\n      uuid: genEntitlementUUID(1),\n      availableSessions,\n      changeDeadline: futureDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: true,\n      isRefundable: true,\n    },\n  },\n  // Entitlement - Course run started, learner started, not passing\n  {\n    courseName: 'Entitlement Course, Course run started, Learner started, Not passing',\n    enrollment: {\n      isVerified: true,\n      hasStarted: true,\n    },\n    courseRun: { isStarted: true },\n    entitlement: {\n      uuid: genEntitlementUUID(2),\n      availableSessions,\n      changeDeadline: futureDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: true,\n      isRefundable: true,\n    },\n    gradeData: { isPassing: false },\n  },\n  // Entitlement - Course run started, learner started, passing, cannot change\n  {\n    courseName: 'Entitlement Course, Course run and learner started, Passing, Cannot change sessions',\n    enrollment: {\n      isVerified: true,\n      hasStarted: true,\n    },\n    courseRun: { isStarted: true },\n    entitlement: {\n      uuid: genEntitlementUUID(3),\n      availableSessions,\n      changeDeadline: pastDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: true,\n      isRefundable: true,\n    },\n  },\n  // Entitlement - Learner finished, but did not pass\n  {\n    courseName: 'Entitlement Course, Learner finished but did not pass',\n    enrollment: {\n      isVerified: true,\n    },\n    courseRun: { isStarted: true, isArchived: false },\n    entitlement: {\n      uuid: genEntitlementUUID(4),\n      availableSessions: null,\n      changeDeadline: pastDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: true,\n      isRefundable: false,\n    },\n    gradeData: { isPassing: false },\n  },\n  // Entitlement - Learner finished, and passed.  cannot refund.  previewable cert.\n  {\n    courseName: 'Entitlement course, Learner finished and passed, Cannot refund, Previewable Cert',\n    enrollment: {\n      isVerified: true,\n    },\n    courseRun: { isStarted: true, isArchived: false },\n    entitlement: {\n      uuid: genEntitlementUUID(5),\n      availableSessions: null,\n      changeDeadline: pastDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: true,\n      isRefundable: false,\n    },\n    certificate: {\n      isEarned: true,\n      isDownloadable: true,\n      availableDate: pastDate,\n      certPreviewUrl: bannerImgSrc,\n    },\n  },\n  // Entitlement - Learner finished and failed.  cannot refund.  course ended.\n  {\n    courseName: 'Entitlement Course, Learner finished and failed, Cannot refund, Course ended',\n    enrollment: {\n      isVerified: true,\n    },\n    courseRun: {\n      isStarted: true,\n      isArchived: false,\n      endDate: pastDate,\n    },\n    entitlement: {\n      uuid: genEntitlementUUID(6),\n      availableSessions: null,\n      enrollmentUrl: '/entitlement-enrollment',\n      isFulfilled: true,\n      isRefundable: false,\n      changeDeadline: pastDate,\n      isExpired: false,\n    },\n    gradeData: { isPassing: false },\n  },\n  // Entitlement - Learner finished and passed.  cannot refund.  cert downloadable\n  {\n    courseName: 'Entitlement Course, Learner finished and passed, Cannot refund, Cert downloadable',\n    enrollment: {\n      isVerified: true,\n    },\n    courseRun: {\n      isArchived: true,\n      isStarted: true,\n      endDate: pastDate,\n    },\n    entitlement: {\n      uuid: genEntitlementUUID(7),\n      availableSessions: null,\n      changeDeadline: pastDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isRefundable: false,\n      isFulfilled: true,\n    },\n    certificate: {\n      isEarned: true,\n      isDownloadable: true,\n      availableDate: pastDate,\n      certPreviewUrl: bannerImgSrc,\n    },\n  },\n];\nconst creditCourses = [\n  {\n    courseName: 'Credit - Eligible for credit from unknown provider',\n    credit: {\n      ...creditData,\n      providerName: null,\n      providerId: null,\n    },\n    enrollment: { isEnrolled: true },\n  },\n  {\n    courseName: 'Credit - Eligible for credit from known provider',\n    credit: creditData,\n    enrollment: { isEnrolled: true },\n  },\n  {\n    courseName: 'Credit - Purchased but must request',\n    credit: { ...creditData, purchased: true },\n    enrollment: { isEnrolled: true },\n  },\n  {\n    courseName: 'Credit - Credit Request Pending',\n    credit: {\n      ...creditData,\n      purchased: true,\n      requestStatus: creditVals.requestStatuses.pending,\n    },\n    enrollment: { isEnrolled: true },\n  },\n  {\n    courseName: 'Credit - Credit Request Approved',\n    credit: {\n      ...creditData,\n      purchased: true,\n      requestStatus: creditVals.requestStatuses.approved,\n    },\n    enrollment: { isEnrolled: true },\n  },\n  {\n    courseName: 'Credit - Credit Request Rejected, Error thrown',\n    credit: {\n      ...creditData,\n      purchased: true,\n      requestStatus: creditVals.requestStatuses.rejected,\n      error: true,\n    },\n    enrollment: { isEnrolled: true },\n  },\n];\n\nexport const courseRuns = [\n  ...auditCourses,\n  ...verifiedCourses,\n  ...fulfilledEntitlementCourses,\n  ...creditCourses,\n];\n\n// unfulfilled entitlement select session\n// unfulfilled entitlement select session with deadline\n// unfulfilled entitlement select session pass deadline with available session {banner different from 4th}\n// unfulfilled entitlement select session pass deadline without available session\nexport const entitlementCourses = [\n  {\n    courseName: 'Unfulfilled Entitlement select session',\n    entitlement: {\n      uuid: genEntitlementUUID(10),\n      availableSessions,\n      changeDeadline: futureDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: false,\n      isRefundable: true,\n    },\n  }, {\n    courseName: 'Unfulfilled Entitlement select session with upcoming deadline',\n    entitlement: {\n      uuid: genEntitlementUUID(11),\n      availableSessions,\n      changeDeadline: soonDateStr,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: false,\n      isRefundable: true,\n    },\n  }, {\n    courseName: 'Unfulfilled Entitlement select session past deadline, With available session',\n    entitlement: {\n      uuid: genEntitlementUUID(12),\n      availableSessions,\n      changeDeadline: pastDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: false,\n      isFulfilled: false,\n      isRefundable: true,\n    },\n  }, {\n    courseName: 'Unfulfilled Entitlement select session past deadline, With available no session',\n    entitlement: {\n      uuid: genEntitlementUUID(13),\n      availableSessions: [],\n      changeDeadline: pastDate,\n      enrollmentUrl: '/entitlement-enrollment',\n      isExpired: true,\n      isFulfilled: false,\n      isRefundable: true,\n    },\n  },\n];\n\nconst providerOptions = [\n  providers.edx,\n  providers.mit,\n  null,\n];\n\nconst emailOptions = [\n  { isEmailEnabled: false, hasOptedOutOfEmail: false },\n  { isEmailEnabled: true, hasOptedOutOfEmail: false },\n  { isEmailEnabled: true, hasOptedOutOfEmail: true },\n];\n\nconst programsOptions = [\n  { relatedPrograms },\n  { relatedPrograms: [relatedPrograms[0]] },\n  { relatedPrograms: [] },\n];\n\nconst getOption = (options, index) => options[index % options.length];\n\nexport const compileCourseRunData = ({ courseName, ...data }, index) => {\n  const courseId = genCourseId(index);\n  const courseNumber = genCourseNumber(index);\n  const socialShareUrl = genCourseShareUrl(index);\n  const lastEnrolledDate = new Date();\n  lastEnrolledDate.setDate(lastEnrolledDate.getDate() - index - 1);\n  const lastEnrolled = lastEnrolledDate.toISOString();\n  const out = {\n    gradeData: { isPassing: true },\n    entitlement: null,\n    credit: {},\n    ...data,\n    certificate: genCertificateData(data.certificate),\n    enrollment: genEnrollmentData({\n      lastEnrolled,\n      ...getOption(emailOptions, index),\n      ...data.enrollment,\n    }),\n    courseRun: genCourseRunData({\n      ...data.courseRun,\n      courseId,\n    }),\n    course: {\n      courseName,\n      bannerImgSrc,\n      courseNumber,\n      socialShareUrl,\n    },\n    courseProvider: getOption(providerOptions, index),\n    programs: getOption(programsOptions, index),\n  };\n  if (out.enrollment.canUpgrade) {\n    out.courseRun.upgradeUrl = 'test-upgrade-url';\n  }\n  return out;\n};\n\nexport const compileEntitlementData = ({ courseName, ...data }, index) => {\n  const courseNumber = genCourseNumber(100 + index);\n  const socialShareUrl = genCourseShareUrl(100 + index);\n  return {\n    enrollment: genEnrollmentData({\n      isEnrolled: false,\n      lastEnrolled: null,\n      accessExpirationDate: null,\n      canUpgrade: false,\n      hasStarted: false,\n      isAudit: false,\n      isAuditAccessExpired: false,\n      isEmailEnabled: false,\n      isVerified: false,\n    }),\n    gradeData: null,\n    certificate: null,\n    courseRun: null,\n    ...data,\n    course: {\n      courseName,\n      courseNumber,\n      bannerImgSrc,\n      socialShareUrl,\n    },\n    courseProvider: getOption(providerOptions, index),\n    programs: getOption(programsOptions, index),\n  };\n};\n\n// Entitlement Course - refundable\n// Entitlement Course - cannot view yet\n// Entitlement Course - can view and change\n// Entitlement Course - expired\nexport const courseRunData = courseRuns.map(compileCourseRunData);\nexport const entitlementData = entitlementCourses.map(compileEntitlementData);\n\nexport default {\n  compileEntitlementData,\n  compileCourseRunData,\n  courseRunData,\n  entitlementData,\n  globalData,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PaintedDoorExperimentProvider from 'widgets/RecommendationsPaintedDoorBtn/PaintedDoorExperimentContext';\n\nexport const AppWrapper = ({\n  children,\n}) => {\n  if (process.env.EXPERIMENT_08_23_VAN_PAINTED_DOOR) {\n    return (\n      <PaintedDoorExperimentProvider>\n        {children}\n      </PaintedDoorExperimentProvider>\n    );\n  }\n  return children;\n};\nAppWrapper.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]).isRequired,\n};\n\nexport default AppWrapper;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  ViewAs: {\n    id: 'MasqueradeBar.ViewAs',\n    defaultMessage: 'View as: ',\n    description: 'Label for the View as',\n  },\n  ViewingAs: {\n    id: 'MasqueradeBar.ViewingAs',\n    defaultMessage: 'Viewing as: ',\n    description: 'Label for the Viewing as',\n  },\n  SubmitButton: {\n    id: 'MasqueradeBar.SubmitButton',\n    defaultMessage: 'Submit',\n    description: 'Label for the Submit button',\n  },\n  StudentNameInput: {\n    id: 'MasqueradeBar.StudentNameInput',\n    defaultMessage: 'Username or email',\n    description: 'Label for the Student Name or email input',\n  },\n  NoStudentFound: {\n    id: 'MasqueradeBar.NoStudentFound',\n    defaultMessage: 'No student with this username or email could be found',\n    description: 'Error message when no student is found',\n  },\n  UnknownError: {\n    id: 'MasqueradeBar.UnknownError',\n    defaultMessage: 'An unknown error occurred',\n    description: 'Error message when an unknown error occurs',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { apiHooks, reduxHooks } from 'hooks';\nimport { StrictDict } from 'utils';\nimport * as module from './hooks';\n\nimport messages from './messages';\n\nexport const state = StrictDict({\n  masqueradeInput: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useMasqueradeInput = () => {\n  const [masqueradeInput, setMasqueradeInput] = module.state.masqueradeInput('');\n  const handleMasqueradeInputChange = (e) => setMasqueradeInput(e.target.value);\n  return {\n    handleMasqueradeInputChange,\n    masqueradeInput,\n  };\n};\n\nconst masqueradeErrorMessageMap = {\n  404: messages.NoStudentFound,\n};\n\nexport const getMasqueradeErrorMessage = (errorStatus) => {\n  if (errorStatus == null) {\n    return null;\n  }\n  return masqueradeErrorMessageMap[errorStatus] || messages.UnknownError;\n};\n\nexport const useMasqueradeBarData = ({\n  authenticatedUser,\n}) => {\n  const { formatMessage } = useIntl();\n  const handleMasqueradeAs = apiHooks.useMasqueradeAs();\n  const handleClearMasquerade = apiHooks.useClearMasquerade();\n\n  const {\n    isMasquerading,\n    isMasqueradingFailed,\n    isMasqueradingPending,\n    masqueradeErrorStatus,\n  } = reduxHooks.useMasqueradeData();\n  const { masqueradeInput, handleMasqueradeInputChange } = module.useMasqueradeInput();\n\n  const masqueradeErrorMessage = getMasqueradeErrorMessage(masqueradeErrorStatus);\n  const handleMasqueradeSubmit = (user) => (e) => {\n    handleMasqueradeAs(user);\n    e.preventDefault();\n  };\n\n  return {\n    canMasquerade: authenticatedUser?.administrator,\n    isMasquerading,\n    isMasqueradingFailed,\n    isMasqueradingPending,\n    masqueradeErrorMessage,\n    masqueradeInput,\n    handleMasqueradeSubmit,\n    handleClearMasquerade,\n    handleMasqueradeInputChange,\n    formatMessage,\n  };\n};\n\nexport default useMasqueradeBarData;\n","import React from 'react';\nimport { AppContext } from '@edx/frontend-platform/react';\n\nimport {\n  Chip,\n  Form,\n  FormControl,\n  FormControlFeedback,\n  FormLabel,\n  FormGroup,\n  StatefulButton,\n  Icon,\n} from '@edx/paragon';\nimport { Close, PersonSearch } from '@edx/paragon/icons';\n\nimport messages from './messages';\nimport { useMasqueradeBarData } from './hooks';\nimport './index.scss';\n\nexport const MasqueradeBar = () => {\n  const { authenticatedUser } = React.useContext(AppContext);\n\n  const {\n    canMasquerade,\n    isMasquerading,\n    isMasqueradingFailed,\n    isMasqueradingPending,\n    masqueradeInput,\n    masqueradeErrorMessage,\n    handleMasqueradeInputChange,\n    handleClearMasquerade,\n    handleMasqueradeSubmit,\n    formatMessage,\n  } = useMasqueradeBarData({ authenticatedUser });\n\n  if (!canMasquerade) { return null; }\n\n  return (\n    <div className=\"w-100 shadow-sm px-2\">\n      <Form className=\"masquerade-bar w-100\">\n        {isMasquerading ? (\n          <>\n            <FormLabel inline className=\"masquerade-form-label\">\n              <Icon src={PersonSearch} />\n              {formatMessage(messages.ViewingAs)}\n            </FormLabel>\n            <Chip\n              className=\"masquerade-chip\"\n              iconAfter={Close}\n              onClick={handleClearMasquerade}\n            >\n              {masqueradeInput}\n            </Chip>\n          </>\n        ) : (\n          <>\n            <FormLabel inline id=\"masquerade-form-label\" className=\"masquerade-form-label\">\n              <Icon src={PersonSearch} />\n              {formatMessage(messages.ViewAs)}\n            </FormLabel>\n            <FormGroup isInvalid={isMasqueradingFailed} className=\"masquerade-form-input\">\n              <FormControl\n                value={masqueradeInput}\n                onChange={handleMasqueradeInputChange}\n                floatingLabel={formatMessage(messages.StudentNameInput)}\n                aria-labelledby=\"masquerade-form-label\"\n              />\n              {isMasqueradingFailed && (\n                <FormControlFeedback type=\"invalid\" hasIcon={false}>\n                  {formatMessage(masqueradeErrorMessage)}\n                </FormControlFeedback>\n              )}\n            </FormGroup>\n            <StatefulButton\n              disabled={!masqueradeInput.length}\n              variant=\"brand\"\n              onClick={handleMasqueradeSubmit(masqueradeInput)}\n              labels={{\n                default: formatMessage(messages.SubmitButton),\n              }}\n              className=\"mr-3\"\n              state={isMasqueradingPending ? 'pending' : 'default'}\n              type=\"submit\"\n            />\n          </>\n        )}\n      </Form>\n    </div>\n  );\n};\n\nexport default MasqueradeBar;\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgConfirmEmail = function SvgConfirmEmail(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 406,\n    height: 302,\n    fill: \"none\"\n  }, props), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#confirm-email_svg__a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m160.119 242.657 130.966.151a8.399 8.399 0 0 0 7.81-6.737l24.361-128.607a5.356 5.356 0 0 0-.95-4.685 5.358 5.358 0 0 0-4.311-2.065l-130.966-.151a8.399 8.399 0 0 0-7.81 6.737l-24.361 128.607a5.357 5.357 0 0 0 .95 4.685 5.358 5.358 0 0 0 4.311 2.065Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m291.048 243.446-130.967-.151a5.923 5.923 0 0 1-4.643-2.107 6.376 6.376 0 0 1-1.261-5.387l24.424-128.62a9.068 9.068 0 0 1 8.428-7.242l130.967.152a5.947 5.947 0 0 1 4.592 2.094 6.434 6.434 0 0 1 1.262 5.4l-24.337 128.62a9.064 9.064 0 0 1-2.99 5.073 9.064 9.064 0 0 1-5.475 2.168Zm-130.967-1.413 130.967.152a7.748 7.748 0 0 0 7.191-6.22l24.349-128.608a5.184 5.184 0 0 0-.971-4.365 4.733 4.733 0 0 0-3.672-1.64l-130.967-.151a7.745 7.745 0 0 0-7.191 6.22l-24.311 128.607a5.204 5.204 0 0 0 .972 4.365 4.733 4.733 0 0 0 3.671 1.64h-.038Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m320.973 120.187-144.037-.176a.632.632 0 0 1-.631-.631.642.642 0 0 1 .631-.631l144.05.177c.167 0 .327.066.446.184a.633.633 0 0 1 .184.446.642.642 0 0 1-.643.631Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M311.308 112.057c1.381-1.465 1.523-3.575.316-4.712-1.206-1.138-3.304-.872-4.686.593-1.381 1.465-1.522 3.575-.316 4.713 1.207 1.137 3.305.872 4.686-.594ZM299.838 112.036c1.381-1.466 1.522-3.576.316-4.713-1.207-1.138-3.305-.872-4.686.593-1.381 1.466-1.523 3.575-.316 4.713 1.206 1.137 3.304.872 4.686-.593ZM288.366 112.022c1.381-1.465 1.523-3.575.316-4.712-1.207-1.138-3.305-.872-4.686.593-1.381 1.465-1.523 3.575-.316 4.713 1.207 1.137 3.305.872 4.686-.594Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m252.859 130.098-12.376 65.314 52.483.063 12.376-65.314-52.483-.063Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M252.847 130.1h52.495l-12.364 65.313h-52.495l12.364-65.313Zm0-1.261a1.26 1.26 0 0 0-1.262 1.021l-12.364 65.314a1.258 1.258 0 0 0 .273 1.051 1.257 1.257 0 0 0 .989.45h52.482a1.264 1.264 0 0 0 1.262-1.035l12.364-65.313a1.258 1.258 0 0 0-1.237-1.488h-52.507Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M290.177 147.233a5.823 5.823 0 0 0 .253 2.524c.239.473.527.921.858 1.337a10.772 10.772 0 0 1 1.741 5.324 8.014 8.014 0 0 1-.505 3.785c-.379.883-.984 1.665-1.337 2.523a5.13 5.13 0 0 0-.19 3.28c.291 1.022.871 2.132.341 3.04a2.015 2.015 0 0 1-1.88.846 9.504 9.504 0 0 1-2.107-.518c-3.848-1.11-8.692-.58-12.729-.857l-15.139-1.06c-2.057-.152-4.605-.669-5.148-2.662-.454-1.678 1.186-4.479 1.842-6.056a37.151 37.151 0 0 1 3.949-7.721 17.569 17.569 0 0 0 2.359-3.608c.284-.858.524-1.729.719-2.612a15.784 15.784 0 0 1 4.353-6.61 18.496 18.496 0 0 1 4.378-3.344c5.488-2.851 14.609-.921 17.107 5.148a16.97 16.97 0 0 1 1.135 7.241Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M289.584 170.56h-.164a6.915 6.915 0 0 1-1.779-.391l-.466-.139a31.765 31.765 0 0 0-8.34-.745c-1.501 0-2.901 0-4.264-.1l-15.139-1.06c-3.343-.227-5.21-1.262-5.715-3.129-.429-1.564.568-3.684 1.362-5.387.19-.404.366-.77.505-1.085a37.869 37.869 0 0 1 4.012-7.86c.202-.29.416-.567.631-.845a11.574 11.574 0 0 0 1.653-2.624c.184-.506.332-1.025.441-1.552.076-.341.164-.669.252-1.009a16.166 16.166 0 0 1 4.53-6.876 18.528 18.528 0 0 1 4.529-3.469 14.625 14.625 0 0 1 11.354-.417 10.93 10.93 0 0 1 6.611 5.892 17.574 17.574 0 0 1 1.135 7.507v.113a3.407 3.407 0 0 0 .77 2.977l.227.328a11.36 11.36 0 0 1 1.867 5.652 8.614 8.614 0 0 1-.568 4.126c-.2.434-.427.856-.681 1.261-.246.406-.465.828-.656 1.262a4.507 4.507 0 0 0-.151 2.851c0 .202.126.404.189.606a3.466 3.466 0 0 1 .076 2.939 2.595 2.595 0 0 1-2.221 1.174Zm-11.859-36.334a11.872 11.872 0 0 0-5.437 1.261 17.455 17.455 0 0 0-4.227 3.23 14.742 14.742 0 0 0-4.176 6.308c-.1.315-.164.631-.239.946a13.3 13.3 0 0 1-.505 1.728 12.18 12.18 0 0 1-1.829 2.927l-.618.82a37.758 37.758 0 0 0-3.861 7.57c-.139.341-.328.719-.517 1.148-.681 1.426-1.602 3.394-1.262 4.491.341 1.098 1.88 1.981 4.555 2.17l15.139 1.06c1.325.088 2.712.101 4.176.101a32.79 32.79 0 0 1 8.705.795l.492.151c.473.167.964.277 1.463.328a1.373 1.373 0 0 0 1.262-.517c.277-.467 0-1.148-.189-1.867-.076-.227-.152-.454-.215-.669a5.797 5.797 0 0 1 .215-3.696c.208-.493.453-.969.731-1.426.227-.391.442-.757.619-1.135a7.583 7.583 0 0 0 .454-3.52 10.091 10.091 0 0 0-1.628-5.047l-.227-.302a5.81 5.81 0 0 1-.694-1.148 6.072 6.072 0 0 1-.315-2.65l.656-.088h-.643a16.21 16.21 0 0 0-1.035-6.952 9.634 9.634 0 0 0-5.866-5.172 14.22 14.22 0 0 0-4.984-.833v-.012Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F0CC00\",\n    d: \"m244.053 176.552-3.57 18.924h52.495l3.57-18.861c-4.327-5.185-11.594-6.976-17.99-7.569a75.07 75.07 0 0 0-6.775-.291h-.467c-1.854 0-3.999 0-6.308.265h-.113c-6.649.543-14.559 2.36-20.842 7.532Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m264.049 172.641 1.603 17.662.479 5.148h1.186l2.422-5.16 8.264-17.562c-3.129-1.097-10.409-1.097-13.954-.088Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M278.028 172.667a9.327 9.327 0 0 1-7.57 3.911 6.49 6.49 0 0 1-6.409-3.924l3.583-15.379h12.616l-2.22 15.392Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M270.471 177.224a7.175 7.175 0 0 1-7.027-4.366.575.575 0 0 1 0-.353l3.583-15.366a.66.66 0 0 1 .631-.505h12.616a.637.637 0 0 1 .492.227.634.634 0 0 1 .151.518l-2.233 15.379a.604.604 0 0 1-.088.252 9.933 9.933 0 0 1-8.125 4.214Zm-5.74-4.618a5.897 5.897 0 0 0 5.728 3.318 8.696 8.696 0 0 0 6.939-3.494l2.094-14.484h-11.355l-3.406 14.66Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M279.012 163.875a13.776 13.776 0 0 1-4.466 3.444c-2.763 1.426-6.813 3.015-9.752 2.523l1.728-6.497c2.221.266 4.466.266 6.687 0a20.66 20.66 0 0 0 5.992-1.148c.341-.076.316 1.06-.189 1.678Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M265.929 170.574a7.724 7.724 0 0 1-1.261-.101.613.613 0 0 1-.429-.277.585.585 0 0 1-.076-.505l1.728-6.497a.622.622 0 0 1 .694-.454c2.17.27 4.365.27 6.535 0a20.182 20.182 0 0 0 5.829-1.098.747.747 0 0 1 .883.253 2.282 2.282 0 0 1-.353 2.334 14.15 14.15 0 0 1-4.668 3.608c-2.044 1.097-5.74 2.737-8.882 2.737Zm-.34-1.261c3.04.113 7.014-1.703 8.667-2.523a12.715 12.715 0 0 0 4.264-3.268c.078-.118.142-.245.189-.378a23.654 23.654 0 0 1-5.462.933 28.796 28.796 0 0 1-6.308 0l-1.35 5.236ZM284.475 196.119h-.202a.65.65 0 0 1-.449-.567.638.638 0 0 1 .033-.253l5.046-15.846a.657.657 0 0 1 .328-.386.658.658 0 0 1 .731.083.672.672 0 0 1 .232.45.677.677 0 0 1-.029.257l-5.047 15.846a.64.64 0 0 1-.643.416ZM248.973 196.058a.656.656 0 0 1-.618-.681l.959-15.859a.655.655 0 0 1 1.261.076l-.958 15.858a.646.646 0 0 1-.644.606Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M266.661 153.741c.265-3.608-3.898-4.504-4.478-.252a7.005 7.005 0 0 0 .391 3.999 1.92 1.92 0 0 0 1.153 1.077c.257.088.53.121.801.097a1.94 1.94 0 0 0 .771-.24\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M264.365 159.334a2.122 2.122 0 0 1-.694-.101 2.716 2.716 0 0 1-1.665-1.45 7.696 7.696 0 0 1-.48-4.378c.354-2.523 1.88-3.52 3.243-3.381a3.23 3.23 0 0 1 2.523 3.785.657.657 0 0 1-1.262-.101c.101-1.451-.618-2.296-1.388-2.372-.769-.076-1.564.467-1.804 2.258a6.312 6.312 0 0 0 .328 3.608 1.55 1.55 0 0 0 .883.795 1.163 1.163 0 0 0 .947-.126.666.666 0 0 1 .895.252.654.654 0 0 1-.265.883 2.52 2.52 0 0 1-1.261.328Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M282.986 153.769c1.098-3.608 5.602-4.491 4.58-.239a9.32 9.32 0 0 1-1.905 3.986c-.946 1.035-2.233 1.527-3.091.934\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M283.478 159.355c-.45.013-.893-.12-1.262-.378a.649.649 0 0 1 .745-1.06c.517.353 1.476 0 2.233-.845a8.638 8.638 0 0 0 1.753-3.697c.101-.429.366-1.804-.391-2.018-.757-.215-2.359.706-2.939 2.598a.664.664 0 0 1-.827.436.658.658 0 0 1-.435-.827c.782-2.523 3.003-3.873 4.517-3.456.479.126 1.993.769 1.261 3.57a9.76 9.76 0 0 1-2.056 4.264 3.782 3.782 0 0 1-2.599 1.413Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m266.787 145.82-1.98 10.459c-.946 5.046 2.233 9.083 7.103 9.096h1.021a11.352 11.352 0 0 0 10.547-9.071c.48-2.523 2.221-6.459.379-8.352-2.94-3.028-5.791-5.046-7.418-9.146-3.735.782-9.652 1.816-9.652 7.014Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M272.944 166.018h-1.035a7.72 7.72 0 0 1-6.093-2.763 8.445 8.445 0 0 1-1.628-7.116l1.968-10.383c0-5.5 5.879-6.712 9.752-7.506l.417-.089a.65.65 0 0 1 .732.391 18.816 18.816 0 0 0 5.311 7.002c.643.619 1.261 1.262 1.968 1.931 1.69 1.728.883 4.693.24 7.077-.177.656-.341 1.262-.442 1.842a12.024 12.024 0 0 1-11.19 9.614Zm3.103-26.494c-3.671.769-8.604 1.842-8.604 6.308a.38.38 0 0 1 0 .126l-1.981 10.446a7.163 7.163 0 0 0 1.35 6.043 6.455 6.455 0 0 0 5.11 2.284h1.034a10.663 10.663 0 0 0 9.891-8.541c.114-.581.29-1.262.48-1.943.58-2.17 1.261-4.63.075-5.829a54.348 54.348 0 0 0-1.93-1.892 20.845 20.845 0 0 1-5.425-6.977v-.025Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M273.852 157.794a11.905 11.905 0 0 1-1.4-.088.641.641 0 0 1-.652-.727.627.627 0 0 1 .093-.258.633.633 0 0 1 .449-.295.635.635 0 0 1 .274.018 11.31 11.31 0 0 0 2.283 0c.237-2.02.117-4.065-.353-6.043a.66.66 0 0 1 .53-.757.668.668 0 0 1 .757.53c.24 1.35.984 5.866.076 7.103a1.03 1.03 0 0 1-.732.441 9.95 9.95 0 0 1-1.325.076Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M239.083 143.674h-53.896a.699.699 0 0 1-.559-.168.706.706 0 0 1 .559-1.232l53.896.063a.704.704 0 0 1 .437 1.165.7.7 0 0 1-.437.235v-.063ZM237.253 153.288H183.37a.699.699 0 0 1-.737-.408.702.702 0 0 1 .439-.968.715.715 0 0 1 .298-.024l53.896.063a.704.704 0 0 1 .437 1.165.7.7 0 0 1-.437.235l-.013-.063ZM235.436 162.903l-53.895-.064a.706.706 0 0 1-.694-.706.695.695 0 0 1 .694-.694l53.895.063a.714.714 0 0 1 .559.169.712.712 0 0 1 .242.531.713.713 0 0 1-.242.532.699.699 0 0 1-.559.169ZM233.619 172.516l-53.895-.075a.7.7 0 0 1-.495-.2.691.691 0 0 1-.199-.494.691.691 0 0 1 .694-.707l53.895.063a.71.71 0 0 1 .707.707.719.719 0 0 1-.707.706ZM231.752 182.177h-37.999a.71.71 0 0 1 0-1.401h37.999a.712.712 0 0 1 .613.701.705.705 0 0 1-.613.7ZM286.291 233.808l-117.707-.139a.675.675 0 0 1-.542-.252.7.7 0 0 1-.152-.581l5.349-28.222a.708.708 0 0 1 .682-.568l117.707.139a.69.69 0 0 1 .68.526.724.724 0 0 1 .014.307l-5.349 28.222a.708.708 0 0 1-.682.568Zm-116.862-1.54 116.282.139 5.047-26.821-116.295-.139-5.034 26.821Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"m289.521 214.412-117.329-.138a.715.715 0 0 1-.559-.169.696.696 0 0 1-.241-.532.704.704 0 0 1 .8-.7l117.329.139a.707.707 0 0 1 0 1.4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M254.461 233.764h-.126a.706.706 0 0 1-.555-.82l5.337-28.222a.706.706 0 0 1 .82-.555.721.721 0 0 1 .568.82l-5.35 28.222a.703.703 0 0 1-.694.555ZM195.078 233.689h-.127a.71.71 0 0 1-.567-.82l5.349-28.235a.714.714 0 0 1 .271-.517.699.699 0 0 1 .568-.136.708.708 0 0 1 .536.918l-5.337 28.222a.704.704 0 0 1-.693.568Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m96.105 191.426 130.967.151a8.377 8.377 0 0 0 7.809-6.724l24.362-128.608c.706-3.785-1.653-6.75-5.261-6.75l-130.967-.15a8.377 8.377 0 0 0-7.809 6.673L90.844 184.701c-.706 3.697 1.653 6.725 5.261 6.725ZM2492.26 247.582l130.97.151a8.398 8.398 0 0 0 5.06-2.019 8.427 8.427 0 0 0 2.75-4.705l24.36-128.608c.71-3.784-1.65-6.749-5.26-6.749l-130.97-.152a8.392 8.392 0 0 0-5.05 2 8.419 8.419 0 0 0-2.76 4.674L2487 240.858c-.71 3.696 1.65 6.724 5.26 6.724Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m227.072 192.272-130.967-.151a5.905 5.905 0 0 1-4.643-2.095 6.404 6.404 0 0 1-1.261-5.399l24.387-128.608a9.046 9.046 0 0 1 8.427-7.242l130.967.152a5.88 5.88 0 0 1 4.643 2.043 6.42 6.42 0 0 1 1.261 5.4l-24.349 128.595a9.044 9.044 0 0 1-8.465 7.305Zm-130.967-1.413 130.967.151a7.732 7.732 0 0 0 7.204-6.308L258.625 56.12a5.174 5.174 0 0 0-.972-4.353 4.624 4.624 0 0 0-3.671-1.64l-130.967-.151a7.759 7.759 0 0 0-7.191 6.22L91.462 184.803a5.213 5.213 0 0 0 .972 4.353 4.645 4.645 0 0 0 3.671 1.64v.063Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m256.984 68.947-144.037-.164a.631.631 0 0 1 0-1.261l144.037.164a.644.644 0 0 1 .631.63.628.628 0 0 1-.631.631Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M247.297 60.839c1.382-1.465 1.523-3.575.317-4.713-1.207-1.137-3.305-.872-4.686.593-1.382 1.466-1.523 3.576-.316 4.713 1.206 1.138 3.304.872 4.685-.593ZM235.827 60.817c1.381-1.465 1.523-3.575.316-4.713-1.207-1.137-3.305-.872-4.686.594-1.381 1.465-1.523 3.575-.316 4.712 1.207 1.138 3.304.872 4.686-.593ZM224.355 60.804c1.381-1.465 1.523-3.575.316-4.713-1.206-1.137-3.304-.872-4.686.594-1.381 1.465-1.522 3.575-.316 4.712 1.207 1.138 3.305.872 4.686-.593Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m188.846 78.88-12.377 65.313 52.496.05 12.363-65.3-52.482-.063Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M188.858 78.882h52.483l-12.364 65.313-52.495-.063 12.376-65.25Zm0-1.262a1.262 1.262 0 0 0-1.262 1.022l-12.363 65.313a1.266 1.266 0 0 0 .265 1.034 1.255 1.255 0 0 0 .971.455l52.495.063a1.262 1.262 0 0 0 1.262-1.022l12.364-65.313a1.261 1.261 0 0 0-.265-1.035 1.268 1.268 0 0 0-.972-.467h-52.482l-.013-.05Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D23228\",\n    d: \"m180.027 125.321-3.57 18.861 52.495.063 3.583-18.835c-4.328-5.198-11.594-6.977-17.991-7.57a75.034 75.034 0 0 0-6.774-.29h-.467c-1.855 0-4 0-6.308.265h-.114c-6.623.568-14.546 2.346-20.854 7.506Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"m200.036 121.419 1.614 17.662.467 5.147h1.186l2.422-5.16 8.264-17.561a32.226 32.226 0 0 0-13.953-.088Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M214.014 121.448a9.3 9.3 0 0 1-7.569 3.898 6.471 6.471 0 0 1-6.409-3.923l3.595-15.366h12.616l-2.233 15.391Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M206.521 126a7.214 7.214 0 0 1-7.028-4.365.682.682 0 0 1 0-.353l3.583-15.379a.672.672 0 0 1 .644-.505h12.616a.658.658 0 0 1 .492.215.687.687 0 0 1 .151.53l-2.233 15.366a.594.594 0 0 1-.088.252 9.881 9.881 0 0 1-8.137 4.239Zm-5.741-4.63a5.89 5.89 0 0 0 5.728 3.331 8.619 8.619 0 0 0 6.939-3.495l2.107-14.483h-11.355l-3.419 14.647Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M214.999 112.653a13.57 13.57 0 0 1-4.467 3.432c-2.762 1.426-6.812 3.028-9.752 2.523l1.729-6.51c2.22.273 4.466.273 6.686 0a20.633 20.633 0 0 0 5.993-1.148c.34-.05.328 1.073-.189 1.703Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M201.916 119.34a8.072 8.072 0 0 1-1.262-.088.673.673 0 0 1-.429-.278.652.652 0 0 1-.076-.505l1.729-6.497a.633.633 0 0 1 .706-.467c2.171.265 4.365.265 6.535 0a20.622 20.622 0 0 0 5.816-1.097.733.733 0 0 1 .883.239 2.304 2.304 0 0 1-.353 2.347 13.985 13.985 0 0 1-4.668 3.608 21.96 21.96 0 0 1-8.881 2.738Zm-.341-1.262c3.04.139 7.027-1.703 8.68-2.523a12.808 12.808 0 0 0 4.251-3.268c.088-.107.152-.232.19-.365-1.78.514-3.613.823-5.463.921a29.823 29.823 0 0 1-6.308 0l-1.35 5.235ZM220.461 144.886h-.189a.637.637 0 0 1-.389-.319.64.64 0 0 1-.04-.501l5.046-15.846a.654.654 0 0 1 .323-.38.632.632 0 0 1 .497-.036.62.62 0 0 1 .38.315.627.627 0 0 1 .037.492l-5.047 15.846a.64.64 0 0 1-.618.429ZM184.96 144.851a.658.658 0 0 1-.619-.694l.959-15.846a.657.657 0 1 1 1.262.076l-.959 15.846a.641.641 0 0 1-.643.618Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M202.66 102.523c.265-3.608-3.898-4.504-4.491-.253a6.964 6.964 0 0 0 .391 3.987 1.937 1.937 0 0 0 1.962 1.184 1.94 1.94 0 0 0 .775-.238\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M200.351 108.111a2.548 2.548 0 0 1-.694-.1 2.855 2.855 0 0 1-1.665-1.451 7.575 7.575 0 0 1-.467-4.378c.353-2.523 1.867-3.52 3.23-3.381a3.23 3.23 0 0 1 2.523 3.785.657.657 0 1 1-1.262-.089c.114-1.451-.618-2.296-1.387-2.384-.77-.088-1.552.479-1.804 2.271a6.294 6.294 0 0 0 .328 3.595c.175.376.493.666.883.808a1.255 1.255 0 0 0 .959-.126.624.624 0 0 1 .494-.06.65.65 0 0 1 .443.805.654.654 0 0 1-.307.39 2.631 2.631 0 0 1-1.274.315Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M218.972 102.533c1.11-3.608 5.602-4.491 4.58-.24a9.037 9.037 0 0 1-1.893 3.987c-.933 1.047-2.233 1.539-3.078.946\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M219.414 108.138a2.122 2.122 0 0 1-1.262-.379.649.649 0 0 1-.321-.425.655.655 0 0 1 1.066-.647c.517.366 1.476 0 2.233-.833a8.83 8.83 0 0 0 1.791-3.709c.101-.416.379-1.804-.391-2.006-.77-.202-2.359.707-2.927 2.523a.67.67 0 0 1-.319.391.659.659 0 0 1-.943-.769c.783-2.524 3.003-3.886 4.53-3.47.466.14 1.98.783 1.261 3.571a10.09 10.09 0 0 1-2.069 4.277 3.787 3.787 0 0 1-2.649 1.476Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m202.735 94.598-1.98 10.446c-.959 5.047 2.22 9.097 7.09 9.097h1.034a11.355 11.355 0 0 0 10.535-9.071l1.93-9.942s1.653-10.093-7.746-9.083c-9.399 1.009-10.863 8.553-10.863 8.553Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M208.93 114.798h-1.034a7.75 7.75 0 0 1-3.365-.683 7.74 7.74 0 0 1-2.741-2.067 8.443 8.443 0 0 1-1.577-7.116l1.98-10.459c0-.075 1.615-7.973 11.355-9.058a7.454 7.454 0 0 1 6.535 1.88c2.712 2.864 1.943 7.759 1.918 7.973l-1.893 9.954a12.022 12.022 0 0 1-11.178 9.576Zm-5.513-20.072-1.943 10.496a7.244 7.244 0 0 0 1.35 6.043 6.524 6.524 0 0 0 5.11 2.284h1.034a10.644 10.644 0 0 0 9.891-8.541l1.88-9.916s.694-4.454-1.59-6.85a6.2 6.2 0 0 0-5.437-1.477c-8.819.921-10.232 7.658-10.295 7.96Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#231F20\",\n    d: \"M209.839 106.557a13.943 13.943 0 0 1-1.401-.076.659.659 0 0 1-.555-.732.658.658 0 0 1 .719-.567 9.913 9.913 0 0 0 2.284 0c.303-.606.139-3.344-.353-6.043a.655.655 0 0 1 .529-.757.646.646 0 0 1 .664.281.63.63 0 0 1 .093.236c.24 1.362.984 5.879.076 7.103a1.06 1.06 0 0 1-.732.454 9.937 9.937 0 0 1-1.324.101Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M175.068 92.454h-53.895a.707.707 0 0 1 0-1.4h53.895a.707.707 0 0 1 0 1.4ZM173.252 102.067h-53.896a.703.703 0 0 1-.706-.706.705.705 0 0 1 .706-.707l53.896.076a.695.695 0 0 1 .694.694.71.71 0 0 1-.694.643ZM171.423 111.666H117.54a.699.699 0 0 1-.559-.168.706.706 0 0 1 .559-1.232h53.883a.707.707 0 0 1 .499 1.202.701.701 0 0 1-.499.198ZM169.606 121.283H115.71a.704.704 0 0 1-.437-1.165.7.7 0 0 1 .437-.235l53.896.063a.699.699 0 0 1 .559.168.706.706 0 0 1-.559 1.232v-.063ZM167.789 130.897H129.79a.707.707 0 0 1 0-1.4h37.999a.695.695 0 0 1 .492 1.189.706.706 0 0 1-.492.211ZM222.278 182.58l-117.707-.139a.728.728 0 0 1-.537-.259.714.714 0 0 1-.157-.574l5.349-28.222a.703.703 0 0 1 .694-.58l117.707.139a.711.711 0 0 1 .543.265.652.652 0 0 1 .151.567l-5.4 28.222a.71.71 0 0 1-.643.581Zm-116.862-1.539 116.282.138 5.046-26.834-116.282-.139-5.046 26.835Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"m225.508 163.257-117.329-.138a.71.71 0 0 1-.707-.707.705.705 0 0 1 .208-.495.71.71 0 0 1 .229-.15.71.71 0 0 1 .27-.049l117.329.139a.704.704 0 0 1 .437 1.165.7.7 0 0 1-.437.235Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D1D3D4\",\n    d: \"M190.41 182.545h-.126a.71.71 0 0 1-.556-.82l5.35-28.222a.682.682 0 0 1 .285-.453.696.696 0 0 1 .975.178.703.703 0 0 1 .115.527l-5.349 28.222a.712.712 0 0 1-.694.568ZM131.064 182.474h-.126a.702.702 0 0 1-.445-.297.702.702 0 0 1-.11-.523l5.336-28.222a.706.706 0 0 1 1.375.265l-5.336 28.222a.71.71 0 0 1-.694.555Z\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"confirm-email_svg__a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0-4h406v306H0z\"\n  })))));\n};\nexport { SvgConfirmEmail as ReactComponent };\nexport default __webpack_public_path__ + \"ce54a3c2e5b77ffdfa5e77d15e14a6ee.svg\";","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  confirmNowButton: {\n    id: 'leanerDashboard.confirmEmailBanner',\n    description: 'Button for sending confirm email and open modal',\n    defaultMessage: 'Confirm Now',\n  },\n  confirmEmailTextReminderBanner: {\n    id: 'leanerDashboard.confirmEmailTextReminderBanner',\n    description: 'Text for reminding user to confirm email',\n    defaultMessage: 'Remember to confirm your email so that you can keep learning on edX! {confirmNowButton}.',\n  },\n  verifiedConfirmEmailButton: {\n    id: 'leanerDashboard.verifiedConfirmEmailButton',\n    description: 'Button for verified confirming email',\n    defaultMessage: 'I\\'ve confirmed my email',\n  },\n  confirmEmailModalHeader: {\n    id: 'leanerDashboard.confirmEmailModalHeader',\n    description: 'title for confirming email modal',\n    defaultMessage: 'Confirm your email',\n  },\n  confirmEmailModalBody: {\n    id: 'leanerDashboard.confirmEmailModalBody',\n    description: 'text hint for confirming email modal',\n    defaultMessage: 'We\\'ve sent you an email to verify your acccount. Please check your inbox and click on the big red button to confirm and keep learning.',\n  },\n  confirmEmailImageAlt: {\n    id: 'leanerDashboard.confirmEmailImageAlt',\n    description: 'text alt confirm email image',\n    defaultMessage: 'confirm email background',\n  },\n});\n\nexport default messages;\n","import React from 'react';\n\nimport { StrictDict } from 'utils';\nimport { apiHooks, reduxHooks } from 'hooks';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  showPageBanner: (val) => React.useState(val), // eslint-disable-line\n  showConfirmModal: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useConfirmEmailBannerData = () => {\n  const { isNeeded } = reduxHooks.useEmailConfirmationData();\n  const [showPageBanner, setShowPageBanner] = module.state.showPageBanner(isNeeded);\n  const [showConfirmModal, setShowConfirmModal] = module.state.showConfirmModal(false);\n  const closePageBanner = () => setShowPageBanner(false);\n  const closeConfirmModal = () => setShowConfirmModal(false);\n  const openConfirmModal = () => setShowConfirmModal(true);\n  const sendConfirmEmail = apiHooks.useSendConfirmEmail();\n\n  const openConfirmModalButtonClick = () => {\n    sendConfirmEmail();\n    openConfirmModal();\n    closePageBanner();\n  };\n\n  const userConfirmEmailButtonClick = () => {\n    closeConfirmModal();\n    closePageBanner();\n  };\n  return {\n    isNeeded,\n    showPageBanner,\n    closePageBanner,\n    showConfirmModal,\n    closeConfirmModal,\n    openConfirmModalButtonClick,\n    userConfirmEmailButtonClick,\n  };\n};\n\nexport default useConfirmEmailBannerData;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport {\n  Button,\n  Image,\n  MarketingModal,\n  ModalDialog,\n  PageBanner,\n} from '@edx/paragon';\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport confirmEmailSVG from 'assets/confirm-email.svg';\nimport messages from './messages';\nimport './ConfirmEmailBanner.scss';\nimport useConfirmEmailBannerData from './hooks';\n\nexport const ConfirmEmailBanner = () => {\n  const {\n    isNeeded,\n    showConfirmModal,\n    showPageBanner,\n    closePageBanner,\n    closeConfirmModal,\n    openConfirmModalButtonClick,\n    userConfirmEmailButtonClick,\n  } = useConfirmEmailBannerData();\n  const { formatMessage } = useIntl();\n\n  if (!isNeeded) { return null; }\n\n  return (\n    <>\n      <PageBanner show={showPageBanner} dismissible onDismiss={closePageBanner}>\n        {formatMessage(messages.confirmEmailTextReminderBanner, {\n          confirmNowButton: (\n            <Button\n              className=\"confirm-email-now-button\"\n              variant=\"link\"\n              size=\"inline\"\n              onClick={openConfirmModalButtonClick}\n            >\n              {formatMessage(messages.confirmNowButton)}\n            </Button>\n          ),\n        })}\n      </PageBanner>\n      <MarketingModal\n        title=\"\"\n        isOpen={showConfirmModal}\n        onClose={closeConfirmModal}\n        hasCloseButton={false}\n        heroNode={(\n          <ModalDialog.Hero className=\"bg-gray-300\">\n            <Image\n              className=\"m-auto\"\n              src={confirmEmailSVG}\n              alt={formatMessage(messages.confirmEmailImageAlt)}\n            />\n          </ModalDialog.Hero>\n        )}\n        footerNode={(\n          <Button className=\"mx-auto my-3\" variant=\"danger\" onClick={userConfirmEmailButtonClick}>\n            {formatMessage(messages.verifiedConfirmEmailButton)}\n          </Button>\n        )}\n      >\n        <h1 className=\"text-center p-3\">{formatMessage(messages.confirmEmailModalHeader)}</h1>\n        <p className=\"text-center\">{formatMessage(messages.confirmEmailModalBody)}</p>\n      </MarketingModal>\n    </>\n  );\n};\nConfirmEmailBanner.propTypes = {};\n\nexport default ConfirmEmailBanner;\n","import React from 'react';\nimport { useWindowSize, breakpoints } from '@edx/paragon';\nimport track from 'tracking';\nimport { StrictDict } from 'utils';\nimport { linkNames } from 'tracking/constants';\n\nimport * as module from './hooks';\n\nexport const state = StrictDict({\n  isOpen: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useIsCollapsed = () => {\n  const { width } = useWindowSize();\n  const isCollapsed = React.useMemo(() => (width <= breakpoints.large.minWidth), [width]);\n  return isCollapsed;\n};\n\nexport const findCoursesNavClicked = (href) => track.findCourses.findCoursesClicked(href, {\n  linkName: linkNames.learnerHomeNavExplore,\n});\n\nexport const findCoursesNavDropdownClicked = (href) => track.findCourses.findCoursesClicked(href, {\n  linkName: linkNames.learnerHomeNavDropdownExplore,\n});\n\nexport const useLearnerDashboardHeaderData = () => {\n  const [isOpen, setIsOpen] = module.state.isOpen(false);\n  const toggleIsOpen = () => setIsOpen(!isOpen);\n\n  return {\n    isOpen,\n    toggleIsOpen,\n  };\n};\n\nexport default {\n  useIsCollapsed,\n  findCoursesNavClicked,\n  findCoursesNavDropdownClicked,\n  useLearnerDashboardHeaderData,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RecommendationsPaintedDoorBtn from 'widgets/RecommendationsPaintedDoorBtn';\nimport { COLLAPSED_NAVBAR, EXPANDED_NAVBAR } from 'widgets/RecommendationsPaintedDoorBtn/constants';\nimport {\n  usePaintedDoorExperimentContext,\n} from 'widgets/RecommendationsPaintedDoorBtn/PaintedDoorExperimentContext';\n\nexport const WidgetNavbar = ({ placement }) => {\n  const {\n    experimentVariation,\n    isPaintedDoorNavbarBtnVariation,\n    experimentLoading,\n  } = usePaintedDoorExperimentContext();\n\n  if (!experimentLoading && isPaintedDoorNavbarBtnVariation) {\n    return (\n      <RecommendationsPaintedDoorBtn placement={placement} experimentVariation={experimentVariation} />\n    );\n  }\n\n  return null;\n};\n\nWidgetNavbar.propTypes = {\n  placement: PropTypes.oneOf([COLLAPSED_NAVBAR, EXPANDED_NAVBAR]).isRequired,\n};\n\nexport default WidgetNavbar;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  dashboard: {\n    id: 'learnerVariantDashboard.menu.dashboard.label',\n    defaultMessage: 'Dashboard',\n    description: 'The text for the user menu Dashboard navigation link.',\n  },\n  dashboardPersonal: {\n    id: 'learnerVariantDashboard.menu.dashboardPersonal.label',\n    defaultMessage: 'Personal',\n    description: 'Link to personal dashboard in user menu',\n  },\n  dashboardSwitch: {\n    id: 'learnerVariantDashboard.menu.dashboardSwitch.label',\n    defaultMessage: 'SWITCH DASHBOARD',\n    description: 'Switch Dashboard header in the user menu',\n  },\n  help: {\n    id: 'learnerVariantDashboard.help.label',\n    defaultMessage: 'Help',\n    description: 'The text for the link to the Help Center',\n  },\n  profile: {\n    id: 'learnerVariantDashboard.menu.profile.label',\n    defaultMessage: 'Profile',\n    description: 'The text for the user menu Profile navigation link.',\n  },\n  viewPrograms: {\n    id: 'learnerVariantDashboard.menu.viewPrograms.label',\n    defaultMessage: 'View Programs',\n    description: 'The text for the user menu View Programs navigation link.',\n  },\n  account: {\n    id: 'learnerVariantDashboard.menu.account.label',\n    defaultMessage: 'Account',\n    description: 'The text for the user menu Account navigation link.',\n  },\n  orderHistory: {\n    id: 'learnerVariantDashboard.menu.orderHistory.label',\n    defaultMessage: 'Order History',\n    description: 'The text for the user menu Order History navigation link.',\n  },\n  signOut: {\n    id: 'learnerVariantDashboard.menu.signOut.label',\n    defaultMessage: 'Sign Out',\n    description: 'The label for the user menu Sign Out action.',\n  },\n  course: {\n    id: 'learnerVariantDashboard.course',\n    defaultMessage: 'Courses',\n    description: 'Header link for switching to dashboard page.',\n  },\n  program: {\n    id: 'learnerVariantDashboard.program',\n    defaultMessage: 'Programs',\n    description: 'Header link for switching to program page.',\n  },\n  discoverNew: {\n    id: 'learnerVariantDashboard.discoverNew',\n    defaultMessage: 'Discover New',\n    description: 'Header link for switching to discover page.',\n  },\n  logoAltText: {\n    id: 'learnerVariantDashboard.logoAltText',\n    defaultMessage: 'edX, Inc. Dashboard',\n    description: 'Alt text for the edX logo.',\n  },\n  collapseMenuOpenAltText: {\n    id: 'learnerVariantDashboard.collapseMenuOpenAltText',\n    defaultMessage: 'Menu',\n    description: 'Alt text for the collapse menu icon when the menu is open.',\n  },\n  collapseMenuClosedAltText: {\n    id: 'learnerVariantDashboard.collapseMenuClosedAltText',\n    defaultMessage: 'Close',\n    description: 'Alt text for the collapse menu icon when the menu is closed.',\n  },\n  career: {\n    id: 'leanerDashboard.menu.career.label',\n    defaultMessage: 'Career',\n    description: 'The text for the user menu Career navigation link.',\n  },\n  newAlert: {\n    id: 'header.menu.new.label',\n    defaultMessage: 'New',\n    description: 'The text announcing that an item in the user menu is New',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { AppContext } from '@edx/frontend-platform/react';\nimport { Button, Badge } from '@edx/paragon';\n\nimport WidgetNavbar from 'containers/WidgetContainers/WidgetNavbar';\nimport urls from 'data/services/lms/urls';\nimport { reduxHooks } from 'hooks';\nimport { COLLAPSED_NAVBAR } from 'widgets/RecommendationsPaintedDoorBtn/constants';\n\nimport { findCoursesNavDropdownClicked } from '../hooks';\nimport messages from '../messages';\n\nexport const CollapseMenuBody = ({ isOpen }) => {\n  const { formatMessage } = useIntl();\n  const { authenticatedUser } = React.useContext(AppContext);\n\n  const dashboard = reduxHooks.useEnterpriseDashboardData();\n  const { courseSearchUrl } = reduxHooks.usePlatformSettingsData();\n\n  const exploreCoursesClick = findCoursesNavDropdownClicked(urls.baseAppUrl(courseSearchUrl));\n\n  return (\n    isOpen && (\n      <div className=\"d-flex flex-column shadow-sm nav-small-menu\">\n        <Button as=\"a\" href=\"/\" variant=\"inverse-primary\">\n          {formatMessage(messages.course)}\n        </Button>\n        <Button as=\"a\" href={urls.programsUrl} variant=\"inverse-primary\">\n          {formatMessage(messages.program)}\n        </Button>\n        <Button\n          as=\"a\"\n          href={urls.baseAppUrl(courseSearchUrl)}\n          variant=\"inverse-primary\"\n          onClick={exploreCoursesClick}\n        >\n          {formatMessage(messages.discoverNew)}\n        </Button>\n        <WidgetNavbar placement={COLLAPSED_NAVBAR} />\n        <Button as=\"a\" href={getConfig().SUPPORT_URL} variant=\"inverse-primary\">\n          {formatMessage(messages.help)}\n        </Button>\n        {authenticatedUser && (\n          <>\n            {!!dashboard && (\n              <Button as=\"a\" href={dashboard.url} variant=\"inverse-primary\">\n                {formatMessage(messages.dashboard)}\n              </Button>\n            )}\n            {!dashboard && getConfig().CAREER_LINK_URL && (\n              <Button href={`${getConfig().CAREER_LINK_URL}`}>\n                {formatMessage(messages.career)}\n                <Badge className=\"px-2 mx-2\" variant=\"warning\">\n                  {formatMessage(messages.newAlert)}\n                </Badge>\n              </Button>\n            )}\n            <Button\n              as=\"a\"\n              href={`${getConfig().LMS_BASE_URL}/u/${\n                authenticatedUser.username\n              }`}\n              variant=\"inverse-primary\"\n            >\n              {formatMessage(messages.profile)}\n            </Button>\n            <Button\n              as=\"a\"\n              href={`${getConfig().LMS_BASE_URL}/account/settings`}\n              variant=\"inverse-primary\"\n            >\n              {formatMessage(messages.account)}\n            </Button>\n            {getConfig().ORDER_HISTORY_URL && (\n              <Button\n                as=\"a\"\n                variant=\"inverse-primary\"\n                href={getConfig().ORDER_HISTORY_URL}\n              >\n                {formatMessage(messages.orderHistory)}\n              </Button>\n            )}\n            <Button\n              as=\"a\"\n              href={getConfig().LOGOUT_URL}\n              variant=\"inverse-primary\"\n            >\n              {formatMessage(messages.signOut)}\n            </Button>\n          </>\n        )}\n      </div>\n    )\n  );\n};\n\nCollapseMenuBody.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default CollapseMenuBody;\n","import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\n\nimport { reduxHooks } from 'hooks';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport messages from './messages';\n\nexport const BrandLogo = () => {\n  const { formatMessage } = useIntl();\n  const dashboard = reduxHooks.useEnterpriseDashboardData();\n\n  return (\n    <a href={dashboard?.url || '/'} className=\"mx-auto\">\n      <img\n        className=\"logo py-3\"\n        src={getConfig().LOGO_URL}\n        alt={formatMessage(messages.logoAltText)}\n      />\n    </a>\n  );\n};\n\nBrandLogo.propTypes = {};\n\nexport default BrandLogo;\n","import React from 'react';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { MenuIcon, Close } from '@edx/paragon/icons';\nimport { IconButton, Icon } from '@edx/paragon';\n\nimport { useLearnerDashboardHeaderData, useIsCollapsed } from '../hooks';\n\nimport CollapseMenuBody from './CollapseMenuBody';\nimport BrandLogo from '../BrandLogo';\n\nimport messages from '../messages';\n\nexport const CollapsedHeader = () => {\n  const { formatMessage } = useIntl();\n  const isCollapsed = useIsCollapsed();\n  const { isOpen, toggleIsOpen } = useLearnerDashboardHeaderData();\n\n  return (\n    isCollapsed && (\n      <>\n        <header className=\"d-flex shadow-sm align-items-center learner-variant-header\">\n          <IconButton\n            invertColors\n            isActive\n            src={isOpen ? Close : MenuIcon}\n            iconAs={Icon}\n            alt={\n              isOpen\n                ? formatMessage(messages.collapseMenuOpenAltText)\n                : formatMessage(messages.collapseMenuClosedAltText)\n            }\n            onClick={toggleIsOpen}\n            variant=\"primary\"\n            className=\"p-4\"\n          />\n          <BrandLogo />\n        </header>\n        <CollapseMenuBody isOpen={isOpen} />\n      </>\n    )\n  );\n};\n\nCollapsedHeader.propTypes = {};\n\nexport default CollapsedHeader;\n","import React from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { AppContext } from '@edx/frontend-platform/react';\nimport { AvatarButton, Dropdown, Badge } from '@edx/paragon';\n\nimport { reduxHooks } from 'hooks';\n\nimport messages from '../messages';\n\nexport const AuthenticatedUserDropdown = () => {\n  const { formatMessage } = useIntl();\n  const { authenticatedUser } = React.useContext(AppContext);\n  const dashboard = reduxHooks.useEnterpriseDashboardData();\n\n  return (\n    authenticatedUser && (\n      <Dropdown className=\"user-dropdown pr4\">\n        <Dropdown.Toggle\n          as={AvatarButton}\n          src={authenticatedUser.profileImage}\n          id=\"user\"\n          variant=\"light\"\n          className=\"p-4\"\n        >\n          <span data-hj-suppress className=\"d-md-inline\">\n            {authenticatedUser.username}\n          </span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"dropdown-menu-right\">\n          { getConfig().ENABLE_EDX_PERSONAL_DASHBOARD && (\n            <>\n              <Dropdown.Header>{formatMessage(messages.dashboardSwitch)}</Dropdown.Header>\n              <Dropdown.Item as=\"a\" href=\"/edx-dashboard\" className=\"active\">\n                {formatMessage(messages.dashboardPersonal)}\n              </Dropdown.Item>\n              {!!dashboard && (\n                <Dropdown.Item as=\"a\" href={dashboard.url} key={dashboard.label}>\n                  {dashboard.label} {formatMessage(messages.dashboard)}\n                </Dropdown.Item>\n              )}\n              <Dropdown.Divider />\n            </>\n          )}\n\n          {!dashboard && getConfig().CAREER_LINK_URL && (\n            <Dropdown.Item href={`${getConfig().CAREER_LINK_URL}`}>\n              {formatMessage(messages.career)}\n              <Badge className=\"px-2 mx-2\" variant=\"warning\">\n                {formatMessage(messages.newAlert)}\n              </Badge>\n            </Dropdown.Item>\n          )}\n          <Dropdown.Item href={`${getConfig().ACCOUNT_PROFILE_URL}/u/${authenticatedUser.username}`}>\n            {formatMessage(messages.profile)}\n          </Dropdown.Item>\n          <Dropdown.Item href={getConfig().ACCOUNT_SETTINGS_URL}>\n            {formatMessage(messages.account)}\n          </Dropdown.Item>\n          {getConfig().ORDER_HISTORY_URL && (\n            <Dropdown.Item href={getConfig().ORDER_HISTORY_URL}>\n              {formatMessage(messages.orderHistory)}\n            </Dropdown.Item>\n          )}\n          <Dropdown.Divider />\n          <Dropdown.Item href={getConfig().LOGOUT_URL}>\n            {formatMessage(messages.signOut)}\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  );\n};\n\nAuthenticatedUserDropdown.propTypes = {};\n\nexport default AuthenticatedUserDropdown;\n","import React from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\n\nimport WidgetNavbar from 'containers/WidgetContainers/WidgetNavbar';\nimport urls from 'data/services/lms/urls';\nimport { reduxHooks } from 'hooks';\nimport { EXPANDED_NAVBAR } from 'widgets/RecommendationsPaintedDoorBtn/constants';\n\nimport AuthenticatedUserDropdown from './AuthenticatedUserDropdown';\nimport { useIsCollapsed, findCoursesNavClicked } from '../hooks';\nimport messages from '../messages';\nimport BrandLogo from '../BrandLogo';\n\nexport const ExpandedHeader = () => {\n  const { formatMessage } = useIntl();\n  const { courseSearchUrl } = reduxHooks.usePlatformSettingsData();\n  const isCollapsed = useIsCollapsed();\n\n  const exploreCoursesClick = findCoursesNavClicked(urls.baseAppUrl(courseSearchUrl));\n\n  return (\n    !isCollapsed && (\n    <header className=\"d-flex shadow-sm align-items-center learner-variant-header pl-4\">\n      <div className=\"flex-grow-1 d-flex align-items-center\">\n        <BrandLogo />\n\n        <Button\n          as=\"a\"\n          href=\"/\"\n          variant=\"inverse-primary\"\n          className=\"p-4 course-link\"\n        >\n          {formatMessage(messages.course)}\n        </Button>\n        <Button\n          as=\"a\"\n          href={urls.programsUrl}\n          variant=\"inverse-primary\"\n          className=\"p-4\"\n        >\n          {formatMessage(messages.program)}\n        </Button>\n        <Button\n          as=\"a\"\n          href={urls.baseAppUrl(courseSearchUrl)}\n          variant=\"inverse-primary\"\n          className=\"p-4\"\n          onClick={exploreCoursesClick}\n        >\n          {formatMessage(messages.discoverNew)}\n        </Button>\n        <WidgetNavbar placement={EXPANDED_NAVBAR} />\n        <span className=\"flex-grow-1\" />\n        <Button\n          as=\"a\"\n          href={getConfig().SUPPORT_URL}\n          variant=\"inverse-primary\"\n          className=\"p-4\"\n        >\n          {formatMessage(messages.help)}\n        </Button>\n      </div>\n\n      <AuthenticatedUserDropdown />\n    </header>\n    )\n  );\n};\n\nExpandedHeader.propTypes = {};\n\nexport default ExpandedHeader;\n","import React from 'react';\n\nimport MasqueradeBar from 'containers/MasqueradeBar';\nimport ConfirmEmailBanner from './ConfirmEmailBanner';\n\nimport CollapsedHeader from './CollapsedHeader';\nimport ExpandedHeader from './ExpandedHeader';\n\nimport './index.scss';\n\nexport const LearnerDashboardHeader = () => (\n  <>\n    <ConfirmEmailBanner />\n    <CollapsedHeader />\n    <ExpandedHeader />\n    <MasqueradeBar />\n  </>\n);\n\nLearnerDashboardHeader.propTypes = {};\n\nexport default LearnerDashboardHeader;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { useIntl } from '@edx/frontend-platform/i18n';\nimport { logError } from '@edx/frontend-platform/logging';\nimport { initializeHotjar } from '@edx/frontend-enterprise-hotjar';\n\nimport { ErrorPage, AppContext } from '@edx/frontend-platform/react';\nimport Footer from '@edx/frontend-component-footer';\nimport { Alert } from '@edx/paragon';\n\nimport { RequestKeys } from 'data/constants/requests';\nimport store from 'data/store';\nimport {\n  selectors,\n  actions,\n} from 'data/redux';\nimport { reduxHooks } from 'hooks';\nimport Dashboard from 'containers/Dashboard';\nimport ZendeskFab from 'components/ZendeskFab';\nimport { ExperimentProvider } from 'ExperimentContext';\n\nimport track from 'tracking';\n\nimport fakeData from 'data/services/lms/fakeData/courses';\n\nimport AppWrapper from 'containers/WidgetContainers/AppWrapper';\nimport LearnerDashboardHeader from 'containers/LearnerDashboardHeader';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport messages from './messages';\nimport './App.scss';\n\nexport const App = () => {\n  const { authenticatedUser } = React.useContext(AppContext);\n  const { formatMessage } = useIntl();\n  const isFailed = {\n    initialize: reduxHooks.useRequestIsFailed(RequestKeys.initialize),\n    refreshList: reduxHooks.useRequestIsFailed(RequestKeys.refreshList),\n  };\n  const hasNetworkFailure = isFailed.initialize || isFailed.refreshList;\n  const { supportEmail } = reduxHooks.usePlatformSettingsData();\n  const loadData = reduxHooks.useLoadData();\n\n  const optimizelyScript = () => {\n    if (getConfig().OPTIMIZELY_URL) {\n      return <script src={getConfig().OPTIMIZELY_URL} />;\n    } if (getConfig().OPTIMIZELY_PROJECT_ID) {\n      return (\n        <script\n          src={`${getConfig().MARKETING_SITE_BASE_URL}/optimizelyjs/${getConfig().OPTIMIZELY_PROJECT_ID}.js`}\n        />\n      );\n    }\n    return null;\n  };\n\n  React.useEffect(() => {\n    if (authenticatedUser?.administrator || getConfig().NODE_ENV === 'development') {\n      window.loadEmptyData = () => {\n        loadData({ ...fakeData.globalData, courses: [] });\n      };\n      window.loadMockData = () => {\n        loadData({\n          ...fakeData.globalData,\n          courses: [\n            ...fakeData.courseRunData,\n            ...fakeData.entitlementData,\n          ],\n        });\n      };\n      window.store = store;\n      window.selectors = selectors;\n      window.actions = actions;\n      window.track = track;\n    }\n    if (getConfig().HOTJAR_APP_ID) {\n      try {\n        initializeHotjar({\n          hotjarId: getConfig().HOTJAR_APP_ID,\n          hotjarVersion: getConfig().HOTJAR_VERSION,\n          hotjarDebug: !!getConfig().HOTJAR_DEBUG,\n        });\n      } catch (error) {\n        logError(error);\n      }\n    }\n  }, [authenticatedUser, loadData]);\n  return (\n    <>\n      <Helmet>\n        <title>{formatMessage(messages.pageTitle)}</title>\n        <link rel=\"shortcut icon\" href={getConfig().FAVICON_URL} type=\"image/x-icon\" />\n        {optimizelyScript()}\n      </Helmet>\n      <div>\n        <AppWrapper>\n          <LearnerDashboardHeader />\n          <main>\n            {hasNetworkFailure\n              ? (\n                <Alert variant=\"danger\">\n                  <ErrorPage message={formatMessage(messages.errorMessage, { supportEmail })} />\n                </Alert>\n              ) : (\n                <ExperimentProvider>\n                  <Dashboard />\n                </ExperimentProvider>\n              )}\n          </main>\n        </AppWrapper>\n        <Footer logo={getConfig().LOGO_POWERED_BY_OPEN_EDX_URL_SVG} />\n        <ZendeskFab />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient, getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { logError, logInfo } from '@edx/frontend-platform/logging';\n\nexport const noticesUrl = `${getConfig().LMS_BASE_URL}/notices/api/v1/unacknowledged`;\nexport const error404Message = 'This probably happened because the notices plugin is not installed on platform.';\n\nexport const getNotices = ({ onLoad }) => {\n  const authenticatedUser = getAuthenticatedUser();\n\n  const handleError = async (e) => {\n    // Error probably means that notices is not installed, which is fine.\n    const { customAttributes: { httpErrorStatus } } = e;\n    if (httpErrorStatus === 404) {\n      logInfo(`${e}. ${error404Message}`);\n    } else {\n      logError(e);\n    }\n  };\n  if (authenticatedUser) {\n    return getAuthenticatedHttpClient().get(noticesUrl, {}).then(onLoad).catch(handleError);\n  }\n  return null;\n};\n\nexport default { getNotices };\n","import React from 'react';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport { StrictDict } from 'utils';\nimport { getNotices } from './api';\nimport * as module from './hooks';\n\n/**\n * This component uses the platform-plugin-notices plugin to function.\n * If the user has an unacknowledged notice, they will be rerouted off\n * course home and onto a full-screen notice page. If the plugin is not\n * installed, or there are no notices, we just passthrough this component.\n */\nexport const state = StrictDict({\n  isRedirected: (val) => React.useState(val), // eslint-disable-line\n});\n\nexport const useNoticesWrapperData = () => {\n  const [isRedirected, setIsRedirected] = module.state.isRedirected();\n  React.useEffect(() => {\n    if (getConfig().ENABLE_NOTICES) {\n      getNotices({\n        onLoad: (data) => {\n          if (data?.data?.results?.length > 0) {\n            setIsRedirected(true);\n            window.location.replace(`${data.data.results[0]}?next=${window.location.href}`);\n          }\n        },\n      });\n    }\n  }, [setIsRedirected]);\n  return { isRedirected };\n};\n\nexport default useNoticesWrapperData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport useNoticesWrapperData from './hooks';\n\n/**\n * This component uses the platform-plugin-notices plugin to function.\n * If the user has an unacknowledged notice, they will be rerouted off\n * course home and onto a full-screen notice page. If the plugin is not\n * installed, or there are no notices, we just passthrough this component.\n */\nconst NoticesWrapper = ({ children }) => {\n  const { isRedirected } = useNoticesWrapperData();\n  return (\n    <div>\n      {isRedirected === true ? null : children}\n    </div>\n  );\n};\n\nNoticesWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default NoticesWrapper;\n","/* eslint-disable import/prefer-default-export */\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Route, Navigate, Routes,\n} from 'react-router-dom';\n\nimport {\n  AppProvider,\n  ErrorPage,\n  PageWrap,\n} from '@edx/frontend-platform/react';\nimport store from 'data/store';\nimport {\n  APP_READY,\n  APP_INIT_ERROR,\n  initialize,\n  subscribe,\n  mergeConfig,\n} from '@edx/frontend-platform';\n\nimport { configuration } from './config';\n\nimport messages from './i18n';\n\nimport App from './App';\nimport NoticesWrapper from './components/NoticesWrapper';\n\nsubscribe(APP_READY, () => {\n  ReactDOM.render(\n    <AppProvider store={store}>\n      <NoticesWrapper>\n        <Routes>\n          <Route path=\"/\" element={<PageWrap><App /></PageWrap>} />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </NoticesWrapper>\n    </AppProvider>,\n    document.getElementById('root'),\n  );\n});\n\nsubscribe(APP_INIT_ERROR, (error) => {\n  ReactDOM.render(\n    <ErrorPage message={error.message} />,\n    document.getElementById('root'),\n  );\n});\n\nexport const appName = 'LearnerHomeAppConfig';\n\ninitialize({\n  handlers: {\n    config: () => {\n      mergeConfig(configuration, appName);\n    },\n  },\n  messages,\n  requireAuthenticatedUser: true,\n});\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["strictGet","target","name","Symbol","toStringTag","_typeof","console","log","toString","error","e","Error","concat","stack","dict","Proxy","get","formatDate","date","moment","toDate","year","month","day","nullMethod","RequestStates","StrictDict","inactive","pending","completed","failed","RequestKeys","initialize","refreshList","newEntitlementEnrollment","leaveEntitlementEnrollment","switchEntitlementSession","unenrollFromCourse","updateEmailSettings","enrollEntitlementSession","leaveEntitlementSession","masquerade","recommendedCourses","ErrorStatuses","missingParam","badRequest","unauthorized","forbidden","notFound","conflict","serverError","cardId","val","today","Date","now","app","createSlice","initialState","pageNumber","courseData","entitlement","emailConfirmation","enterpriseDashboard","platformSettings","suggestedCourses","filterState","selectSessionModal","reducers","loadCourses","state","_ref","courses","payload","_objectSpread","reduce","obj","curr","index","out","enrollment","lastEnrolled","_defineProperty","loadGlobalData","_ref2","socialShareSettings","updateSelectSessionModal","_ref3","setPageNumber","_ref4","actions","reducer","appSelector","mkSimpleSelector","cb","createSelector","module","simpleSelectors","cardSimpleSelectors","certificate","course","courseProvider","courseRun","credit","_ref5","_ref6","_ref7","gradeData","_ref8","relatedPrograms","_ref9","programs","numCourses","Object","keys","length","hasCourses","num","hasAvailableDashboards","data","isLearnerPortalEnabled","showSelectSessionModal","getBaseUrl","getConfig","LMS_BASE_URL","getApiUrl","event","courseUnenroll","updateUrl","base","url","startsWith","baseAppUrl","programsUrl","creditPurchaseUrl","courseId","ECOMMERCE_BASE_URL","creditRequestUrl","providerId","entitlementEnrollment","uuid","getInitApiUrl","learningMfeUrl","LEARNING_BASE_URL","EXECUTIVE_EDUCATION_COURSE_MODES","mkCardSelector","simpleSelector","selector","dateSixMonthsFromNow","setDate","getDate","loadDateVal","courseCard","availableDate","certPreviewUrl","isDownloadable","isEarnedButUnavailable","isEarned","isRestricted","bannerImgSrc","courseNumber","courseName","socialShareUrl","endDate","startDate","isArchived","isStarted","minPassingGrade","Math","floor","homeUrl","marketingUrl","upgradeUrl","progressUrl","resumeUrl","unenrollUrl","isEligible","providerStatusUrl","providerName","purchased","requestStatus","isEnrolled","_enrollment$coursewar","coursewareAccess","isStaff","hasUnmetPrereqs","isTooEarly","hasAccess","hasStarted","accessExpirationDate","canUpgrade","isAudit","isAuditAccessExpired","isVerified","isEmailEnabled","hasOptedOutOfEmail","mode","isExecEd2UCourse","includes","_entitlement$availabl","isEntitlement","deadline","changeDeadline","deadlinePassed","showExpirationWarning","isFulfilled","availableSessions","isExpired","hasSessions","canChange","isPassing","list","map","program","logoImgSrc","numberOfCourses","programType","programUrl","provider","title","PUBLIC_PATH","window","location","pathname","slice","SortKeys","enrolled","FilterKeys","inProgress","notStarted","done","notEnrolled","upgraded","courseFilters","_StrictDict","transforms","_StrictDict2","toLowerCase","currentList","allCourses","transform","reverse","sortBy","filters","filter","match","sort","v1","v2","_map2","a","b","appSelectors","pageSize","values","visible","numPages","ceil","_initialState","status","requests","startRequest","requestKey","completeRequest","response","failRequest","clearRequest","statusSelector","fn","isPending","isCompleted","isFailed","errorStatus","request","_request$error","isInactive","errorCode","_request$error2","isMasquerading","isMasqueradingFailed","isMasqueradingPending","masqueradeErrorStatus","modules","moduleProps","propName","moduleKey","value","rootReducer","combineReducers","selectors","loggerMiddleware","middleware","createLogger","thunkMiddleware","redux","createStore","composeWithDevTools","applyMiddleware","apply","configuration","process","SEGMENT_KEY","SESSION_COOKIE_DOMAIN","ZENDESK_KEY","SUPPORT_URL","ENABLE_NOTICES","CAREER_LINK_URL","LOGO_URL","ENABLE_EDX_PERSONAL_DASHBOARD","appMessages","ar","fr","footerMessages","paragonMessages","usePageNumber","useSelector","useEmailConfirmationData","useEnterpriseDashboardData","usePlatformSettingsData","useSelectSessionModalData","useSocialShareSettings","useHasCourses","useHasAvailableDashboards","useCurrentCourseList","opts","useShowSelectSessionModal","useCourseCardData","useCardCertificateData","useCardCourseData","useCardCourseRunData","useCardCreditData","useCardEnrollmentData","useCardEntitlementData","useCardGradeData","useCardProviderData","useCardRelatedProgramsData","useCardSocialSettingsData","defaultSettings","isEnabled","shareUrl","facebook","twitter","loadSettings","utmParams","useCardExecEdTrackingParam","authOrgId","useUpdateSelectSessionModalCallback","dispatch","useDispatch","useTrackCourseEvent","tracker","_len","arguments","args","Array","_key","useSetPageNumber","useLoadData","globalData","_objectWithoutProperties","_excluded","useMasqueradeData","requestName","useRequestIsPending","useRequestIsFailed","useRequestIsCompleted","useRequestIsInactive","useRequestError","useRequestErrorCode","useRequestErrorStatus","useRequestData","useMakeNetworkRequest","promise","onSuccess","onFailure","then","useClearRequest","_getAuthenticatedHttp","getAuthenticatedHttpClient","post","body","queryString","client","stringifyUrl","query","skipNull","skipEmptyString","categories","dashboard","upgrade","userEngagement","searchButton","learnerPortal","enterCourseClicked","courseImageClicked","courseTitleClicked","courseOptionsDropdownClicked","upgradeButtonClicked","upgradeButtonClickedEnrollment","upgradeButtonClickedUpsell","shareClicked","userSettingsChanged","newSession","switchSession","leaveSession","unenrollReason","entitlementUnenrollReason","enterpriseDashboardModalOpened","enterpriseDashboardModalCTAClicked","enterpriseDashboardModalClosed","eventNames","findCoursesClicked","purchaseCredit","filterClicked","filterOptionSelected","linkNames","learnerHomeNavExplore","learnerHomeNavDropdownExplore","apiKeys","receiveEmails","enrollmentAction","courseRunId","user","isRefund","apiValues","on","unenroll","unenrollmentAction","enableEmailsAction","logEvent","eventName","urls","courserun_key","event_type","page","href","JSON","stringify","undefined","reduxHooks","useNetworkRequest","action","makeNetworkRequest","useInitializeApp","loadData","api","useNewEntitlementEnrollment","selection","useSwitchEntitlementEnrollment","useLeaveEntitlementSession","_reduxHooks$useCardEn3","isRefundable","useUnenrollFromCourse","useMasqueradeAs","useClearMasquerade","initializeApp","useUpdateEmailSettings","enable","useSendConfirmEmail","sendEmailUrl","useCreateCreditRequest","username","React","AppContext","authenticatedUser","course_key","useValueCallback","prereqs","useFormatDate","useIntl","dateFormatter","apiHooks","utilHooks","utils","defineMessages","enterpriseDialogHeader","id","defaultMessage","description","enterpriseDialogBody","enterpriseDialogDismissButton","enterpriseDialogConfirmButton","createEventTracker","options","sendTrackEvent","app_name","createLinkTracker","preventDefault","setTimeout","global","upsellOptions","linkName","linkType","pageName","linkCategory","courseEventTracker","category","label","courseLinkTracker","upgradeClicked","purchase","engagementOptions","displayName","engagement","reason","course_id","modalOpened","enterpriseUUID","modalCTAClicked","modalClosed","source","entitlements","fromCourseRun","toCourseRun","socialShare","site","social_media_site","findCourses","showModal","_track$enterpriseDash","track","_module$state$showMod2","setShowModal","trackOpened","trackClose","trackEscape","handleCTAClick","handleClose","handleEscape","EnterpriseDashboardModal","formatMessage","_useEnterpriseDashboa","useEnterpriseDashboardHook","_jsx","ModalDialog","isOpen","onClose","hasCloseButton","children","_jsxs","className","style","textAlign","messages","ActionRow","Button","variant","onClick","type","propTypes","LEAVE_OPTION","changeOrLeaveHeader","selectSessionHeader","changeOrLeaveHint","selectSessionHint","leaveSessionOption","nevermind","confirmSession","selectedSession","header","hint","selectedCardId","_reduxHooks$useCardEn","courseTitle","switchEntitlementEnrollment","_module$state$selecte2","setSelectedSession","closeSessionModal","trackNewSession","trackSwitchSession","trackLeaveSession","showLeaveOption","handleSelection","handleSubmit","_useSelectSessionModa","isFullscreenOnMobile","size","Form","Group","Label","RadioSet","onChange","session","Radio","clearAll","sortLastEnrolled","sortTitle","refine","CourseStatus","Checkbox","filterKey","PropTypes","isRequired","filterOrder","FilterForm","handleFilterChange","CheckboxSet","SortForm","handleSortChange","_Fragment","CourseFilterControls","setSortBy","setFilters","_useCourseFilterContr","_useToggle2","_slicedToArray","useToggle","toggleOpen","toggleClose","_module$state$target2","open","close","setTarget","_ref2$target","checked","add","remove","useCourseFilterControlsData","isMobile","useWindowSize","width","breakpoints","small","minWidth","ref","iconBefore","Tune","disabled","Sheet","position","show","ModalCloseButton","Icon","src","Close","ModalPopup","positionRef","placement","ActiveCourseFilters","handleRemoveFilter","Chip","iconAfter","CloseSmall","clear","useIsCollapsed","maxWidth","Banner","icon","Alert","defaultProps","Info","auditAccessExpired","upgradeToAccess","findAnotherCourse","upgradeDeadlinePassed","exploreCourseDetails","certRestricted","certRestrictedNoEmail","certRefundContactBilling","certRefundContactBillingNoEmail","passingGrade","notEligibleForCert","viewGrades","certReady","viewCertificate","certMinGrade","downloadCertificate","gradeAndCertReadyAfter","entitlementUnavailable","entitlementExpiringSoon","entitlementExpired","selectSession","prerequisitesNotMet","courseHasNotStarted","CourseBanner","_reduxHooks$useCardEn2","hasUnmetPrerequisites","Hyperlink","isInline","destination","isActive","CertificateBanner","_reduxHooks$useCardCo2","_reduxHooks$usePlatfo","supportEmail","billingEmail","emailLink","address","MailtoLink","to","CheckCircle","CreditRequestForm","requestData","current","click","useCreditRequestFormData","parameters","method","key","FormControl","as","CreditContent","message","rel","ProviderLink","approved","congratulations","eligible","eligibleFromProvider","getCredit","mustRequest","received","rejected","requestCredit","viewCredit","viewDetails","ApprovedContent","_reduxHooks$useCardCr","linkToProviderSite","EligibleContent","creditRequestData","_module$state$creditR2","setRequestData","createCreditApiRequest","createCreditRequest","MustRequestContent","_hooks$useCreditReque","hooks","PendingContent","RejectedContent","statusComponents","errorNoEmail","CreditBanner","hookData","ContentComponent","supportEmailLink","EntitlementBanner","openSessionModal","selectSessionButton","ProgramsList","expandBanner","expandBannerAlt","collapseBanner","collapseBannerAlt","RelatedProgramsBanner","programData","Program","ProgramList","CourseCardBanners","_reduxHooks$useCardCo","disableViewCourse","disableBeginCourse","disableResumeCourse","disableUpgradeCourse","disableSelectSession","disableCourseTitle","bannerAlt","verifiedBanner","verifiedHoverDescription","verifiedBannerRibbonAlt","CourseCardImage","orientation","useActionDisabledState","handleImageClicked","wrapperClassName","image","alt","Badge","verifiedRibbon","tabIndex","toggle","closeModal","_module$state$toggle2","isOptedOut","setIsOptedOut","onToggle","save","emailsOff","emailsOn","EmailSettingsModal","_useEmailData","useEmailData","Switch","confirmHeader","confirmCancel","confirmUnenroll","reasonHeading","reasonSkip","reasonSubmit","finishHeading","finishThanksText","finishText","finishReturn","ConfirmPane","handleConfirm","reasonKeys","difficulty","goals","broken","time","browse","support","quality","easy","custom","order","ReasonPane","selectOption","selected","constants","Control","customOption","placeholder","customPlaceholder","handleSkip","hasReason","FinishedPane","gaveReason","isSkipped","selectedReason","isSubmitted","confirmed","modalStates","confirm","finished","useUnenrollData","modalState","_module$state$confirm2","isConfirmed","setIsConfirmed","setSelectedReason","_module$state$customO2","setCustomOption","_module$state$isSkipp2","setIsSkipped","_module$state$isSubmi2","setIsSubmitted","submittedReason","handleTrackReasons","handleClear","useUnenrollReasons","closeAndRefresh","UnenrollConfirmModal","_useUnenrollData","showFullscreen","classNames","shadow","dropdownAlt","emailSettings","shareToFacebook","shareToTwitter","shareQuote","testIds","emailSettingsModalToggle","SocialShareMenu","_reduxHooks$useCardSo","handleTwitterShare","handleFacebookShare","Dropdown","Item","ReactShare","socialBrand","resetButtonStyle","stateKeys","isUnenrollConfirmVisible","isEmailSettingsVisible","unenrollModalToggle","CourseCardMenu","_useKeyedState4","isVisible","setIsVisible","useKeyedState","hide","unenrollModal","_useKeyedState2","handleToggleDropdown","trackCourseEvent","useHandleToggleDropdown","_useOptionVisibility","shouldShowUnenrollItem","shouldShowDropdown","useOptionVisibility","Toggle","IconButton","MoreVert","iconAs","Menu","props","isSmall","medium","beginCourse","resume","viewCourse","UpgradeButton","enabledProps","ActionButton","Locked","SelectSessionButton","BeginCourseButton","execEdTrackingParam","handleClick","ResumeButton","ViewCourseButton","CourseCardActions","accessExpired","accessExpires","courseEnded","courseEnds","courseStarts","unknownProviderName","changeOrLeaveSessionButton","useAccessMessage","CourseCardDetails","_useCardDetailsData","accessMessage","changeOrLeaveSessionMessage","useCardDetailsData","CourseCardTitle","handleTitleClicked","CourseCard","isCollapsed","Card","Body","Header","Section","Footer","lookingForChallengePrompt","exploreCoursesPrompt","exploreCoursesButton","courseSearchUrl","Image","emptyCourseSVG","Search","myCourses","CourseList","_useCourseListData","_useCheckboxSetValues2","useCheckboxSetValues","_module$state$sortBy2","querySearch","search","parseNumbers","_reduxHooks$useCurren","disable_pagination","visibleList","filterOptions","showFilters","useCourseListData","Pagination","paginationLabel","pageCount","onPageSelect","NoCoursesView","recommendedCourseClicked","findCoursesWidget","findCoursesButton","arrowIcon","ArrowForward","LookingForChallengeWidget","ImageCap","moreCoursesSVG","srcAlt","arrow","loadingSR","errorMessage","pageTitle","sidebarShowing","useDashboardMessages","spinnerScreenReaderText","_module$state$sidebar2","setSidebarShowing","isDashboardCollapsed","large","Spinner","animation","screenReaderText","isControl","handleCourseClick","courseKey","is_control","logoImageUrl","Truncate","lines","recommendationsHeading","popularCoursesHeading","variationGroup","recommendationHomeBtnClicked","recommendationHomeModalInterestBtnClicked","recommendationHomeModalSkipBtnClicked","enterpriseUser","experimentData","PaintedDoorExperimentContext","experimentVariation","isPaintedDoorNavbarBtnVariation","isPaintedDoorWidgetBtnVariation","isPaintedDoorControlVariation","experimentLoading","PaintedDoorExperimentProvider","_module$state$experim2","setExperimentData","_module$state$enterpr2","isEnterpriseUser","isLoading","setEnterpriseUser","initIsPending","confirmationData","prev","useIsEnterpriseUser","contextValue","timer","optimizely","push","variation","experiments","PAINTED_DOOR_RECOMMENDATIONS_EXP_ID","selectedVariant","getVariationMap","getPaintedDoorRecommendationsExperimentVariation","trackPaintedDoorVariationGroup","clearTimeout","Provider","usePaintedDoorExperimentContext","COLLAPSED_NAVBAR","EXPANDED_NAVBAR","RECOMMENDATIONS_PANEL","recommendationsFeatureText","recommendationsAlertText","recommendationsModalHeading","modalSkipButton","modalCountMeButton","recommendedForYou","seeAllRecommendationsButton","NavbarButton","ModalView","isFullscreenScroll","isBlocking","Title","CloseButton","trackPaintedDoorRecommendationHomeSkipBtnClicked","trackPaintedDoorRecommendationHomeInterestBtnClicked","isModalOpen","RecommendationsPanelButton","RecommendationsPaintedDoorBtn","_usePaintedDoorModal","_module$state$isModal2","setIsModalOpen","toggleModal","usePaintedDoorModal","PaintedDoorModal","LoadedView","_usePaintedDoorExperi","requestState","_data$data","_data$data2","_data$data3","_module$state$request2","setRequestState","_module$state$data2","setData","isMounted","_module$state$courses2","setCourses","loadMockRecommendations","testData","_data$data4","isLoaded","_hooks$useRecommendat","LoadingView","experiment","countryCode","useCountryCode","setCountryCode","ExperimentContext","ExperimentProvider","_module$state$country2","isExperimentActive","inRecommendationsVariant","setExperiment","useExperimentContext","bootCamp","executiveEducation","OPTIMIZELY_SDK_KEY","OPTIMIZELY_FULL_STACK_SDK_KEY","setLogLevel","createInstance","sdkKey","productRecommendationsViewed","productHeaderClicked","productCardClicked","courseCardClicked","trackProductRecommendationsViewed","userId","userAttributes","optimizelyClient","courseShape","prospectusPath","owners","activeCourseRun","courseType","courseTypeToProductTypeMap","verified","audit","professional","masters","courseTypeToProductLineMap","_courseTypeToProductL","convertCourseRunKeyToCourseKey","courseRunKey","splitCourseKey","split","discoveryCardClicked","recommendationsHeaderClicked","recommendationsViewed","recommenderGroup","productRecommenderGroup","useState","useMostRecentCourseRunKey","useEffect","handleSuccess","handleError","crossProductAndAmplitudeRecommendationsUrl","mostRecentCourseRunKey","getAuthenticatedUser","_data$crossProductCou","crossProductCourses","productRecommendations","hasFailed","WidgetSidebar","_hooks$useShowRecomme","RecommendationsPanel","Skeleton","height","executiveEducationHeading","executiveEducationDescription","bootcampHeading","bootcampDescription","courseHeading","courseDescription","ProductCard","link","hasQueryStringParameters","subtitle","headerImage","schoolLogo","redirectUrl","URL","crossProductTypes","trackProductCardClicked","product_line","trackCourseCardClicked","isClickable","logoSrc","logoAlt","ellipsis","ProductCardHeader","productTypeDetail","heading","getProductTypeDetail","headerUrl","MARKETING_SITE_BASE_URL","trackProductHeaderClicked","ChevronRight","ProductCardContainer","finalProductList","courseTypes","courseObj","item","openCourses","includesCrossProductTypes","useMemo","openCourseList","Set","Container","_hooks$useProductReco","shouldShowPlaceholder","amplitudeCourses","enterpriseDashboardData","hasRequestCompleted","_useExperimentContext","_activateExperiment","is_mobile_user","is_enterprise_user","activate","experimentActivated","inExperimentVariant","activateProductRecommendationsExperiment","ProductRecommendations","columnConfig","courseList","withSidebar","lg","span","offset","xl","noSidebar","sidebar","DashboardLayout","Sidebar","_hooks$useDashboardLa","courseListColumnProps","fluid","Row","Col","WidgetFooter","SelectSessionModal","LoadedSidebar","NoCoursesSidebar","supportTitle","selectTicketForm","setting","cookies","webWidget","contactOptions","enabled","chat","suppress","departments","contactForm","ticketForms","subject","fields","prefill","attachments","helpCenter","originalArticleButton","answerBot","contactOnlyAfterQuery","avatar","Zendesk","defer","zendeskKey","requestStatuses","providers","edx","mit","programTypeUrl","genCourseId","genCourseNumber","genCourseShareUrl","genEntitlementUUID","pastDate","futureDate","soonDate","soonDateStr","toDateString","genCourseRunData","creditData","genEnrollmentData","genCertificateData","auditCourses","grade","verifiedCourses","fulfilledEntitlementCourses","enrollmentUrl","creditCourses","creditVals","courseRuns","entitlementCourses","providerOptions","emailOptions","programsOptions","getOption","compileCourseRunData","lastEnrolledDate","toISOString","compileEntitlementData","_excluded2","courseRunData","entitlementData","isNeeded","courseUrl","AppWrapper","ViewAs","ViewingAs","SubmitButton","StudentNameInput","NoStudentFound","UnknownError","masqueradeInput","masqueradeErrorMessageMap","useMasqueradeBarData","handleMasqueradeAs","handleClearMasquerade","_reduxHooks$useMasque","_module$useMasquerade","_module$state$masquer2","setMasqueradeInput","handleMasqueradeInputChange","masqueradeErrorMessage","getMasqueradeErrorMessage","canMasquerade","administrator","handleMasqueradeSubmit","_useMasqueradeBarData","FormLabel","inline","PersonSearch","FormGroup","isInvalid","floatingLabel","FormControlFeedback","hasIcon","StatefulButton","labels","default","confirmNowButton","confirmEmailTextReminderBanner","verifiedConfirmEmailButton","confirmEmailModalHeader","confirmEmailModalBody","confirmEmailImageAlt","showPageBanner","showConfirmModal","ConfirmEmailBanner","_useConfirmEmailBanne","_module$state$showPag2","setShowPageBanner","_module$state$showCon2","setShowConfirmModal","closePageBanner","closeConfirmModal","sendConfirmEmail","openConfirmModalButtonClick","userConfirmEmailButtonClick","useConfirmEmailBannerData","PageBanner","dismissible","onDismiss","MarketingModal","heroNode","Hero","confirmEmailSVG","footerNode","useLearnerDashboardHeaderData","_module$state$isOpen2","setIsOpen","toggleIsOpen","WidgetNavbar","dashboardPersonal","dashboardSwitch","help","profile","viewPrograms","account","orderHistory","signOut","discoverNew","logoAltText","collapseMenuOpenAltText","collapseMenuClosedAltText","career","newAlert","CollapseMenuBody","exploreCoursesClick","ORDER_HISTORY_URL","LOGOUT_URL","BrandLogo","CollapsedHeader","_useLearnerDashboardH","invertColors","MenuIcon","AuthenticatedUserDropdown","AvatarButton","profileImage","Divider","ACCOUNT_PROFILE_URL","ACCOUNT_SETTINGS_URL","ExpandedHeader","LearnerDashboardHeader","MasqueradeBar","hasNetworkFailure","NODE_ENV","loadEmptyData","fakeData","loadMockData","_toConsumableArray","store","HOTJAR_APP_ID","initializeHotjar","hotjarId","hotjarVersion","HOTJAR_VERSION","hotjarDebug","HOTJAR_DEBUG","logError","Helmet","FAVICON_URL","OPTIMIZELY_URL","OPTIMIZELY_PROJECT_ID","ErrorPage","Dashboard","logo","LOGO_POWERED_BY_OPEN_EDX_URL_SVG","ZendeskFab","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","iterator","c","asyncIterator","u","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","pop","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","noticesUrl","isRedirected","_module$state$isRedir2","setIsRedirected","onLoad","results","replace","_callee","_context","customAttributes","httpErrorStatus","logInfo","self","err","_x","NoticesWrapper","useNoticesWrapperData","subscribe","APP_READY","ReactDOM","AppProvider","Routes","Route","path","element","PageWrap","App","Navigate","document","getElementById","APP_INIT_ERROR","handlers","config","mergeConfig","requireAuthenticatedUser","webpackContext","req","webpackContextResolve","__webpack_require__","code","exports"],"sourceRoot":""}